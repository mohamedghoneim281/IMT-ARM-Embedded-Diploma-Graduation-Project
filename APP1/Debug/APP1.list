
APP1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08006400  08006400  00006400  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002a18  08006594  08006594  00006594  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  08008fac  08008fac  00008fac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008fd4  08008fd4  0001000c  2**0
                  CONTENTS
  4 .ARM          00000008  08008fd4  08008fd4  00008fd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008fdc  08008fdc  0001000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008fdc  08008fdc  00008fdc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008fe0  08008fe0  00008fe0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  08008fe4  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000150  2000000c  08008ff0  0001000c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000015c  08008ff0  0001015c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001000c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0001003c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00008848  00000000  00000000  0001007f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001c2c  00000000  00000000  000188c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000007e8  00000000  00000000  0001a4f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000005f9  00000000  00000000  0001ace0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00015fd1  00000000  00000000  0001b2d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000ab98  00000000  00000000  000312aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00084f49  00000000  00000000  0003be42  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00001e68  00000000  00000000  000c0d8c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005d  00000000  00000000  000c2bf4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08006594 <__do_global_dtors_aux>:
 8006594:	b510      	push	{r4, lr}
 8006596:	4c05      	ldr	r4, [pc, #20]	; (80065ac <__do_global_dtors_aux+0x18>)
 8006598:	7823      	ldrb	r3, [r4, #0]
 800659a:	b933      	cbnz	r3, 80065aa <__do_global_dtors_aux+0x16>
 800659c:	4b04      	ldr	r3, [pc, #16]	; (80065b0 <__do_global_dtors_aux+0x1c>)
 800659e:	b113      	cbz	r3, 80065a6 <__do_global_dtors_aux+0x12>
 80065a0:	4804      	ldr	r0, [pc, #16]	; (80065b4 <__do_global_dtors_aux+0x20>)
 80065a2:	f3af 8000 	nop.w
 80065a6:	2301      	movs	r3, #1
 80065a8:	7023      	strb	r3, [r4, #0]
 80065aa:	bd10      	pop	{r4, pc}
 80065ac:	2000000c 	.word	0x2000000c
 80065b0:	00000000 	.word	0x00000000
 80065b4:	08008f94 	.word	0x08008f94

080065b8 <frame_dummy>:
 80065b8:	b508      	push	{r3, lr}
 80065ba:	4b03      	ldr	r3, [pc, #12]	; (80065c8 <frame_dummy+0x10>)
 80065bc:	b11b      	cbz	r3, 80065c6 <frame_dummy+0xe>
 80065be:	4903      	ldr	r1, [pc, #12]	; (80065cc <frame_dummy+0x14>)
 80065c0:	4803      	ldr	r0, [pc, #12]	; (80065d0 <frame_dummy+0x18>)
 80065c2:	f3af 8000 	nop.w
 80065c6:	bd08      	pop	{r3, pc}
 80065c8:	00000000 	.word	0x00000000
 80065cc:	20000010 	.word	0x20000010
 80065d0:	08008f94 	.word	0x08008f94

080065d4 <__aeabi_uldivmod>:
 80065d4:	b953      	cbnz	r3, 80065ec <__aeabi_uldivmod+0x18>
 80065d6:	b94a      	cbnz	r2, 80065ec <__aeabi_uldivmod+0x18>
 80065d8:	2900      	cmp	r1, #0
 80065da:	bf08      	it	eq
 80065dc:	2800      	cmpeq	r0, #0
 80065de:	bf1c      	itt	ne
 80065e0:	f04f 31ff 	movne.w	r1, #4294967295
 80065e4:	f04f 30ff 	movne.w	r0, #4294967295
 80065e8:	f000 b970 	b.w	80068cc <__aeabi_idiv0>
 80065ec:	f1ad 0c08 	sub.w	ip, sp, #8
 80065f0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80065f4:	f000 f806 	bl	8006604 <__udivmoddi4>
 80065f8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80065fc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006600:	b004      	add	sp, #16
 8006602:	4770      	bx	lr

08006604 <__udivmoddi4>:
 8006604:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006608:	9e08      	ldr	r6, [sp, #32]
 800660a:	460d      	mov	r5, r1
 800660c:	4604      	mov	r4, r0
 800660e:	460f      	mov	r7, r1
 8006610:	2b00      	cmp	r3, #0
 8006612:	d14a      	bne.n	80066aa <__udivmoddi4+0xa6>
 8006614:	428a      	cmp	r2, r1
 8006616:	4694      	mov	ip, r2
 8006618:	d965      	bls.n	80066e6 <__udivmoddi4+0xe2>
 800661a:	fab2 f382 	clz	r3, r2
 800661e:	b143      	cbz	r3, 8006632 <__udivmoddi4+0x2e>
 8006620:	fa02 fc03 	lsl.w	ip, r2, r3
 8006624:	f1c3 0220 	rsb	r2, r3, #32
 8006628:	409f      	lsls	r7, r3
 800662a:	fa20 f202 	lsr.w	r2, r0, r2
 800662e:	4317      	orrs	r7, r2
 8006630:	409c      	lsls	r4, r3
 8006632:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8006636:	fa1f f58c 	uxth.w	r5, ip
 800663a:	fbb7 f1fe 	udiv	r1, r7, lr
 800663e:	0c22      	lsrs	r2, r4, #16
 8006640:	fb0e 7711 	mls	r7, lr, r1, r7
 8006644:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8006648:	fb01 f005 	mul.w	r0, r1, r5
 800664c:	4290      	cmp	r0, r2
 800664e:	d90a      	bls.n	8006666 <__udivmoddi4+0x62>
 8006650:	eb1c 0202 	adds.w	r2, ip, r2
 8006654:	f101 37ff 	add.w	r7, r1, #4294967295
 8006658:	f080 811c 	bcs.w	8006894 <__udivmoddi4+0x290>
 800665c:	4290      	cmp	r0, r2
 800665e:	f240 8119 	bls.w	8006894 <__udivmoddi4+0x290>
 8006662:	3902      	subs	r1, #2
 8006664:	4462      	add	r2, ip
 8006666:	1a12      	subs	r2, r2, r0
 8006668:	b2a4      	uxth	r4, r4
 800666a:	fbb2 f0fe 	udiv	r0, r2, lr
 800666e:	fb0e 2210 	mls	r2, lr, r0, r2
 8006672:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8006676:	fb00 f505 	mul.w	r5, r0, r5
 800667a:	42a5      	cmp	r5, r4
 800667c:	d90a      	bls.n	8006694 <__udivmoddi4+0x90>
 800667e:	eb1c 0404 	adds.w	r4, ip, r4
 8006682:	f100 32ff 	add.w	r2, r0, #4294967295
 8006686:	f080 8107 	bcs.w	8006898 <__udivmoddi4+0x294>
 800668a:	42a5      	cmp	r5, r4
 800668c:	f240 8104 	bls.w	8006898 <__udivmoddi4+0x294>
 8006690:	4464      	add	r4, ip
 8006692:	3802      	subs	r0, #2
 8006694:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8006698:	1b64      	subs	r4, r4, r5
 800669a:	2100      	movs	r1, #0
 800669c:	b11e      	cbz	r6, 80066a6 <__udivmoddi4+0xa2>
 800669e:	40dc      	lsrs	r4, r3
 80066a0:	2300      	movs	r3, #0
 80066a2:	e9c6 4300 	strd	r4, r3, [r6]
 80066a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80066aa:	428b      	cmp	r3, r1
 80066ac:	d908      	bls.n	80066c0 <__udivmoddi4+0xbc>
 80066ae:	2e00      	cmp	r6, #0
 80066b0:	f000 80ed 	beq.w	800688e <__udivmoddi4+0x28a>
 80066b4:	2100      	movs	r1, #0
 80066b6:	e9c6 0500 	strd	r0, r5, [r6]
 80066ba:	4608      	mov	r0, r1
 80066bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80066c0:	fab3 f183 	clz	r1, r3
 80066c4:	2900      	cmp	r1, #0
 80066c6:	d149      	bne.n	800675c <__udivmoddi4+0x158>
 80066c8:	42ab      	cmp	r3, r5
 80066ca:	d302      	bcc.n	80066d2 <__udivmoddi4+0xce>
 80066cc:	4282      	cmp	r2, r0
 80066ce:	f200 80f8 	bhi.w	80068c2 <__udivmoddi4+0x2be>
 80066d2:	1a84      	subs	r4, r0, r2
 80066d4:	eb65 0203 	sbc.w	r2, r5, r3
 80066d8:	2001      	movs	r0, #1
 80066da:	4617      	mov	r7, r2
 80066dc:	2e00      	cmp	r6, #0
 80066de:	d0e2      	beq.n	80066a6 <__udivmoddi4+0xa2>
 80066e0:	e9c6 4700 	strd	r4, r7, [r6]
 80066e4:	e7df      	b.n	80066a6 <__udivmoddi4+0xa2>
 80066e6:	b902      	cbnz	r2, 80066ea <__udivmoddi4+0xe6>
 80066e8:	deff      	udf	#255	; 0xff
 80066ea:	fab2 f382 	clz	r3, r2
 80066ee:	2b00      	cmp	r3, #0
 80066f0:	f040 8090 	bne.w	8006814 <__udivmoddi4+0x210>
 80066f4:	1a8a      	subs	r2, r1, r2
 80066f6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80066fa:	fa1f fe8c 	uxth.w	lr, ip
 80066fe:	2101      	movs	r1, #1
 8006700:	fbb2 f5f7 	udiv	r5, r2, r7
 8006704:	fb07 2015 	mls	r0, r7, r5, r2
 8006708:	0c22      	lsrs	r2, r4, #16
 800670a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800670e:	fb0e f005 	mul.w	r0, lr, r5
 8006712:	4290      	cmp	r0, r2
 8006714:	d908      	bls.n	8006728 <__udivmoddi4+0x124>
 8006716:	eb1c 0202 	adds.w	r2, ip, r2
 800671a:	f105 38ff 	add.w	r8, r5, #4294967295
 800671e:	d202      	bcs.n	8006726 <__udivmoddi4+0x122>
 8006720:	4290      	cmp	r0, r2
 8006722:	f200 80cb 	bhi.w	80068bc <__udivmoddi4+0x2b8>
 8006726:	4645      	mov	r5, r8
 8006728:	1a12      	subs	r2, r2, r0
 800672a:	b2a4      	uxth	r4, r4
 800672c:	fbb2 f0f7 	udiv	r0, r2, r7
 8006730:	fb07 2210 	mls	r2, r7, r0, r2
 8006734:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8006738:	fb0e fe00 	mul.w	lr, lr, r0
 800673c:	45a6      	cmp	lr, r4
 800673e:	d908      	bls.n	8006752 <__udivmoddi4+0x14e>
 8006740:	eb1c 0404 	adds.w	r4, ip, r4
 8006744:	f100 32ff 	add.w	r2, r0, #4294967295
 8006748:	d202      	bcs.n	8006750 <__udivmoddi4+0x14c>
 800674a:	45a6      	cmp	lr, r4
 800674c:	f200 80bb 	bhi.w	80068c6 <__udivmoddi4+0x2c2>
 8006750:	4610      	mov	r0, r2
 8006752:	eba4 040e 	sub.w	r4, r4, lr
 8006756:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800675a:	e79f      	b.n	800669c <__udivmoddi4+0x98>
 800675c:	f1c1 0720 	rsb	r7, r1, #32
 8006760:	408b      	lsls	r3, r1
 8006762:	fa22 fc07 	lsr.w	ip, r2, r7
 8006766:	ea4c 0c03 	orr.w	ip, ip, r3
 800676a:	fa05 f401 	lsl.w	r4, r5, r1
 800676e:	fa20 f307 	lsr.w	r3, r0, r7
 8006772:	40fd      	lsrs	r5, r7
 8006774:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8006778:	4323      	orrs	r3, r4
 800677a:	fbb5 f8f9 	udiv	r8, r5, r9
 800677e:	fa1f fe8c 	uxth.w	lr, ip
 8006782:	fb09 5518 	mls	r5, r9, r8, r5
 8006786:	0c1c      	lsrs	r4, r3, #16
 8006788:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800678c:	fb08 f50e 	mul.w	r5, r8, lr
 8006790:	42a5      	cmp	r5, r4
 8006792:	fa02 f201 	lsl.w	r2, r2, r1
 8006796:	fa00 f001 	lsl.w	r0, r0, r1
 800679a:	d90b      	bls.n	80067b4 <__udivmoddi4+0x1b0>
 800679c:	eb1c 0404 	adds.w	r4, ip, r4
 80067a0:	f108 3aff 	add.w	sl, r8, #4294967295
 80067a4:	f080 8088 	bcs.w	80068b8 <__udivmoddi4+0x2b4>
 80067a8:	42a5      	cmp	r5, r4
 80067aa:	f240 8085 	bls.w	80068b8 <__udivmoddi4+0x2b4>
 80067ae:	f1a8 0802 	sub.w	r8, r8, #2
 80067b2:	4464      	add	r4, ip
 80067b4:	1b64      	subs	r4, r4, r5
 80067b6:	b29d      	uxth	r5, r3
 80067b8:	fbb4 f3f9 	udiv	r3, r4, r9
 80067bc:	fb09 4413 	mls	r4, r9, r3, r4
 80067c0:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 80067c4:	fb03 fe0e 	mul.w	lr, r3, lr
 80067c8:	45a6      	cmp	lr, r4
 80067ca:	d908      	bls.n	80067de <__udivmoddi4+0x1da>
 80067cc:	eb1c 0404 	adds.w	r4, ip, r4
 80067d0:	f103 35ff 	add.w	r5, r3, #4294967295
 80067d4:	d26c      	bcs.n	80068b0 <__udivmoddi4+0x2ac>
 80067d6:	45a6      	cmp	lr, r4
 80067d8:	d96a      	bls.n	80068b0 <__udivmoddi4+0x2ac>
 80067da:	3b02      	subs	r3, #2
 80067dc:	4464      	add	r4, ip
 80067de:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80067e2:	fba3 9502 	umull	r9, r5, r3, r2
 80067e6:	eba4 040e 	sub.w	r4, r4, lr
 80067ea:	42ac      	cmp	r4, r5
 80067ec:	46c8      	mov	r8, r9
 80067ee:	46ae      	mov	lr, r5
 80067f0:	d356      	bcc.n	80068a0 <__udivmoddi4+0x29c>
 80067f2:	d053      	beq.n	800689c <__udivmoddi4+0x298>
 80067f4:	b156      	cbz	r6, 800680c <__udivmoddi4+0x208>
 80067f6:	ebb0 0208 	subs.w	r2, r0, r8
 80067fa:	eb64 040e 	sbc.w	r4, r4, lr
 80067fe:	fa04 f707 	lsl.w	r7, r4, r7
 8006802:	40ca      	lsrs	r2, r1
 8006804:	40cc      	lsrs	r4, r1
 8006806:	4317      	orrs	r7, r2
 8006808:	e9c6 7400 	strd	r7, r4, [r6]
 800680c:	4618      	mov	r0, r3
 800680e:	2100      	movs	r1, #0
 8006810:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006814:	f1c3 0120 	rsb	r1, r3, #32
 8006818:	fa02 fc03 	lsl.w	ip, r2, r3
 800681c:	fa20 f201 	lsr.w	r2, r0, r1
 8006820:	fa25 f101 	lsr.w	r1, r5, r1
 8006824:	409d      	lsls	r5, r3
 8006826:	432a      	orrs	r2, r5
 8006828:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800682c:	fa1f fe8c 	uxth.w	lr, ip
 8006830:	fbb1 f0f7 	udiv	r0, r1, r7
 8006834:	fb07 1510 	mls	r5, r7, r0, r1
 8006838:	0c11      	lsrs	r1, r2, #16
 800683a:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800683e:	fb00 f50e 	mul.w	r5, r0, lr
 8006842:	428d      	cmp	r5, r1
 8006844:	fa04 f403 	lsl.w	r4, r4, r3
 8006848:	d908      	bls.n	800685c <__udivmoddi4+0x258>
 800684a:	eb1c 0101 	adds.w	r1, ip, r1
 800684e:	f100 38ff 	add.w	r8, r0, #4294967295
 8006852:	d22f      	bcs.n	80068b4 <__udivmoddi4+0x2b0>
 8006854:	428d      	cmp	r5, r1
 8006856:	d92d      	bls.n	80068b4 <__udivmoddi4+0x2b0>
 8006858:	3802      	subs	r0, #2
 800685a:	4461      	add	r1, ip
 800685c:	1b49      	subs	r1, r1, r5
 800685e:	b292      	uxth	r2, r2
 8006860:	fbb1 f5f7 	udiv	r5, r1, r7
 8006864:	fb07 1115 	mls	r1, r7, r5, r1
 8006868:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800686c:	fb05 f10e 	mul.w	r1, r5, lr
 8006870:	4291      	cmp	r1, r2
 8006872:	d908      	bls.n	8006886 <__udivmoddi4+0x282>
 8006874:	eb1c 0202 	adds.w	r2, ip, r2
 8006878:	f105 38ff 	add.w	r8, r5, #4294967295
 800687c:	d216      	bcs.n	80068ac <__udivmoddi4+0x2a8>
 800687e:	4291      	cmp	r1, r2
 8006880:	d914      	bls.n	80068ac <__udivmoddi4+0x2a8>
 8006882:	3d02      	subs	r5, #2
 8006884:	4462      	add	r2, ip
 8006886:	1a52      	subs	r2, r2, r1
 8006888:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 800688c:	e738      	b.n	8006700 <__udivmoddi4+0xfc>
 800688e:	4631      	mov	r1, r6
 8006890:	4630      	mov	r0, r6
 8006892:	e708      	b.n	80066a6 <__udivmoddi4+0xa2>
 8006894:	4639      	mov	r1, r7
 8006896:	e6e6      	b.n	8006666 <__udivmoddi4+0x62>
 8006898:	4610      	mov	r0, r2
 800689a:	e6fb      	b.n	8006694 <__udivmoddi4+0x90>
 800689c:	4548      	cmp	r0, r9
 800689e:	d2a9      	bcs.n	80067f4 <__udivmoddi4+0x1f0>
 80068a0:	ebb9 0802 	subs.w	r8, r9, r2
 80068a4:	eb65 0e0c 	sbc.w	lr, r5, ip
 80068a8:	3b01      	subs	r3, #1
 80068aa:	e7a3      	b.n	80067f4 <__udivmoddi4+0x1f0>
 80068ac:	4645      	mov	r5, r8
 80068ae:	e7ea      	b.n	8006886 <__udivmoddi4+0x282>
 80068b0:	462b      	mov	r3, r5
 80068b2:	e794      	b.n	80067de <__udivmoddi4+0x1da>
 80068b4:	4640      	mov	r0, r8
 80068b6:	e7d1      	b.n	800685c <__udivmoddi4+0x258>
 80068b8:	46d0      	mov	r8, sl
 80068ba:	e77b      	b.n	80067b4 <__udivmoddi4+0x1b0>
 80068bc:	3d02      	subs	r5, #2
 80068be:	4462      	add	r2, ip
 80068c0:	e732      	b.n	8006728 <__udivmoddi4+0x124>
 80068c2:	4608      	mov	r0, r1
 80068c4:	e70a      	b.n	80066dc <__udivmoddi4+0xd8>
 80068c6:	4464      	add	r4, ip
 80068c8:	3802      	subs	r0, #2
 80068ca:	e742      	b.n	8006752 <__udivmoddi4+0x14e>

080068cc <__aeabi_idiv0>:
 80068cc:	4770      	bx	lr
 80068ce:	bf00      	nop

080068d0 <Perform_Flash_Erase>:




 uint8_t Perform_Flash_Erase(uint8_t Sector_Numebr, uint8_t Number_Of_Sectors)
{
 80068d0:	b580      	push	{r7, lr}
 80068d2:	b08a      	sub	sp, #40	; 0x28
 80068d4:	af00      	add	r7, sp, #0
 80068d6:	4603      	mov	r3, r0
 80068d8:	460a      	mov	r2, r1
 80068da:	71fb      	strb	r3, [r7, #7]
 80068dc:	4613      	mov	r3, r2
 80068de:	71bb      	strb	r3, [r7, #6]
	uint8_t Sector_Validity_Status = INVALID_SECTOR_NUMBER;
 80068e0:	2300      	movs	r3, #0
 80068e2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	FLASH_EraseInitTypeDef pEraseInit;
	uint8_t Remaining_Sectors = 0;
 80068e6:	2300      	movs	r3, #0
 80068e8:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 80068ec:	2301      	movs	r3, #1
 80068ee:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
	uint32_t SectorError = 0;
 80068f2:	2300      	movs	r3, #0
 80068f4:	60fb      	str	r3, [r7, #12]
	
	if(Number_Of_Sectors > CBL_FLASH_MAX_SECTOR_NUMBER)
 80068f6:	79bb      	ldrb	r3, [r7, #6]
 80068f8:	2b0c      	cmp	r3, #12
 80068fa:	d903      	bls.n	8006904 <Perform_Flash_Erase+0x34>
    {
		/* Number Of sectors is out of range */
		Sector_Validity_Status = INVALID_SECTOR_NUMBER;
 80068fc:	2300      	movs	r3, #0
 80068fe:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8006902:	e046      	b.n	8006992 <Perform_Flash_Erase+0xc2>
	}
	else{
		if((Sector_Numebr <= (CBL_FLASH_MAX_SECTOR_NUMBER - 1)) || (CBL_FLASH_MASS_ERASE == Sector_Numebr))
 8006904:	79fb      	ldrb	r3, [r7, #7]
 8006906:	2b0b      	cmp	r3, #11
 8006908:	d902      	bls.n	8006910 <Perform_Flash_Erase+0x40>
 800690a:	79fb      	ldrb	r3, [r7, #7]
 800690c:	2bff      	cmp	r3, #255	; 0xff
 800690e:	d13d      	bne.n	800698c <Perform_Flash_Erase+0xbc>
        {
			/* Check if user needs Mass erase */
			if(CBL_FLASH_MASS_ERASE == Sector_Numebr)
 8006910:	79fb      	ldrb	r3, [r7, #7]
 8006912:	2bff      	cmp	r3, #255	; 0xff
 8006914:	d102      	bne.n	800691c <Perform_Flash_Erase+0x4c>
            {
				pEraseInit.TypeErase = FLASH_TYPEERASE_MASSERASE; /* Flash Mass erase activation */
 8006916:	2301      	movs	r3, #1
 8006918:	613b      	str	r3, [r7, #16]
 800691a:	e012      	b.n	8006942 <Perform_Flash_Erase+0x72>
			else
            {
				/* User needs Sector erase */
				// BL_Print_Message("User needs Sector erase \r\n");  --------------------> input 

				Remaining_Sectors = CBL_FLASH_MAX_SECTOR_NUMBER - Sector_Numebr;
 800691c:	79fb      	ldrb	r3, [r7, #7]
 800691e:	f1c3 030c 	rsb	r3, r3, #12
 8006922:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
				if(Number_Of_Sectors > Remaining_Sectors)
 8006926:	79ba      	ldrb	r2, [r7, #6]
 8006928:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 800692c:	429a      	cmp	r2, r3
 800692e:	d902      	bls.n	8006936 <Perform_Flash_Erase+0x66>
                {
					Number_Of_Sectors = Remaining_Sectors;
 8006930:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8006934:	71bb      	strb	r3, [r7, #6]
				}
				else { /* Nothing */ }
				
				pEraseInit.TypeErase = FLASH_TYPEERASE_SECTORS; /* Sectors erase only */
 8006936:	2300      	movs	r3, #0
 8006938:	613b      	str	r3, [r7, #16]
				pEraseInit.Sector = Sector_Numebr;        /* Initial FLASH sector to erase when Mass erase is disabled */
 800693a:	79fb      	ldrb	r3, [r7, #7]
 800693c:	61bb      	str	r3, [r7, #24]
				pEraseInit.NbSectors = Number_Of_Sectors; /* Number of sectors to be erased. */
 800693e:	79bb      	ldrb	r3, [r7, #6]
 8006940:	61fb      	str	r3, [r7, #28]
			}
			
			pEraseInit.Banks = FLASH_BANK_1; /* Bank 1  */
 8006942:	2301      	movs	r3, #1
 8006944:	617b      	str	r3, [r7, #20]
			pEraseInit.VoltageRange = FLASH_VOLTAGE_RANGE_3; /* Device operating range: 2.7V to 3.6V */
 8006946:	2302      	movs	r3, #2
 8006948:	623b      	str	r3, [r7, #32]
			
			/* Unlock the FLASH control register access */
            HAL_Status = HAL_FLASH_Unlock();
 800694a:	f000 fe09 	bl	8007560 <HAL_FLASH_Unlock>
 800694e:	4603      	mov	r3, r0
 8006950:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
			/* Perform a mass erase or erase the specified FLASH memory sectors */
			HAL_Status = HAL_FLASHEx_Erase(&pEraseInit, &SectorError);
 8006954:	f107 020c 	add.w	r2, r7, #12
 8006958:	f107 0310 	add.w	r3, r7, #16
 800695c:	4611      	mov	r1, r2
 800695e:	4618      	mov	r0, r3
 8006960:	f000 ff70 	bl	8007844 <HAL_FLASHEx_Erase>
 8006964:	4603      	mov	r3, r0
 8006966:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
			if(HAL_SUCCESSFUL_ERASE == SectorError)
 800696a:	68fb      	ldr	r3, [r7, #12]
 800696c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006970:	d103      	bne.n	800697a <Perform_Flash_Erase+0xaa>
            {
				Sector_Validity_Status = SUCCESSFUL_ERASE;
 8006972:	2303      	movs	r3, #3
 8006974:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8006978:	e002      	b.n	8006980 <Perform_Flash_Erase+0xb0>
			}
			else
            {
				Sector_Validity_Status = UNSUCCESSFUL_ERASE;
 800697a:	2302      	movs	r3, #2
 800697c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			}
			/* Locks the FLASH control register access */
            HAL_Status = HAL_FLASH_Lock();
 8006980:	f000 fe10 	bl	80075a4 <HAL_FLASH_Lock>
 8006984:	4603      	mov	r3, r0
 8006986:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 800698a:	e002      	b.n	8006992 <Perform_Flash_Erase+0xc2>
		}
		else
        {
			Sector_Validity_Status = UNSUCCESSFUL_ERASE;
 800698c:	2302      	movs	r3, #2
 800698e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
		}
	}
	return Sector_Validity_Status;
 8006992:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
}
 8006996:	4618      	mov	r0, r3
 8006998:	3728      	adds	r7, #40	; 0x28
 800699a:	46bd      	mov	sp, r7
 800699c:	bd80      	pop	{r7, pc}

0800699e <Flash_Memory_Write_Payload>:




uint8_t Flash_Memory_Write_Payload(uint16_t *Host_Payload, uint32_t Payload_Start_Address, uint8_t Payload_Len)
{
 800699e:	b5b0      	push	{r4, r5, r7, lr}
 80069a0:	b086      	sub	sp, #24
 80069a2:	af00      	add	r7, sp, #0
 80069a4:	60f8      	str	r0, [r7, #12]
 80069a6:	60b9      	str	r1, [r7, #8]
 80069a8:	4613      	mov	r3, r2
 80069aa:	71fb      	strb	r3, [r7, #7]
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 80069ac:	2301      	movs	r3, #1
 80069ae:	75fb      	strb	r3, [r7, #23]
	uint8_t Flash_Payload_Write_Status = FLASH_PAYLOAD_WRITE_FAILED;
 80069b0:	2300      	movs	r3, #0
 80069b2:	75bb      	strb	r3, [r7, #22]
	uint16_t Payload_Counter = 0;
 80069b4:	2300      	movs	r3, #0
 80069b6:	82bb      	strh	r3, [r7, #20]
	
	/* Unlock the FLASH control register access */
  HAL_Status = HAL_FLASH_Unlock();
 80069b8:	f000 fdd2 	bl	8007560 <HAL_FLASH_Unlock>
 80069bc:	4603      	mov	r3, r0
 80069be:	75fb      	strb	r3, [r7, #23]
	
	if(HAL_Status != HAL_OK)
 80069c0:	7dfb      	ldrb	r3, [r7, #23]
 80069c2:	2b00      	cmp	r3, #0
 80069c4:	d002      	beq.n	80069cc <Flash_Memory_Write_Payload+0x2e>
    {
		Flash_Payload_Write_Status = FLASH_PAYLOAD_WRITE_FAILED;
 80069c6:	2300      	movs	r3, #0
 80069c8:	75bb      	strb	r3, [r7, #22]
 80069ca:	e027      	b.n	8006a1c <Flash_Memory_Write_Payload+0x7e>
	}
	else
    {
		for(Payload_Counter = 0; Payload_Counter < Payload_Len; Payload_Counter+=2)
 80069cc:	2300      	movs	r3, #0
 80069ce:	82bb      	strh	r3, [r7, #20]
 80069d0:	e01f      	b.n	8006a12 <Flash_Memory_Write_Payload+0x74>
        {
			/* Program a byte at a specified address */
			HAL_Status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, Payload_Start_Address + Payload_Counter, Host_Payload[(Payload_Counter/2)]);
 80069d2:	8aba      	ldrh	r2, [r7, #20]
 80069d4:	68bb      	ldr	r3, [r7, #8]
 80069d6:	18d1      	adds	r1, r2, r3
 80069d8:	8abb      	ldrh	r3, [r7, #20]
 80069da:	085b      	lsrs	r3, r3, #1
 80069dc:	b29b      	uxth	r3, r3
 80069de:	005b      	lsls	r3, r3, #1
 80069e0:	68fa      	ldr	r2, [r7, #12]
 80069e2:	4413      	add	r3, r2
 80069e4:	881b      	ldrh	r3, [r3, #0]
 80069e6:	b29b      	uxth	r3, r3
 80069e8:	2200      	movs	r2, #0
 80069ea:	461c      	mov	r4, r3
 80069ec:	4615      	mov	r5, r2
 80069ee:	4622      	mov	r2, r4
 80069f0:	462b      	mov	r3, r5
 80069f2:	2001      	movs	r0, #1
 80069f4:	f000 fd60 	bl	80074b8 <HAL_FLASH_Program>
 80069f8:	4603      	mov	r3, r0
 80069fa:	75fb      	strb	r3, [r7, #23]
			if(HAL_Status != HAL_OK)
 80069fc:	7dfb      	ldrb	r3, [r7, #23]
 80069fe:	2b00      	cmp	r3, #0
 8006a00:	d002      	beq.n	8006a08 <Flash_Memory_Write_Payload+0x6a>
            {
				Flash_Payload_Write_Status = FLASH_PAYLOAD_WRITE_FAILED;
 8006a02:	2300      	movs	r3, #0
 8006a04:	75bb      	strb	r3, [r7, #22]
				break;
 8006a06:	e009      	b.n	8006a1c <Flash_Memory_Write_Payload+0x7e>
			}
			else
            {
				Flash_Payload_Write_Status = FLASH_PAYLOAD_WRITE_PASSED;
 8006a08:	2301      	movs	r3, #1
 8006a0a:	75bb      	strb	r3, [r7, #22]
		for(Payload_Counter = 0; Payload_Counter < Payload_Len; Payload_Counter+=2)
 8006a0c:	8abb      	ldrh	r3, [r7, #20]
 8006a0e:	3302      	adds	r3, #2
 8006a10:	82bb      	strh	r3, [r7, #20]
 8006a12:	79fb      	ldrb	r3, [r7, #7]
 8006a14:	b29b      	uxth	r3, r3
 8006a16:	8aba      	ldrh	r2, [r7, #20]
 8006a18:	429a      	cmp	r2, r3
 8006a1a:	d3da      	bcc.n	80069d2 <Flash_Memory_Write_Payload+0x34>
			}
		}
	}
	
	if((FLASH_PAYLOAD_WRITE_PASSED == Flash_Payload_Write_Status) && (HAL_OK == HAL_Status))
 8006a1c:	7dbb      	ldrb	r3, [r7, #22]
 8006a1e:	2b01      	cmp	r3, #1
 8006a20:	d10f      	bne.n	8006a42 <Flash_Memory_Write_Payload+0xa4>
 8006a22:	7dfb      	ldrb	r3, [r7, #23]
 8006a24:	2b00      	cmp	r3, #0
 8006a26:	d10c      	bne.n	8006a42 <Flash_Memory_Write_Payload+0xa4>
    {
		/* Locks the FLASH control register access */
		HAL_Status = HAL_FLASH_Lock();
 8006a28:	f000 fdbc 	bl	80075a4 <HAL_FLASH_Lock>
 8006a2c:	4603      	mov	r3, r0
 8006a2e:	75fb      	strb	r3, [r7, #23]
		if(HAL_Status != HAL_OK)
 8006a30:	7dfb      	ldrb	r3, [r7, #23]
 8006a32:	2b00      	cmp	r3, #0
 8006a34:	d002      	beq.n	8006a3c <Flash_Memory_Write_Payload+0x9e>
        {
			Flash_Payload_Write_Status = FLASH_PAYLOAD_WRITE_FAILED;
 8006a36:	2300      	movs	r3, #0
 8006a38:	75bb      	strb	r3, [r7, #22]
		if(HAL_Status != HAL_OK)
 8006a3a:	e004      	b.n	8006a46 <Flash_Memory_Write_Payload+0xa8>
		}
		else
        {
			Flash_Payload_Write_Status = FLASH_PAYLOAD_WRITE_PASSED;
 8006a3c:	2301      	movs	r3, #1
 8006a3e:	75bb      	strb	r3, [r7, #22]
		if(HAL_Status != HAL_OK)
 8006a40:	e001      	b.n	8006a46 <Flash_Memory_Write_Payload+0xa8>
		}
	}
	else
    {
		Flash_Payload_Write_Status = FLASH_PAYLOAD_WRITE_FAILED;
 8006a42:	2300      	movs	r3, #0
 8006a44:	75bb      	strb	r3, [r7, #22]
	}
	
	return Flash_Payload_Write_Status;
 8006a46:	7dbb      	ldrb	r3, [r7, #22]
}
 8006a48:	4618      	mov	r0, r3
 8006a4a:	3718      	adds	r7, #24
 8006a4c:	46bd      	mov	sp, r7
 8006a4e:	bdb0      	pop	{r4, r5, r7, pc}

08006a50 <Bootloader_Upload_Sequence>:
/*---------------------------------------------------------------------------------------------------------------*/
 void Bootloader_Upload_Sequence(void)
{
 8006a50:	b580      	push	{r7, lr}
 8006a52:	b090      	sub	sp, #64	; 0x40
 8006a54:	af00      	add	r7, sp, #0
  	uint32_t CCC=0;
 8006a56:	2300      	movs	r3, #0
 8006a58:	63fb      	str	r3, [r7, #60]	; 0x3c
	/*uint8_t Update_Status = UPDATE_FAILED;*/

    uint8_t Erase =  Perform_Flash_Erase (3,3);
 8006a5a:	2103      	movs	r1, #3
 8006a5c:	2003      	movs	r0, #3
 8006a5e:	f7ff ff37 	bl	80068d0 <Perform_Flash_Erase>
 8006a62:	4603      	mov	r3, r0
 8006a64:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
    if (Erase == SUCCESSFUL_ERASE)
 8006a68:	f897 303a 	ldrb.w	r3, [r7, #58]	; 0x3a
 8006a6c:	2b03      	cmp	r3, #3
 8006a6e:	d173      	bne.n	8006b58 <Bootloader_Upload_Sequence+0x108>
    {
    	uint8_t rx_data;
    	uint8_t rx_buffer[50]={0};
 8006a70:	2300      	movs	r3, #0
 8006a72:	603b      	str	r3, [r7, #0]
 8006a74:	1d3b      	adds	r3, r7, #4
 8006a76:	222e      	movs	r2, #46	; 0x2e
 8006a78:	2100      	movs	r1, #0
 8006a7a:	4618      	mov	r0, r3
 8006a7c:	f002 fa5e 	bl	8008f3c <memset>
    	uint8_t rx_index = 0;
 8006a80:	2300      	movs	r3, #0
 8006a82:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
    	//uint8_t receivedData[RAM_HOST_BUFFER_RX_LENGTH];
    	uint32_t receivedData_IDX =0;
 8006a86:	2300      	movs	r3, #0
 8006a88:	637b      	str	r3, [r7, #52]	; 0x34
        //uint8_t RAM_Buffer [RAM_HOST_BUFFER_RX_LENGTH];
        //uint16_t Payload_Data_Len = sizeof(receivedData)/sizeof(receivedData[0]);
		//uint8_t TX_ARRAY [1] = {0};
		//memset(RAM_Buffer, 0xFF, RAM_HOST_BUFFER_RX_LENGTH);
        //memset(receivedData, 0xFF, sizeof(receivedData));
        HAL_UART_Transmit(&huart1, (uint8_t*)"START\n", 6, HAL_MAX_DELAY); // Send Start condition
 8006a8a:	f04f 33ff 	mov.w	r3, #4294967295
 8006a8e:	2206      	movs	r2, #6
 8006a90:	4933      	ldr	r1, [pc, #204]	; (8006b60 <Bootloader_Upload_Sequence+0x110>)
 8006a92:	4834      	ldr	r0, [pc, #208]	; (8006b64 <Bootloader_Upload_Sequence+0x114>)
 8006a94:	f001 fe3b 	bl	800870e <HAL_UART_Transmit>
        HAL_Delay(500);
 8006a98:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8006a9c:	f000 fc02 	bl	80072a4 <HAL_Delay>

		  while (CCC<RAM_HOST_BUFFER_RX_LENGTH)
 8006aa0:	e056      	b.n	8006b50 <Bootloader_Upload_Sequence+0x100>
		  {

		    /* USER CODE END WHILE */

		    /* USER CODE BEGIN 3 */
			  if (HAL_UART_Receive(&huart1, &rx_data, 1, 1000) == HAL_OK)
 8006aa2:	f107 0133 	add.w	r1, r7, #51	; 0x33
 8006aa6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006aaa:	2201      	movs	r2, #1
 8006aac:	482d      	ldr	r0, [pc, #180]	; (8006b64 <Bootloader_Upload_Sequence+0x114>)
 8006aae:	f001 fec0 	bl	8008832 <HAL_UART_Receive>
 8006ab2:	4603      	mov	r3, r0
 8006ab4:	2b00      	cmp	r3, #0
 8006ab6:	d146      	bne.n	8006b46 <Bootloader_Upload_Sequence+0xf6>
			      {
			        if (rx_data == ':')
 8006ab8:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8006abc:	2b3a      	cmp	r3, #58	; 0x3a
 8006abe:	d116      	bne.n	8006aee <Bootloader_Upload_Sequence+0x9e>
			        {
			        	rx_index = 0;
 8006ac0:	2300      	movs	r3, #0
 8006ac2:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
			        	rx_buffer[rx_index]=':';
 8006ac6:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8006aca:	3340      	adds	r3, #64	; 0x40
 8006acc:	443b      	add	r3, r7
 8006ace:	223a      	movs	r2, #58	; 0x3a
 8006ad0:	f803 2c40 	strb.w	r2, [r3, #-64]
			        	rx_index++;
 8006ad4:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8006ad8:	3301      	adds	r3, #1
 8006ada:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
			        	HAL_UART_Transmit(&huart1, (uint8_t*)"ACK\n", 4, HAL_MAX_DELAY); // Send acknowledgment
 8006ade:	f04f 33ff 	mov.w	r3, #4294967295
 8006ae2:	2204      	movs	r2, #4
 8006ae4:	4920      	ldr	r1, [pc, #128]	; (8006b68 <Bootloader_Upload_Sequence+0x118>)
 8006ae6:	481f      	ldr	r0, [pc, #124]	; (8006b64 <Bootloader_Upload_Sequence+0x114>)
 8006ae8:	f001 fe11 	bl	800870e <HAL_UART_Transmit>
 8006aec:	e02b      	b.n	8006b46 <Bootloader_Upload_Sequence+0xf6>
			        }
			        else if (rx_data == '\n')
 8006aee:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8006af2:	2b0a      	cmp	r3, #10
 8006af4:	d115      	bne.n	8006b22 <Bootloader_Upload_Sequence+0xd2>
			        {
			        	rx_buffer[rx_index]='\n';
 8006af6:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8006afa:	3340      	adds	r3, #64	; 0x40
 8006afc:	443b      	add	r3, r7
 8006afe:	220a      	movs	r2, #10
 8006b00:	f803 2c40 	strb.w	r2, [r3, #-64]
			          			  receivedData_IDX++;


			          	  }
			          	  */
			          HexParser_vParseData(rx_buffer);
 8006b04:	463b      	mov	r3, r7
 8006b06:	4618      	mov	r0, r3
 8006b08:	f000 f854 	bl	8006bb4 <HexParser_vParseData>

			          HAL_UART_Transmit(&huart1, (uint8_t*)"ACK\n", 4, HAL_MAX_DELAY); // Send acknowledgment
 8006b0c:	f04f 33ff 	mov.w	r3, #4294967295
 8006b10:	2204      	movs	r2, #4
 8006b12:	4915      	ldr	r1, [pc, #84]	; (8006b68 <Bootloader_Upload_Sequence+0x118>)
 8006b14:	4813      	ldr	r0, [pc, #76]	; (8006b64 <Bootloader_Upload_Sequence+0x114>)
 8006b16:	f001 fdfa 	bl	800870e <HAL_UART_Transmit>
			          rx_index = 0; // Reset buffer index
 8006b1a:	2300      	movs	r3, #0
 8006b1c:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 8006b20:	e011      	b.n	8006b46 <Bootloader_Upload_Sequence+0xf6>
			        }
			        else
			        {
			          rx_buffer[rx_index++] = rx_data; // Store received character
 8006b22:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8006b26:	1c5a      	adds	r2, r3, #1
 8006b28:	f887 203b 	strb.w	r2, [r7, #59]	; 0x3b
 8006b2c:	f897 2033 	ldrb.w	r2, [r7, #51]	; 0x33
 8006b30:	3340      	adds	r3, #64	; 0x40
 8006b32:	443b      	add	r3, r7
 8006b34:	f803 2c40 	strb.w	r2, [r3, #-64]
			          HAL_UART_Transmit(&huart1, (uint8_t*)"ACK\n", 4, HAL_MAX_DELAY); // Send acknowledgment
 8006b38:	f04f 33ff 	mov.w	r3, #4294967295
 8006b3c:	2204      	movs	r2, #4
 8006b3e:	490a      	ldr	r1, [pc, #40]	; (8006b68 <Bootloader_Upload_Sequence+0x118>)
 8006b40:	4808      	ldr	r0, [pc, #32]	; (8006b64 <Bootloader_Upload_Sequence+0x114>)
 8006b42:	f001 fde4 	bl	800870e <HAL_UART_Transmit>
			        }
			      }
			  CCC++;
 8006b46:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006b48:	3301      	adds	r3, #1
 8006b4a:	63fb      	str	r3, [r7, #60]	; 0x3c
			  receivedData_IDX=0;
 8006b4c:	2300      	movs	r3, #0
 8006b4e:	637b      	str	r3, [r7, #52]	; 0x34
		  while (CCC<RAM_HOST_BUFFER_RX_LENGTH)
 8006b50:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006b52:	4a06      	ldr	r2, [pc, #24]	; (8006b6c <Bootloader_Upload_Sequence+0x11c>)
 8006b54:	4293      	cmp	r3, r2
 8006b56:	d9a4      	bls.n	8006aa2 <Bootloader_Upload_Sequence+0x52>
		          }
		          */
		  /* USER CODE END 3 */
		}

}
 8006b58:	bf00      	nop
 8006b5a:	3740      	adds	r7, #64	; 0x40
 8006b5c:	46bd      	mov	sp, r7
 8006b5e:	bd80      	pop	{r7, pc}
 8006b60:	08008fac 	.word	0x08008fac
 8006b64:	200000f4 	.word	0x200000f4
 8006b68:	08008fb4 	.word	0x08008fb4
 8006b6c:	00014fef 	.word	0x00014fef

08006b70 <HexParser_u8Ascii2Num>:
/***********Code of Abdullah***********/

uint16_t FlashData[100];

uint8_t HexParser_u8Ascii2Num(uint8_t Copy_u8Ascii)
 {
 8006b70:	b480      	push	{r7}
 8006b72:	b085      	sub	sp, #20
 8006b74:	af00      	add	r7, sp, #0
 8006b76:	4603      	mov	r3, r0
 8006b78:	71fb      	strb	r3, [r7, #7]
	uint8_t Local_u8Return = 0;
 8006b7a:	2300      	movs	r3, #0
 8006b7c:	73fb      	strb	r3, [r7, #15]
 	if(Copy_u8Ascii >= '0' && Copy_u8Ascii <= '9')
 8006b7e:	79fb      	ldrb	r3, [r7, #7]
 8006b80:	2b2f      	cmp	r3, #47	; 0x2f
 8006b82:	d906      	bls.n	8006b92 <HexParser_u8Ascii2Num+0x22>
 8006b84:	79fb      	ldrb	r3, [r7, #7]
 8006b86:	2b39      	cmp	r3, #57	; 0x39
 8006b88:	d803      	bhi.n	8006b92 <HexParser_u8Ascii2Num+0x22>
 	{
 		Local_u8Return = Copy_u8Ascii - '0';
 8006b8a:	79fb      	ldrb	r3, [r7, #7]
 8006b8c:	3b30      	subs	r3, #48	; 0x30
 8006b8e:	73fb      	strb	r3, [r7, #15]
 8006b90:	e008      	b.n	8006ba4 <HexParser_u8Ascii2Num+0x34>
 	}
 	else if(Copy_u8Ascii >='A' && Copy_u8Ascii <='F')
 8006b92:	79fb      	ldrb	r3, [r7, #7]
 8006b94:	2b40      	cmp	r3, #64	; 0x40
 8006b96:	d905      	bls.n	8006ba4 <HexParser_u8Ascii2Num+0x34>
 8006b98:	79fb      	ldrb	r3, [r7, #7]
 8006b9a:	2b46      	cmp	r3, #70	; 0x46
 8006b9c:	d802      	bhi.n	8006ba4 <HexParser_u8Ascii2Num+0x34>
 	{
 		Local_u8Return = Copy_u8Ascii - 55;
 8006b9e:	79fb      	ldrb	r3, [r7, #7]
 8006ba0:	3b37      	subs	r3, #55	; 0x37
 8006ba2:	73fb      	strb	r3, [r7, #15]
 	}
 	return Local_u8Return;
 8006ba4:	7bfb      	ldrb	r3, [r7, #15]
 }
 8006ba6:	4618      	mov	r0, r3
 8006ba8:	3714      	adds	r7, #20
 8006baa:	46bd      	mov	sp, r7
 8006bac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bb0:	4770      	bx	lr
	...

08006bb4 <HexParser_vParseData>:


uint32_t upper_bits = 0;

void HexParser_vParseData(uint8_t *Data)
{
 8006bb4:	b590      	push	{r4, r7, lr}
 8006bb6:	b08b      	sub	sp, #44	; 0x2c
 8006bb8:	af00      	add	r7, sp, #0
 8006bba:	6078      	str	r0, [r7, #4]
	/* Calculate record address */
	uint32_t Address = 0;
 8006bbc:	2300      	movs	r3, #0
 8006bbe:	627b      	str	r3, [r7, #36]	; 0x24
	uint32_t Offset=0;
 8006bc0:	2300      	movs	r3, #0
 8006bc2:	61fb      	str	r3, [r7, #28]
	uint32_t Abs_Address=0;
 8006bc4:	2300      	movs	r3, #0
 8006bc6:	61bb      	str	r3, [r7, #24]



		    		//Calculate Length
		    		uint8_t Length_Low , Length_High , Length;
		    		Length_Low = HexParser_u8Ascii2Num(Data[2]);
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	3302      	adds	r3, #2
 8006bcc:	781b      	ldrb	r3, [r3, #0]
 8006bce:	4618      	mov	r0, r3
 8006bd0:	f7ff ffce 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006bd4:	4603      	mov	r3, r0
 8006bd6:	75fb      	strb	r3, [r7, #23]
		    		Length_High = HexParser_u8Ascii2Num(Data[1]);
 8006bd8:	687b      	ldr	r3, [r7, #4]
 8006bda:	3301      	adds	r3, #1
 8006bdc:	781b      	ldrb	r3, [r3, #0]
 8006bde:	4618      	mov	r0, r3
 8006be0:	f7ff ffc6 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006be4:	4603      	mov	r3, r0
 8006be6:	75bb      	strb	r3, [r7, #22]
		    		Length = (Length_High << 4) | Length_Low;
 8006be8:	7dbb      	ldrb	r3, [r7, #22]
 8006bea:	011b      	lsls	r3, r3, #4
 8006bec:	b25a      	sxtb	r2, r3
 8006bee:	f997 3017 	ldrsb.w	r3, [r7, #23]
 8006bf2:	4313      	orrs	r3, r2
 8006bf4:	b25b      	sxtb	r3, r3
 8006bf6:	757b      	strb	r3, [r7, #21]
		    		if((Data[7] == '0' && Data[8] == '1'))
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	3307      	adds	r3, #7
 8006bfc:	781b      	ldrb	r3, [r3, #0]
 8006bfe:	2b30      	cmp	r3, #48	; 0x30
 8006c00:	d105      	bne.n	8006c0e <HexParser_vParseData+0x5a>
 8006c02:	687b      	ldr	r3, [r7, #4]
 8006c04:	3308      	adds	r3, #8
 8006c06:	781b      	ldrb	r3, [r3, #0]
 8006c08:	2b31      	cmp	r3, #49	; 0x31
 8006c0a:	f000 80ee 	beq.w	8006dea <HexParser_vParseData+0x236>
		    		{
		    			//end of file

		    		}else if((Data[7] == '0' && Data[8] == '4'))
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	3307      	adds	r3, #7
 8006c12:	781b      	ldrb	r3, [r3, #0]
 8006c14:	2b30      	cmp	r3, #48	; 0x30
 8006c16:	d12e      	bne.n	8006c76 <HexParser_vParseData+0xc2>
 8006c18:	687b      	ldr	r3, [r7, #4]
 8006c1a:	3308      	adds	r3, #8
 8006c1c:	781b      	ldrb	r3, [r3, #0]
 8006c1e:	2b34      	cmp	r3, #52	; 0x34
 8006c20:	d129      	bne.n	8006c76 <HexParser_vParseData+0xc2>
		    		{
		    			upper_bits = (uint32_t)HexParser_u8Ascii2Num(Data[9]) * 4096 + HexParser_u8Ascii2Num(Data[10]) * 256 +
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	3309      	adds	r3, #9
 8006c26:	781b      	ldrb	r3, [r3, #0]
 8006c28:	4618      	mov	r0, r3
 8006c2a:	f7ff ffa1 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006c2e:	4603      	mov	r3, r0
 8006c30:	031c      	lsls	r4, r3, #12
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	330a      	adds	r3, #10
 8006c36:	781b      	ldrb	r3, [r3, #0]
 8006c38:	4618      	mov	r0, r3
 8006c3a:	f7ff ff99 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006c3e:	4603      	mov	r3, r0
 8006c40:	021b      	lsls	r3, r3, #8
 8006c42:	441c      	add	r4, r3
		    							HexParser_u8Ascii2Num(Data[11]) * 16 + HexParser_u8Ascii2Num(Data[12]);
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	330b      	adds	r3, #11
 8006c48:	781b      	ldrb	r3, [r3, #0]
 8006c4a:	4618      	mov	r0, r3
 8006c4c:	f7ff ff90 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006c50:	4603      	mov	r3, r0
 8006c52:	011b      	lsls	r3, r3, #4
		    			upper_bits = (uint32_t)HexParser_u8Ascii2Num(Data[9]) * 4096 + HexParser_u8Ascii2Num(Data[10]) * 256 +
 8006c54:	441c      	add	r4, r3
		    							HexParser_u8Ascii2Num(Data[11]) * 16 + HexParser_u8Ascii2Num(Data[12]);
 8006c56:	687b      	ldr	r3, [r7, #4]
 8006c58:	330c      	adds	r3, #12
 8006c5a:	781b      	ldrb	r3, [r3, #0]
 8006c5c:	4618      	mov	r0, r3
 8006c5e:	f7ff ff87 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006c62:	4603      	mov	r3, r0
 8006c64:	4423      	add	r3, r4
		    			upper_bits = (uint32_t)HexParser_u8Ascii2Num(Data[9]) * 4096 + HexParser_u8Ascii2Num(Data[10]) * 256 +
 8006c66:	4a63      	ldr	r2, [pc, #396]	; (8006df4 <HexParser_vParseData+0x240>)
 8006c68:	6013      	str	r3, [r2, #0]
		    			//upper_bits = (record[4] << 8) | record[5];
		    			upper_bits <<= 16; // Shift left by 16 bits to form a 32-bit address
 8006c6a:	4b62      	ldr	r3, [pc, #392]	; (8006df4 <HexParser_vParseData+0x240>)
 8006c6c:	681b      	ldr	r3, [r3, #0]
 8006c6e:	041b      	lsls	r3, r3, #16
 8006c70:	4a60      	ldr	r2, [pc, #384]	; (8006df4 <HexParser_vParseData+0x240>)
 8006c72:	6013      	str	r3, [r2, #0]
 8006c74:	e0b9      	b.n	8006dea <HexParser_vParseData+0x236>

		    		}else if((Data[7] == '0' && Data[8] == '5'))
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	3307      	adds	r3, #7
 8006c7a:	781b      	ldrb	r3, [r3, #0]
 8006c7c:	2b30      	cmp	r3, #48	; 0x30
 8006c7e:	d105      	bne.n	8006c8c <HexParser_vParseData+0xd8>
 8006c80:	687b      	ldr	r3, [r7, #4]
 8006c82:	3308      	adds	r3, #8
 8006c84:	781b      	ldrb	r3, [r3, #0]
 8006c86:	2b35      	cmp	r3, #53	; 0x35
 8006c88:	f000 80af 	beq.w	8006dea <HexParser_vParseData+0x236>
		    		{

		    		}
		    		else{
		    			// Data record processing
			    		digit0 = HexParser_u8Ascii2Num(Data[3]);
 8006c8c:	687b      	ldr	r3, [r7, #4]
 8006c8e:	3303      	adds	r3, #3
 8006c90:	781b      	ldrb	r3, [r3, #0]
 8006c92:	4618      	mov	r0, r3
 8006c94:	f7ff ff6c 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006c98:	4603      	mov	r3, r0
 8006c9a:	753b      	strb	r3, [r7, #20]
		    			digit1 = HexParser_u8Ascii2Num(Data[4]);
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	3304      	adds	r3, #4
 8006ca0:	781b      	ldrb	r3, [r3, #0]
 8006ca2:	4618      	mov	r0, r3
 8006ca4:	f7ff ff64 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006ca8:	4603      	mov	r3, r0
 8006caa:	74fb      	strb	r3, [r7, #19]
		    		    digit2 = HexParser_u8Ascii2Num(Data[5]);
 8006cac:	687b      	ldr	r3, [r7, #4]
 8006cae:	3305      	adds	r3, #5
 8006cb0:	781b      	ldrb	r3, [r3, #0]
 8006cb2:	4618      	mov	r0, r3
 8006cb4:	f7ff ff5c 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006cb8:	4603      	mov	r3, r0
 8006cba:	74bb      	strb	r3, [r7, #18]
		    			digit3 = HexParser_u8Ascii2Num(Data[6]);
 8006cbc:	687b      	ldr	r3, [r7, #4]
 8006cbe:	3306      	adds	r3, #6
 8006cc0:	781b      	ldrb	r3, [r3, #0]
 8006cc2:	4618      	mov	r0, r3
 8006cc4:	f7ff ff54 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006cc8:	4603      	mov	r3, r0
 8006cca:	747b      	strb	r3, [r7, #17]

		    			Offset =((digit0 << 12) | (digit1 << 8) | (digit2 << 4) | (digit3));
 8006ccc:	7d3b      	ldrb	r3, [r7, #20]
 8006cce:	031a      	lsls	r2, r3, #12
 8006cd0:	7cfb      	ldrb	r3, [r7, #19]
 8006cd2:	021b      	lsls	r3, r3, #8
 8006cd4:	431a      	orrs	r2, r3
 8006cd6:	7cbb      	ldrb	r3, [r7, #18]
 8006cd8:	011b      	lsls	r3, r3, #4
 8006cda:	431a      	orrs	r2, r3
 8006cdc:	7c7b      	ldrb	r3, [r7, #17]
 8006cde:	4313      	orrs	r3, r2
 8006ce0:	61fb      	str	r3, [r7, #28]
		    			Abs_Address= Offset|upper_bits;
 8006ce2:	4b44      	ldr	r3, [pc, #272]	; (8006df4 <HexParser_vParseData+0x240>)
 8006ce4:	681b      	ldr	r3, [r3, #0]
 8006ce6:	69fa      	ldr	r2, [r7, #28]
 8006ce8:	4313      	orrs	r3, r2
 8006cea:	61bb      	str	r3, [r7, #24]
		    			if(digit0 <0xc)
 8006cec:	7d3b      	ldrb	r3, [r7, #20]
 8006cee:	2b0b      	cmp	r3, #11
 8006cf0:	d80c      	bhi.n	8006d0c <HexParser_vParseData+0x158>
		    			{
		    				if(digit1<0x8)
 8006cf2:	7cfb      	ldrb	r3, [r7, #19]
 8006cf4:	2b07      	cmp	r3, #7
 8006cf6:	d804      	bhi.n	8006d02 <HexParser_vParseData+0x14e>
		    				{
		    					Address = ((uint32_t)(0x8000000) | Abs_Address) ;
 8006cf8:	69bb      	ldr	r3, [r7, #24]
 8006cfa:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8006cfe:	627b      	str	r3, [r7, #36]	; 0x24
 8006d00:	e014      	b.n	8006d2c <HexParser_vParseData+0x178>
		    				}
		    				else
		    				{
		    					Address = ((uint32_t)(0x8000800) | Abs_Address);
 8006d02:	69bb      	ldr	r3, [r7, #24]
 8006d04:	f043 2308 	orr.w	r3, r3, #134219776	; 0x8000800
 8006d08:	627b      	str	r3, [r7, #36]	; 0x24
 8006d0a:	e00f      	b.n	8006d2c <HexParser_vParseData+0x178>
		    				}
		    			}
		    			else
		    			{
		    				if(digit1<0x8)
 8006d0c:	7cfb      	ldrb	r3, [r7, #19]
 8006d0e:	2b07      	cmp	r3, #7
 8006d10:	d806      	bhi.n	8006d20 <HexParser_vParseData+0x16c>
		    				{
		    					Address = ((uint32_t)(0x800C000) | Abs_Address) ;
 8006d12:	69bb      	ldr	r3, [r7, #24]
 8006d14:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8006d18:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006d1c:	627b      	str	r3, [r7, #36]	; 0x24
 8006d1e:	e005      	b.n	8006d2c <HexParser_vParseData+0x178>
		    				}
		    				else
		    				{
		    					Address = ((uint32_t)(0x800C800) | Abs_Address);
 8006d20:	69bb      	ldr	r3, [r7, #24]
 8006d22:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8006d26:	f443 4348 	orr.w	r3, r3, #51200	; 0xc800
 8006d2a:	627b      	str	r3, [r7, #36]	; 0x24
		    				}
		    			}

		    			//Store data in FlashArray
		    			for(i = 0; i < Length/2; i++)
 8006d2c:	2300      	movs	r3, #0
 8006d2e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006d32:	e04c      	b.n	8006dce <HexParser_vParseData+0x21a>
		    			{

		    				digit0 = HexParser_u8Ascii2Num(Data[(4*i)+9]);
 8006d34:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006d38:	009b      	lsls	r3, r3, #2
 8006d3a:	3309      	adds	r3, #9
 8006d3c:	687a      	ldr	r2, [r7, #4]
 8006d3e:	4413      	add	r3, r2
 8006d40:	781b      	ldrb	r3, [r3, #0]
 8006d42:	4618      	mov	r0, r3
 8006d44:	f7ff ff14 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006d48:	4603      	mov	r3, r0
 8006d4a:	753b      	strb	r3, [r7, #20]
		    				digit1 = HexParser_u8Ascii2Num(Data[(4*i)+10]);
 8006d4c:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006d50:	009b      	lsls	r3, r3, #2
 8006d52:	330a      	adds	r3, #10
 8006d54:	687a      	ldr	r2, [r7, #4]
 8006d56:	4413      	add	r3, r2
 8006d58:	781b      	ldrb	r3, [r3, #0]
 8006d5a:	4618      	mov	r0, r3
 8006d5c:	f7ff ff08 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006d60:	4603      	mov	r3, r0
 8006d62:	74fb      	strb	r3, [r7, #19]
		    				digit2 = HexParser_u8Ascii2Num(Data[(4*i)+11]);
 8006d64:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006d68:	009b      	lsls	r3, r3, #2
 8006d6a:	330b      	adds	r3, #11
 8006d6c:	687a      	ldr	r2, [r7, #4]
 8006d6e:	4413      	add	r3, r2
 8006d70:	781b      	ldrb	r3, [r3, #0]
 8006d72:	4618      	mov	r0, r3
 8006d74:	f7ff fefc 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006d78:	4603      	mov	r3, r0
 8006d7a:	74bb      	strb	r3, [r7, #18]
		    				digit3 = HexParser_u8Ascii2Num(Data[(4*i)+12]);
 8006d7c:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006d80:	009b      	lsls	r3, r3, #2
 8006d82:	330c      	adds	r3, #12
 8006d84:	687a      	ldr	r2, [r7, #4]
 8006d86:	4413      	add	r3, r2
 8006d88:	781b      	ldrb	r3, [r3, #0]
 8006d8a:	4618      	mov	r0, r3
 8006d8c:	f7ff fef0 	bl	8006b70 <HexParser_u8Ascii2Num>
 8006d90:	4603      	mov	r3, r0
 8006d92:	747b      	strb	r3, [r7, #17]
		    				uint16_t halfWord = ((digit2 << 12) | (digit3 << 8) | (digit0 << 4) | digit1);
 8006d94:	7cbb      	ldrb	r3, [r7, #18]
 8006d96:	031b      	lsls	r3, r3, #12
 8006d98:	b21a      	sxth	r2, r3
 8006d9a:	7c7b      	ldrb	r3, [r7, #17]
 8006d9c:	021b      	lsls	r3, r3, #8
 8006d9e:	b21b      	sxth	r3, r3
 8006da0:	4313      	orrs	r3, r2
 8006da2:	b21a      	sxth	r2, r3
 8006da4:	7d3b      	ldrb	r3, [r7, #20]
 8006da6:	011b      	lsls	r3, r3, #4
 8006da8:	b21b      	sxth	r3, r3
 8006daa:	4313      	orrs	r3, r2
 8006dac:	b21a      	sxth	r2, r3
 8006dae:	7cfb      	ldrb	r3, [r7, #19]
 8006db0:	b21b      	sxth	r3, r3
 8006db2:	4313      	orrs	r3, r2
 8006db4:	b21b      	sxth	r3, r3
 8006db6:	81fb      	strh	r3, [r7, #14]
		    				// Store half-word in FlashData array
		    				FlashData[i] = halfWord;
 8006db8:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006dbc:	490e      	ldr	r1, [pc, #56]	; (8006df8 <HexParser_vParseData+0x244>)
 8006dbe:	89fa      	ldrh	r2, [r7, #14]
 8006dc0:	f821 2013 	strh.w	r2, [r1, r3, lsl #1]
		    			for(i = 0; i < Length/2; i++)
 8006dc4:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006dc8:	3301      	adds	r3, #1
 8006dca:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006dce:	7d7b      	ldrb	r3, [r7, #21]
 8006dd0:	085b      	lsrs	r3, r3, #1
 8006dd2:	b2db      	uxtb	r3, r3
 8006dd4:	f897 2023 	ldrb.w	r2, [r7, #35]	; 0x23
 8006dd8:	429a      	cmp	r2, r3
 8006dda:	d3ab      	bcc.n	8006d34 <HexParser_vParseData+0x180>

		    			}
		    			Flash_Memory_Write_Payload(FlashData, Address,Length);
 8006ddc:	7d7b      	ldrb	r3, [r7, #21]
 8006dde:	461a      	mov	r2, r3
 8006de0:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006de2:	4805      	ldr	r0, [pc, #20]	; (8006df8 <HexParser_vParseData+0x244>)
 8006de4:	f7ff fddb 	bl	800699e <Flash_Memory_Write_Payload>

		    		// Flashing data
		        // ...


}
 8006de8:	bf00      	nop
 8006dea:	bf00      	nop
 8006dec:	372c      	adds	r7, #44	; 0x2c
 8006dee:	46bd      	mov	sp, r7
 8006df0:	bd90      	pop	{r4, r7, pc}
 8006df2:	bf00      	nop
 8006df4:	200000f0 	.word	0x200000f0
 8006df8:	20000028 	.word	0x20000028

08006dfc <MX_GPIO_Init>:
 8006dfc:	b580      	push	{r7, lr}
 8006dfe:	b088      	sub	sp, #32
 8006e00:	af00      	add	r7, sp, #0
 8006e02:	f107 030c 	add.w	r3, r7, #12
 8006e06:	2200      	movs	r2, #0
 8006e08:	601a      	str	r2, [r3, #0]
 8006e0a:	605a      	str	r2, [r3, #4]
 8006e0c:	609a      	str	r2, [r3, #8]
 8006e0e:	60da      	str	r2, [r3, #12]
 8006e10:	611a      	str	r2, [r3, #16]
 8006e12:	2300      	movs	r3, #0
 8006e14:	60bb      	str	r3, [r7, #8]
 8006e16:	4b1e      	ldr	r3, [pc, #120]	; (8006e90 <MX_GPIO_Init+0x94>)
 8006e18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e1a:	4a1d      	ldr	r2, [pc, #116]	; (8006e90 <MX_GPIO_Init+0x94>)
 8006e1c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006e20:	6313      	str	r3, [r2, #48]	; 0x30
 8006e22:	4b1b      	ldr	r3, [pc, #108]	; (8006e90 <MX_GPIO_Init+0x94>)
 8006e24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e26:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006e2a:	60bb      	str	r3, [r7, #8]
 8006e2c:	68bb      	ldr	r3, [r7, #8]
 8006e2e:	2300      	movs	r3, #0
 8006e30:	607b      	str	r3, [r7, #4]
 8006e32:	4b17      	ldr	r3, [pc, #92]	; (8006e90 <MX_GPIO_Init+0x94>)
 8006e34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e36:	4a16      	ldr	r2, [pc, #88]	; (8006e90 <MX_GPIO_Init+0x94>)
 8006e38:	f043 0301 	orr.w	r3, r3, #1
 8006e3c:	6313      	str	r3, [r2, #48]	; 0x30
 8006e3e:	4b14      	ldr	r3, [pc, #80]	; (8006e90 <MX_GPIO_Init+0x94>)
 8006e40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e42:	f003 0301 	and.w	r3, r3, #1
 8006e46:	607b      	str	r3, [r7, #4]
 8006e48:	687b      	ldr	r3, [r7, #4]
 8006e4a:	2200      	movs	r2, #0
 8006e4c:	2102      	movs	r1, #2
 8006e4e:	4811      	ldr	r0, [pc, #68]	; (8006e94 <MX_GPIO_Init+0x98>)
 8006e50:	f000 ff9e 	bl	8007d90 <HAL_GPIO_WritePin>
 8006e54:	2302      	movs	r3, #2
 8006e56:	60fb      	str	r3, [r7, #12]
 8006e58:	2301      	movs	r3, #1
 8006e5a:	613b      	str	r3, [r7, #16]
 8006e5c:	2300      	movs	r3, #0
 8006e5e:	617b      	str	r3, [r7, #20]
 8006e60:	2300      	movs	r3, #0
 8006e62:	61bb      	str	r3, [r7, #24]
 8006e64:	f107 030c 	add.w	r3, r7, #12
 8006e68:	4619      	mov	r1, r3
 8006e6a:	480a      	ldr	r0, [pc, #40]	; (8006e94 <MX_GPIO_Init+0x98>)
 8006e6c:	f000 fe0c 	bl	8007a88 <HAL_GPIO_Init>
 8006e70:	2308      	movs	r3, #8
 8006e72:	60fb      	str	r3, [r7, #12]
 8006e74:	2300      	movs	r3, #0
 8006e76:	613b      	str	r3, [r7, #16]
 8006e78:	2300      	movs	r3, #0
 8006e7a:	617b      	str	r3, [r7, #20]
 8006e7c:	f107 030c 	add.w	r3, r7, #12
 8006e80:	4619      	mov	r1, r3
 8006e82:	4804      	ldr	r0, [pc, #16]	; (8006e94 <MX_GPIO_Init+0x98>)
 8006e84:	f000 fe00 	bl	8007a88 <HAL_GPIO_Init>
 8006e88:	bf00      	nop
 8006e8a:	3720      	adds	r7, #32
 8006e8c:	46bd      	mov	sp, r7
 8006e8e:	bd80      	pop	{r7, pc}
 8006e90:	40023800 	.word	0x40023800
 8006e94:	40020000 	.word	0x40020000

08006e98 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8006e98:	b580      	push	{r7, lr}
 8006e9a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8006e9c:	f000 f990 	bl	80071c0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8006ea0:	f000 f81a 	bl	8006ed8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8006ea4:	f7ff ffaa 	bl	8006dfc <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8006ea8:	f000 f8ee 	bl	8007088 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */
  Bootloader_Upload_Sequence();
 8006eac:	f7ff fdd0 	bl	8006a50 <Bootloader_Upload_Sequence>
  /* USER CODE BEGIN WHILE */
  while (1)
  {

	  /*Blinking Yellow LED*/
	  	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 8006eb0:	2201      	movs	r2, #1
 8006eb2:	2102      	movs	r1, #2
 8006eb4:	4807      	ldr	r0, [pc, #28]	; (8006ed4 <main+0x3c>)
 8006eb6:	f000 ff6b 	bl	8007d90 <HAL_GPIO_WritePin>
	  	  HAL_Delay(200);
 8006eba:	20c8      	movs	r0, #200	; 0xc8
 8006ebc:	f000 f9f2 	bl	80072a4 <HAL_Delay>
	  	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 8006ec0:	2200      	movs	r2, #0
 8006ec2:	2102      	movs	r1, #2
 8006ec4:	4803      	ldr	r0, [pc, #12]	; (8006ed4 <main+0x3c>)
 8006ec6:	f000 ff63 	bl	8007d90 <HAL_GPIO_WritePin>
	  	  HAL_Delay(200);
 8006eca:	20c8      	movs	r0, #200	; 0xc8
 8006ecc:	f000 f9ea 	bl	80072a4 <HAL_Delay>
	  	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 8006ed0:	e7ee      	b.n	8006eb0 <main+0x18>
 8006ed2:	bf00      	nop
 8006ed4:	40020000 	.word	0x40020000

08006ed8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8006ed8:	b580      	push	{r7, lr}
 8006eda:	b094      	sub	sp, #80	; 0x50
 8006edc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8006ede:	f107 0320 	add.w	r3, r7, #32
 8006ee2:	2230      	movs	r2, #48	; 0x30
 8006ee4:	2100      	movs	r1, #0
 8006ee6:	4618      	mov	r0, r3
 8006ee8:	f002 f828 	bl	8008f3c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8006eec:	f107 030c 	add.w	r3, r7, #12
 8006ef0:	2200      	movs	r2, #0
 8006ef2:	601a      	str	r2, [r3, #0]
 8006ef4:	605a      	str	r2, [r3, #4]
 8006ef6:	609a      	str	r2, [r3, #8]
 8006ef8:	60da      	str	r2, [r3, #12]
 8006efa:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8006efc:	2300      	movs	r3, #0
 8006efe:	60bb      	str	r3, [r7, #8]
 8006f00:	4b28      	ldr	r3, [pc, #160]	; (8006fa4 <SystemClock_Config+0xcc>)
 8006f02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006f04:	4a27      	ldr	r2, [pc, #156]	; (8006fa4 <SystemClock_Config+0xcc>)
 8006f06:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006f0a:	6413      	str	r3, [r2, #64]	; 0x40
 8006f0c:	4b25      	ldr	r3, [pc, #148]	; (8006fa4 <SystemClock_Config+0xcc>)
 8006f0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006f10:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006f14:	60bb      	str	r3, [r7, #8]
 8006f16:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 8006f18:	2300      	movs	r3, #0
 8006f1a:	607b      	str	r3, [r7, #4]
 8006f1c:	4b22      	ldr	r3, [pc, #136]	; (8006fa8 <SystemClock_Config+0xd0>)
 8006f1e:	681b      	ldr	r3, [r3, #0]
 8006f20:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8006f24:	4a20      	ldr	r2, [pc, #128]	; (8006fa8 <SystemClock_Config+0xd0>)
 8006f26:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006f2a:	6013      	str	r3, [r2, #0]
 8006f2c:	4b1e      	ldr	r3, [pc, #120]	; (8006fa8 <SystemClock_Config+0xd0>)
 8006f2e:	681b      	ldr	r3, [r3, #0]
 8006f30:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8006f34:	607b      	str	r3, [r7, #4]
 8006f36:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8006f38:	2302      	movs	r3, #2
 8006f3a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8006f3c:	2301      	movs	r3, #1
 8006f3e:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8006f40:	2310      	movs	r3, #16
 8006f42:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8006f44:	2302      	movs	r3, #2
 8006f46:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8006f48:	2300      	movs	r3, #0
 8006f4a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8006f4c:	2308      	movs	r3, #8
 8006f4e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 84;
 8006f50:	2354      	movs	r3, #84	; 0x54
 8006f52:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8006f54:	2302      	movs	r3, #2
 8006f56:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8006f58:	2304      	movs	r3, #4
 8006f5a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8006f5c:	f107 0320 	add.w	r3, r7, #32
 8006f60:	4618      	mov	r0, r3
 8006f62:	f000 ff2f 	bl	8007dc4 <HAL_RCC_OscConfig>
 8006f66:	4603      	mov	r3, r0
 8006f68:	2b00      	cmp	r3, #0
 8006f6a:	d001      	beq.n	8006f70 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8006f6c:	f000 f81e 	bl	8006fac <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8006f70:	230f      	movs	r3, #15
 8006f72:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8006f74:	2302      	movs	r3, #2
 8006f76:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8006f78:	2300      	movs	r3, #0
 8006f7a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8006f7c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006f80:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8006f82:	2300      	movs	r3, #0
 8006f84:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8006f86:	f107 030c 	add.w	r3, r7, #12
 8006f8a:	2102      	movs	r1, #2
 8006f8c:	4618      	mov	r0, r3
 8006f8e:	f001 f991 	bl	80082b4 <HAL_RCC_ClockConfig>
 8006f92:	4603      	mov	r3, r0
 8006f94:	2b00      	cmp	r3, #0
 8006f96:	d001      	beq.n	8006f9c <SystemClock_Config+0xc4>
  {
    Error_Handler();
 8006f98:	f000 f808 	bl	8006fac <Error_Handler>
  }
}
 8006f9c:	bf00      	nop
 8006f9e:	3750      	adds	r7, #80	; 0x50
 8006fa0:	46bd      	mov	sp, r7
 8006fa2:	bd80      	pop	{r7, pc}
 8006fa4:	40023800 	.word	0x40023800
 8006fa8:	40007000 	.word	0x40007000

08006fac <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8006fac:	b480      	push	{r7}
 8006fae:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8006fb0:	b672      	cpsid	i
}
 8006fb2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8006fb4:	e7fe      	b.n	8006fb4 <Error_Handler+0x8>
	...

08006fb8 <HAL_MspInit>:
 8006fb8:	b480      	push	{r7}
 8006fba:	b083      	sub	sp, #12
 8006fbc:	af00      	add	r7, sp, #0
 8006fbe:	2300      	movs	r3, #0
 8006fc0:	607b      	str	r3, [r7, #4]
 8006fc2:	4b10      	ldr	r3, [pc, #64]	; (8007004 <HAL_MspInit+0x4c>)
 8006fc4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006fc6:	4a0f      	ldr	r2, [pc, #60]	; (8007004 <HAL_MspInit+0x4c>)
 8006fc8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006fcc:	6453      	str	r3, [r2, #68]	; 0x44
 8006fce:	4b0d      	ldr	r3, [pc, #52]	; (8007004 <HAL_MspInit+0x4c>)
 8006fd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006fd2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006fd6:	607b      	str	r3, [r7, #4]
 8006fd8:	687b      	ldr	r3, [r7, #4]
 8006fda:	2300      	movs	r3, #0
 8006fdc:	603b      	str	r3, [r7, #0]
 8006fde:	4b09      	ldr	r3, [pc, #36]	; (8007004 <HAL_MspInit+0x4c>)
 8006fe0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006fe2:	4a08      	ldr	r2, [pc, #32]	; (8007004 <HAL_MspInit+0x4c>)
 8006fe4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006fe8:	6413      	str	r3, [r2, #64]	; 0x40
 8006fea:	4b06      	ldr	r3, [pc, #24]	; (8007004 <HAL_MspInit+0x4c>)
 8006fec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006fee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006ff2:	603b      	str	r3, [r7, #0]
 8006ff4:	683b      	ldr	r3, [r7, #0]
 8006ff6:	bf00      	nop
 8006ff8:	370c      	adds	r7, #12
 8006ffa:	46bd      	mov	sp, r7
 8006ffc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007000:	4770      	bx	lr
 8007002:	bf00      	nop
 8007004:	40023800 	.word	0x40023800

08007008 <NMI_Handler>:
 8007008:	b480      	push	{r7}
 800700a:	af00      	add	r7, sp, #0
 800700c:	e7fe      	b.n	800700c <NMI_Handler+0x4>

0800700e <HardFault_Handler>:
 800700e:	b480      	push	{r7}
 8007010:	af00      	add	r7, sp, #0
 8007012:	e7fe      	b.n	8007012 <HardFault_Handler+0x4>

08007014 <MemManage_Handler>:
 8007014:	b480      	push	{r7}
 8007016:	af00      	add	r7, sp, #0
 8007018:	e7fe      	b.n	8007018 <MemManage_Handler+0x4>

0800701a <BusFault_Handler>:
 800701a:	b480      	push	{r7}
 800701c:	af00      	add	r7, sp, #0
 800701e:	e7fe      	b.n	800701e <BusFault_Handler+0x4>

08007020 <UsageFault_Handler>:
 8007020:	b480      	push	{r7}
 8007022:	af00      	add	r7, sp, #0
 8007024:	e7fe      	b.n	8007024 <UsageFault_Handler+0x4>

08007026 <SVC_Handler>:
 8007026:	b480      	push	{r7}
 8007028:	af00      	add	r7, sp, #0
 800702a:	bf00      	nop
 800702c:	46bd      	mov	sp, r7
 800702e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007032:	4770      	bx	lr

08007034 <DebugMon_Handler>:
 8007034:	b480      	push	{r7}
 8007036:	af00      	add	r7, sp, #0
 8007038:	bf00      	nop
 800703a:	46bd      	mov	sp, r7
 800703c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007040:	4770      	bx	lr

08007042 <PendSV_Handler>:
 8007042:	b480      	push	{r7}
 8007044:	af00      	add	r7, sp, #0
 8007046:	bf00      	nop
 8007048:	46bd      	mov	sp, r7
 800704a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800704e:	4770      	bx	lr

08007050 <SysTick_Handler>:
 8007050:	b580      	push	{r7, lr}
 8007052:	af00      	add	r7, sp, #0
 8007054:	f000 f906 	bl	8007264 <HAL_IncTick>
 8007058:	bf00      	nop
 800705a:	bd80      	pop	{r7, pc}

0800705c <SystemInit>:
 800705c:	b480      	push	{r7}
 800705e:	af00      	add	r7, sp, #0
 8007060:	4b07      	ldr	r3, [pc, #28]	; (8007080 <SystemInit+0x24>)
 8007062:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007066:	4a06      	ldr	r2, [pc, #24]	; (8007080 <SystemInit+0x24>)
 8007068:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800706c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8007070:	4b03      	ldr	r3, [pc, #12]	; (8007080 <SystemInit+0x24>)
 8007072:	4a04      	ldr	r2, [pc, #16]	; (8007084 <SystemInit+0x28>)
 8007074:	609a      	str	r2, [r3, #8]
 8007076:	bf00      	nop
 8007078:	46bd      	mov	sp, r7
 800707a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800707e:	4770      	bx	lr
 8007080:	e000ed00 	.word	0xe000ed00
 8007084:	08006400 	.word	0x08006400

08007088 <MX_USART1_UART_Init>:
 8007088:	b580      	push	{r7, lr}
 800708a:	af00      	add	r7, sp, #0
 800708c:	4b11      	ldr	r3, [pc, #68]	; (80070d4 <MX_USART1_UART_Init+0x4c>)
 800708e:	4a12      	ldr	r2, [pc, #72]	; (80070d8 <MX_USART1_UART_Init+0x50>)
 8007090:	601a      	str	r2, [r3, #0]
 8007092:	4b10      	ldr	r3, [pc, #64]	; (80070d4 <MX_USART1_UART_Init+0x4c>)
 8007094:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8007098:	605a      	str	r2, [r3, #4]
 800709a:	4b0e      	ldr	r3, [pc, #56]	; (80070d4 <MX_USART1_UART_Init+0x4c>)
 800709c:	2200      	movs	r2, #0
 800709e:	609a      	str	r2, [r3, #8]
 80070a0:	4b0c      	ldr	r3, [pc, #48]	; (80070d4 <MX_USART1_UART_Init+0x4c>)
 80070a2:	2200      	movs	r2, #0
 80070a4:	60da      	str	r2, [r3, #12]
 80070a6:	4b0b      	ldr	r3, [pc, #44]	; (80070d4 <MX_USART1_UART_Init+0x4c>)
 80070a8:	2200      	movs	r2, #0
 80070aa:	611a      	str	r2, [r3, #16]
 80070ac:	4b09      	ldr	r3, [pc, #36]	; (80070d4 <MX_USART1_UART_Init+0x4c>)
 80070ae:	220c      	movs	r2, #12
 80070b0:	615a      	str	r2, [r3, #20]
 80070b2:	4b08      	ldr	r3, [pc, #32]	; (80070d4 <MX_USART1_UART_Init+0x4c>)
 80070b4:	2200      	movs	r2, #0
 80070b6:	619a      	str	r2, [r3, #24]
 80070b8:	4b06      	ldr	r3, [pc, #24]	; (80070d4 <MX_USART1_UART_Init+0x4c>)
 80070ba:	2200      	movs	r2, #0
 80070bc:	61da      	str	r2, [r3, #28]
 80070be:	4805      	ldr	r0, [pc, #20]	; (80070d4 <MX_USART1_UART_Init+0x4c>)
 80070c0:	f001 fad8 	bl	8008674 <HAL_UART_Init>
 80070c4:	4603      	mov	r3, r0
 80070c6:	2b00      	cmp	r3, #0
 80070c8:	d001      	beq.n	80070ce <MX_USART1_UART_Init+0x46>
 80070ca:	f7ff ff6f 	bl	8006fac <Error_Handler>
 80070ce:	bf00      	nop
 80070d0:	bd80      	pop	{r7, pc}
 80070d2:	bf00      	nop
 80070d4:	200000f4 	.word	0x200000f4
 80070d8:	40011000 	.word	0x40011000

080070dc <HAL_UART_MspInit>:
 80070dc:	b580      	push	{r7, lr}
 80070de:	b08a      	sub	sp, #40	; 0x28
 80070e0:	af00      	add	r7, sp, #0
 80070e2:	6078      	str	r0, [r7, #4]
 80070e4:	f107 0314 	add.w	r3, r7, #20
 80070e8:	2200      	movs	r2, #0
 80070ea:	601a      	str	r2, [r3, #0]
 80070ec:	605a      	str	r2, [r3, #4]
 80070ee:	609a      	str	r2, [r3, #8]
 80070f0:	60da      	str	r2, [r3, #12]
 80070f2:	611a      	str	r2, [r3, #16]
 80070f4:	687b      	ldr	r3, [r7, #4]
 80070f6:	681b      	ldr	r3, [r3, #0]
 80070f8:	4a19      	ldr	r2, [pc, #100]	; (8007160 <HAL_UART_MspInit+0x84>)
 80070fa:	4293      	cmp	r3, r2
 80070fc:	d12c      	bne.n	8007158 <HAL_UART_MspInit+0x7c>
 80070fe:	2300      	movs	r3, #0
 8007100:	613b      	str	r3, [r7, #16]
 8007102:	4b18      	ldr	r3, [pc, #96]	; (8007164 <HAL_UART_MspInit+0x88>)
 8007104:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007106:	4a17      	ldr	r2, [pc, #92]	; (8007164 <HAL_UART_MspInit+0x88>)
 8007108:	f043 0310 	orr.w	r3, r3, #16
 800710c:	6453      	str	r3, [r2, #68]	; 0x44
 800710e:	4b15      	ldr	r3, [pc, #84]	; (8007164 <HAL_UART_MspInit+0x88>)
 8007110:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007112:	f003 0310 	and.w	r3, r3, #16
 8007116:	613b      	str	r3, [r7, #16]
 8007118:	693b      	ldr	r3, [r7, #16]
 800711a:	2300      	movs	r3, #0
 800711c:	60fb      	str	r3, [r7, #12]
 800711e:	4b11      	ldr	r3, [pc, #68]	; (8007164 <HAL_UART_MspInit+0x88>)
 8007120:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007122:	4a10      	ldr	r2, [pc, #64]	; (8007164 <HAL_UART_MspInit+0x88>)
 8007124:	f043 0301 	orr.w	r3, r3, #1
 8007128:	6313      	str	r3, [r2, #48]	; 0x30
 800712a:	4b0e      	ldr	r3, [pc, #56]	; (8007164 <HAL_UART_MspInit+0x88>)
 800712c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800712e:	f003 0301 	and.w	r3, r3, #1
 8007132:	60fb      	str	r3, [r7, #12]
 8007134:	68fb      	ldr	r3, [r7, #12]
 8007136:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800713a:	617b      	str	r3, [r7, #20]
 800713c:	2302      	movs	r3, #2
 800713e:	61bb      	str	r3, [r7, #24]
 8007140:	2300      	movs	r3, #0
 8007142:	61fb      	str	r3, [r7, #28]
 8007144:	2303      	movs	r3, #3
 8007146:	623b      	str	r3, [r7, #32]
 8007148:	2307      	movs	r3, #7
 800714a:	627b      	str	r3, [r7, #36]	; 0x24
 800714c:	f107 0314 	add.w	r3, r7, #20
 8007150:	4619      	mov	r1, r3
 8007152:	4805      	ldr	r0, [pc, #20]	; (8007168 <HAL_UART_MspInit+0x8c>)
 8007154:	f000 fc98 	bl	8007a88 <HAL_GPIO_Init>
 8007158:	bf00      	nop
 800715a:	3728      	adds	r7, #40	; 0x28
 800715c:	46bd      	mov	sp, r7
 800715e:	bd80      	pop	{r7, pc}
 8007160:	40011000 	.word	0x40011000
 8007164:	40023800 	.word	0x40023800
 8007168:	40020000 	.word	0x40020000

0800716c <Reset_Handler>:
 800716c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80071a4 <LoopFillZerobss+0x12>
 8007170:	480d      	ldr	r0, [pc, #52]	; (80071a8 <LoopFillZerobss+0x16>)
 8007172:	490e      	ldr	r1, [pc, #56]	; (80071ac <LoopFillZerobss+0x1a>)
 8007174:	4a0e      	ldr	r2, [pc, #56]	; (80071b0 <LoopFillZerobss+0x1e>)
 8007176:	2300      	movs	r3, #0
 8007178:	e002      	b.n	8007180 <LoopCopyDataInit>

0800717a <CopyDataInit>:
 800717a:	58d4      	ldr	r4, [r2, r3]
 800717c:	50c4      	str	r4, [r0, r3]
 800717e:	3304      	adds	r3, #4

08007180 <LoopCopyDataInit>:
 8007180:	18c4      	adds	r4, r0, r3
 8007182:	428c      	cmp	r4, r1
 8007184:	d3f9      	bcc.n	800717a <CopyDataInit>
 8007186:	4a0b      	ldr	r2, [pc, #44]	; (80071b4 <LoopFillZerobss+0x22>)
 8007188:	4c0b      	ldr	r4, [pc, #44]	; (80071b8 <LoopFillZerobss+0x26>)
 800718a:	2300      	movs	r3, #0
 800718c:	e001      	b.n	8007192 <LoopFillZerobss>

0800718e <FillZerobss>:
 800718e:	6013      	str	r3, [r2, #0]
 8007190:	3204      	adds	r2, #4

08007192 <LoopFillZerobss>:
 8007192:	42a2      	cmp	r2, r4
 8007194:	d3fb      	bcc.n	800718e <FillZerobss>
 8007196:	f7ff ff61 	bl	800705c <SystemInit>
 800719a:	f001 fed7 	bl	8008f4c <__libc_init_array>
 800719e:	f7ff fe7b 	bl	8006e98 <main>
 80071a2:	4770      	bx	lr
 80071a4:	20010000 	.word	0x20010000
 80071a8:	20000000 	.word	0x20000000
 80071ac:	2000000c 	.word	0x2000000c
 80071b0:	08008fe4 	.word	0x08008fe4
 80071b4:	2000000c 	.word	0x2000000c
 80071b8:	2000015c 	.word	0x2000015c

080071bc <ADC_IRQHandler>:
 80071bc:	e7fe      	b.n	80071bc <ADC_IRQHandler>
	...

080071c0 <HAL_Init>:
 80071c0:	b580      	push	{r7, lr}
 80071c2:	af00      	add	r7, sp, #0
 80071c4:	4b0e      	ldr	r3, [pc, #56]	; (8007200 <HAL_Init+0x40>)
 80071c6:	681b      	ldr	r3, [r3, #0]
 80071c8:	4a0d      	ldr	r2, [pc, #52]	; (8007200 <HAL_Init+0x40>)
 80071ca:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80071ce:	6013      	str	r3, [r2, #0]
 80071d0:	4b0b      	ldr	r3, [pc, #44]	; (8007200 <HAL_Init+0x40>)
 80071d2:	681b      	ldr	r3, [r3, #0]
 80071d4:	4a0a      	ldr	r2, [pc, #40]	; (8007200 <HAL_Init+0x40>)
 80071d6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80071da:	6013      	str	r3, [r2, #0]
 80071dc:	4b08      	ldr	r3, [pc, #32]	; (8007200 <HAL_Init+0x40>)
 80071de:	681b      	ldr	r3, [r3, #0]
 80071e0:	4a07      	ldr	r2, [pc, #28]	; (8007200 <HAL_Init+0x40>)
 80071e2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80071e6:	6013      	str	r3, [r2, #0]
 80071e8:	2003      	movs	r0, #3
 80071ea:	f000 f931 	bl	8007450 <HAL_NVIC_SetPriorityGrouping>
 80071ee:	200f      	movs	r0, #15
 80071f0:	f000 f808 	bl	8007204 <HAL_InitTick>
 80071f4:	f7ff fee0 	bl	8006fb8 <HAL_MspInit>
 80071f8:	2300      	movs	r3, #0
 80071fa:	4618      	mov	r0, r3
 80071fc:	bd80      	pop	{r7, pc}
 80071fe:	bf00      	nop
 8007200:	40023c00 	.word	0x40023c00

08007204 <HAL_InitTick>:
 8007204:	b580      	push	{r7, lr}
 8007206:	b082      	sub	sp, #8
 8007208:	af00      	add	r7, sp, #0
 800720a:	6078      	str	r0, [r7, #4]
 800720c:	4b12      	ldr	r3, [pc, #72]	; (8007258 <HAL_InitTick+0x54>)
 800720e:	681a      	ldr	r2, [r3, #0]
 8007210:	4b12      	ldr	r3, [pc, #72]	; (800725c <HAL_InitTick+0x58>)
 8007212:	781b      	ldrb	r3, [r3, #0]
 8007214:	4619      	mov	r1, r3
 8007216:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800721a:	fbb3 f3f1 	udiv	r3, r3, r1
 800721e:	fbb2 f3f3 	udiv	r3, r2, r3
 8007222:	4618      	mov	r0, r3
 8007224:	f000 f93b 	bl	800749e <HAL_SYSTICK_Config>
 8007228:	4603      	mov	r3, r0
 800722a:	2b00      	cmp	r3, #0
 800722c:	d001      	beq.n	8007232 <HAL_InitTick+0x2e>
 800722e:	2301      	movs	r3, #1
 8007230:	e00e      	b.n	8007250 <HAL_InitTick+0x4c>
 8007232:	687b      	ldr	r3, [r7, #4]
 8007234:	2b0f      	cmp	r3, #15
 8007236:	d80a      	bhi.n	800724e <HAL_InitTick+0x4a>
 8007238:	2200      	movs	r2, #0
 800723a:	6879      	ldr	r1, [r7, #4]
 800723c:	f04f 30ff 	mov.w	r0, #4294967295
 8007240:	f000 f911 	bl	8007466 <HAL_NVIC_SetPriority>
 8007244:	4a06      	ldr	r2, [pc, #24]	; (8007260 <HAL_InitTick+0x5c>)
 8007246:	687b      	ldr	r3, [r7, #4]
 8007248:	6013      	str	r3, [r2, #0]
 800724a:	2300      	movs	r3, #0
 800724c:	e000      	b.n	8007250 <HAL_InitTick+0x4c>
 800724e:	2301      	movs	r3, #1
 8007250:	4618      	mov	r0, r3
 8007252:	3708      	adds	r7, #8
 8007254:	46bd      	mov	sp, r7
 8007256:	bd80      	pop	{r7, pc}
 8007258:	20000000 	.word	0x20000000
 800725c:	20000008 	.word	0x20000008
 8007260:	20000004 	.word	0x20000004

08007264 <HAL_IncTick>:
 8007264:	b480      	push	{r7}
 8007266:	af00      	add	r7, sp, #0
 8007268:	4b06      	ldr	r3, [pc, #24]	; (8007284 <HAL_IncTick+0x20>)
 800726a:	781b      	ldrb	r3, [r3, #0]
 800726c:	461a      	mov	r2, r3
 800726e:	4b06      	ldr	r3, [pc, #24]	; (8007288 <HAL_IncTick+0x24>)
 8007270:	681b      	ldr	r3, [r3, #0]
 8007272:	4413      	add	r3, r2
 8007274:	4a04      	ldr	r2, [pc, #16]	; (8007288 <HAL_IncTick+0x24>)
 8007276:	6013      	str	r3, [r2, #0]
 8007278:	bf00      	nop
 800727a:	46bd      	mov	sp, r7
 800727c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007280:	4770      	bx	lr
 8007282:	bf00      	nop
 8007284:	20000008 	.word	0x20000008
 8007288:	20000138 	.word	0x20000138

0800728c <HAL_GetTick>:
 800728c:	b480      	push	{r7}
 800728e:	af00      	add	r7, sp, #0
 8007290:	4b03      	ldr	r3, [pc, #12]	; (80072a0 <HAL_GetTick+0x14>)
 8007292:	681b      	ldr	r3, [r3, #0]
 8007294:	4618      	mov	r0, r3
 8007296:	46bd      	mov	sp, r7
 8007298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800729c:	4770      	bx	lr
 800729e:	bf00      	nop
 80072a0:	20000138 	.word	0x20000138

080072a4 <HAL_Delay>:
 80072a4:	b580      	push	{r7, lr}
 80072a6:	b084      	sub	sp, #16
 80072a8:	af00      	add	r7, sp, #0
 80072aa:	6078      	str	r0, [r7, #4]
 80072ac:	f7ff ffee 	bl	800728c <HAL_GetTick>
 80072b0:	60b8      	str	r0, [r7, #8]
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	60fb      	str	r3, [r7, #12]
 80072b6:	68fb      	ldr	r3, [r7, #12]
 80072b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80072bc:	d005      	beq.n	80072ca <HAL_Delay+0x26>
 80072be:	4b0a      	ldr	r3, [pc, #40]	; (80072e8 <HAL_Delay+0x44>)
 80072c0:	781b      	ldrb	r3, [r3, #0]
 80072c2:	461a      	mov	r2, r3
 80072c4:	68fb      	ldr	r3, [r7, #12]
 80072c6:	4413      	add	r3, r2
 80072c8:	60fb      	str	r3, [r7, #12]
 80072ca:	bf00      	nop
 80072cc:	f7ff ffde 	bl	800728c <HAL_GetTick>
 80072d0:	4602      	mov	r2, r0
 80072d2:	68bb      	ldr	r3, [r7, #8]
 80072d4:	1ad3      	subs	r3, r2, r3
 80072d6:	68fa      	ldr	r2, [r7, #12]
 80072d8:	429a      	cmp	r2, r3
 80072da:	d8f7      	bhi.n	80072cc <HAL_Delay+0x28>
 80072dc:	bf00      	nop
 80072de:	bf00      	nop
 80072e0:	3710      	adds	r7, #16
 80072e2:	46bd      	mov	sp, r7
 80072e4:	bd80      	pop	{r7, pc}
 80072e6:	bf00      	nop
 80072e8:	20000008 	.word	0x20000008

080072ec <__NVIC_SetPriorityGrouping>:
 80072ec:	b480      	push	{r7}
 80072ee:	b085      	sub	sp, #20
 80072f0:	af00      	add	r7, sp, #0
 80072f2:	6078      	str	r0, [r7, #4]
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	f003 0307 	and.w	r3, r3, #7
 80072fa:	60fb      	str	r3, [r7, #12]
 80072fc:	4b0c      	ldr	r3, [pc, #48]	; (8007330 <__NVIC_SetPriorityGrouping+0x44>)
 80072fe:	68db      	ldr	r3, [r3, #12]
 8007300:	60bb      	str	r3, [r7, #8]
 8007302:	68ba      	ldr	r2, [r7, #8]
 8007304:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8007308:	4013      	ands	r3, r2
 800730a:	60bb      	str	r3, [r7, #8]
 800730c:	68fb      	ldr	r3, [r7, #12]
 800730e:	021a      	lsls	r2, r3, #8
 8007310:	68bb      	ldr	r3, [r7, #8]
 8007312:	4313      	orrs	r3, r2
 8007314:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8007318:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800731c:	60bb      	str	r3, [r7, #8]
 800731e:	4a04      	ldr	r2, [pc, #16]	; (8007330 <__NVIC_SetPriorityGrouping+0x44>)
 8007320:	68bb      	ldr	r3, [r7, #8]
 8007322:	60d3      	str	r3, [r2, #12]
 8007324:	bf00      	nop
 8007326:	3714      	adds	r7, #20
 8007328:	46bd      	mov	sp, r7
 800732a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800732e:	4770      	bx	lr
 8007330:	e000ed00 	.word	0xe000ed00

08007334 <__NVIC_GetPriorityGrouping>:
 8007334:	b480      	push	{r7}
 8007336:	af00      	add	r7, sp, #0
 8007338:	4b04      	ldr	r3, [pc, #16]	; (800734c <__NVIC_GetPriorityGrouping+0x18>)
 800733a:	68db      	ldr	r3, [r3, #12]
 800733c:	0a1b      	lsrs	r3, r3, #8
 800733e:	f003 0307 	and.w	r3, r3, #7
 8007342:	4618      	mov	r0, r3
 8007344:	46bd      	mov	sp, r7
 8007346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800734a:	4770      	bx	lr
 800734c:	e000ed00 	.word	0xe000ed00

08007350 <__NVIC_SetPriority>:
 8007350:	b480      	push	{r7}
 8007352:	b083      	sub	sp, #12
 8007354:	af00      	add	r7, sp, #0
 8007356:	4603      	mov	r3, r0
 8007358:	6039      	str	r1, [r7, #0]
 800735a:	71fb      	strb	r3, [r7, #7]
 800735c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007360:	2b00      	cmp	r3, #0
 8007362:	db0a      	blt.n	800737a <__NVIC_SetPriority+0x2a>
 8007364:	683b      	ldr	r3, [r7, #0]
 8007366:	b2da      	uxtb	r2, r3
 8007368:	490c      	ldr	r1, [pc, #48]	; (800739c <__NVIC_SetPriority+0x4c>)
 800736a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800736e:	0112      	lsls	r2, r2, #4
 8007370:	b2d2      	uxtb	r2, r2
 8007372:	440b      	add	r3, r1
 8007374:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8007378:	e00a      	b.n	8007390 <__NVIC_SetPriority+0x40>
 800737a:	683b      	ldr	r3, [r7, #0]
 800737c:	b2da      	uxtb	r2, r3
 800737e:	4908      	ldr	r1, [pc, #32]	; (80073a0 <__NVIC_SetPriority+0x50>)
 8007380:	79fb      	ldrb	r3, [r7, #7]
 8007382:	f003 030f 	and.w	r3, r3, #15
 8007386:	3b04      	subs	r3, #4
 8007388:	0112      	lsls	r2, r2, #4
 800738a:	b2d2      	uxtb	r2, r2
 800738c:	440b      	add	r3, r1
 800738e:	761a      	strb	r2, [r3, #24]
 8007390:	bf00      	nop
 8007392:	370c      	adds	r7, #12
 8007394:	46bd      	mov	sp, r7
 8007396:	f85d 7b04 	ldr.w	r7, [sp], #4
 800739a:	4770      	bx	lr
 800739c:	e000e100 	.word	0xe000e100
 80073a0:	e000ed00 	.word	0xe000ed00

080073a4 <NVIC_EncodePriority>:
 80073a4:	b480      	push	{r7}
 80073a6:	b089      	sub	sp, #36	; 0x24
 80073a8:	af00      	add	r7, sp, #0
 80073aa:	60f8      	str	r0, [r7, #12]
 80073ac:	60b9      	str	r1, [r7, #8]
 80073ae:	607a      	str	r2, [r7, #4]
 80073b0:	68fb      	ldr	r3, [r7, #12]
 80073b2:	f003 0307 	and.w	r3, r3, #7
 80073b6:	61fb      	str	r3, [r7, #28]
 80073b8:	69fb      	ldr	r3, [r7, #28]
 80073ba:	f1c3 0307 	rsb	r3, r3, #7
 80073be:	2b04      	cmp	r3, #4
 80073c0:	bf28      	it	cs
 80073c2:	2304      	movcs	r3, #4
 80073c4:	61bb      	str	r3, [r7, #24]
 80073c6:	69fb      	ldr	r3, [r7, #28]
 80073c8:	3304      	adds	r3, #4
 80073ca:	2b06      	cmp	r3, #6
 80073cc:	d902      	bls.n	80073d4 <NVIC_EncodePriority+0x30>
 80073ce:	69fb      	ldr	r3, [r7, #28]
 80073d0:	3b03      	subs	r3, #3
 80073d2:	e000      	b.n	80073d6 <NVIC_EncodePriority+0x32>
 80073d4:	2300      	movs	r3, #0
 80073d6:	617b      	str	r3, [r7, #20]
 80073d8:	f04f 32ff 	mov.w	r2, #4294967295
 80073dc:	69bb      	ldr	r3, [r7, #24]
 80073de:	fa02 f303 	lsl.w	r3, r2, r3
 80073e2:	43da      	mvns	r2, r3
 80073e4:	68bb      	ldr	r3, [r7, #8]
 80073e6:	401a      	ands	r2, r3
 80073e8:	697b      	ldr	r3, [r7, #20]
 80073ea:	409a      	lsls	r2, r3
 80073ec:	f04f 31ff 	mov.w	r1, #4294967295
 80073f0:	697b      	ldr	r3, [r7, #20]
 80073f2:	fa01 f303 	lsl.w	r3, r1, r3
 80073f6:	43d9      	mvns	r1, r3
 80073f8:	687b      	ldr	r3, [r7, #4]
 80073fa:	400b      	ands	r3, r1
 80073fc:	4313      	orrs	r3, r2
 80073fe:	4618      	mov	r0, r3
 8007400:	3724      	adds	r7, #36	; 0x24
 8007402:	46bd      	mov	sp, r7
 8007404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007408:	4770      	bx	lr
	...

0800740c <SysTick_Config>:
 800740c:	b580      	push	{r7, lr}
 800740e:	b082      	sub	sp, #8
 8007410:	af00      	add	r7, sp, #0
 8007412:	6078      	str	r0, [r7, #4]
 8007414:	687b      	ldr	r3, [r7, #4]
 8007416:	3b01      	subs	r3, #1
 8007418:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800741c:	d301      	bcc.n	8007422 <SysTick_Config+0x16>
 800741e:	2301      	movs	r3, #1
 8007420:	e00f      	b.n	8007442 <SysTick_Config+0x36>
 8007422:	4a0a      	ldr	r2, [pc, #40]	; (800744c <SysTick_Config+0x40>)
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	3b01      	subs	r3, #1
 8007428:	6053      	str	r3, [r2, #4]
 800742a:	210f      	movs	r1, #15
 800742c:	f04f 30ff 	mov.w	r0, #4294967295
 8007430:	f7ff ff8e 	bl	8007350 <__NVIC_SetPriority>
 8007434:	4b05      	ldr	r3, [pc, #20]	; (800744c <SysTick_Config+0x40>)
 8007436:	2200      	movs	r2, #0
 8007438:	609a      	str	r2, [r3, #8]
 800743a:	4b04      	ldr	r3, [pc, #16]	; (800744c <SysTick_Config+0x40>)
 800743c:	2207      	movs	r2, #7
 800743e:	601a      	str	r2, [r3, #0]
 8007440:	2300      	movs	r3, #0
 8007442:	4618      	mov	r0, r3
 8007444:	3708      	adds	r7, #8
 8007446:	46bd      	mov	sp, r7
 8007448:	bd80      	pop	{r7, pc}
 800744a:	bf00      	nop
 800744c:	e000e010 	.word	0xe000e010

08007450 <HAL_NVIC_SetPriorityGrouping>:
 8007450:	b580      	push	{r7, lr}
 8007452:	b082      	sub	sp, #8
 8007454:	af00      	add	r7, sp, #0
 8007456:	6078      	str	r0, [r7, #4]
 8007458:	6878      	ldr	r0, [r7, #4]
 800745a:	f7ff ff47 	bl	80072ec <__NVIC_SetPriorityGrouping>
 800745e:	bf00      	nop
 8007460:	3708      	adds	r7, #8
 8007462:	46bd      	mov	sp, r7
 8007464:	bd80      	pop	{r7, pc}

08007466 <HAL_NVIC_SetPriority>:
 8007466:	b580      	push	{r7, lr}
 8007468:	b086      	sub	sp, #24
 800746a:	af00      	add	r7, sp, #0
 800746c:	4603      	mov	r3, r0
 800746e:	60b9      	str	r1, [r7, #8]
 8007470:	607a      	str	r2, [r7, #4]
 8007472:	73fb      	strb	r3, [r7, #15]
 8007474:	2300      	movs	r3, #0
 8007476:	617b      	str	r3, [r7, #20]
 8007478:	f7ff ff5c 	bl	8007334 <__NVIC_GetPriorityGrouping>
 800747c:	6178      	str	r0, [r7, #20]
 800747e:	687a      	ldr	r2, [r7, #4]
 8007480:	68b9      	ldr	r1, [r7, #8]
 8007482:	6978      	ldr	r0, [r7, #20]
 8007484:	f7ff ff8e 	bl	80073a4 <NVIC_EncodePriority>
 8007488:	4602      	mov	r2, r0
 800748a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800748e:	4611      	mov	r1, r2
 8007490:	4618      	mov	r0, r3
 8007492:	f7ff ff5d 	bl	8007350 <__NVIC_SetPriority>
 8007496:	bf00      	nop
 8007498:	3718      	adds	r7, #24
 800749a:	46bd      	mov	sp, r7
 800749c:	bd80      	pop	{r7, pc}

0800749e <HAL_SYSTICK_Config>:
 800749e:	b580      	push	{r7, lr}
 80074a0:	b082      	sub	sp, #8
 80074a2:	af00      	add	r7, sp, #0
 80074a4:	6078      	str	r0, [r7, #4]
 80074a6:	6878      	ldr	r0, [r7, #4]
 80074a8:	f7ff ffb0 	bl	800740c <SysTick_Config>
 80074ac:	4603      	mov	r3, r0
 80074ae:	4618      	mov	r0, r3
 80074b0:	3708      	adds	r7, #8
 80074b2:	46bd      	mov	sp, r7
 80074b4:	bd80      	pop	{r7, pc}
	...

080074b8 <HAL_FLASH_Program>:
 80074b8:	b580      	push	{r7, lr}
 80074ba:	b086      	sub	sp, #24
 80074bc:	af00      	add	r7, sp, #0
 80074be:	60f8      	str	r0, [r7, #12]
 80074c0:	60b9      	str	r1, [r7, #8]
 80074c2:	e9c7 2300 	strd	r2, r3, [r7]
 80074c6:	2301      	movs	r3, #1
 80074c8:	75fb      	strb	r3, [r7, #23]
 80074ca:	4b23      	ldr	r3, [pc, #140]	; (8007558 <HAL_FLASH_Program+0xa0>)
 80074cc:	7e1b      	ldrb	r3, [r3, #24]
 80074ce:	2b01      	cmp	r3, #1
 80074d0:	d101      	bne.n	80074d6 <HAL_FLASH_Program+0x1e>
 80074d2:	2302      	movs	r3, #2
 80074d4:	e03b      	b.n	800754e <HAL_FLASH_Program+0x96>
 80074d6:	4b20      	ldr	r3, [pc, #128]	; (8007558 <HAL_FLASH_Program+0xa0>)
 80074d8:	2201      	movs	r2, #1
 80074da:	761a      	strb	r2, [r3, #24]
 80074dc:	f24c 3050 	movw	r0, #50000	; 0xc350
 80074e0:	f000 f870 	bl	80075c4 <FLASH_WaitForLastOperation>
 80074e4:	4603      	mov	r3, r0
 80074e6:	75fb      	strb	r3, [r7, #23]
 80074e8:	7dfb      	ldrb	r3, [r7, #23]
 80074ea:	2b00      	cmp	r3, #0
 80074ec:	d12b      	bne.n	8007546 <HAL_FLASH_Program+0x8e>
 80074ee:	68fb      	ldr	r3, [r7, #12]
 80074f0:	2b00      	cmp	r3, #0
 80074f2:	d105      	bne.n	8007500 <HAL_FLASH_Program+0x48>
 80074f4:	783b      	ldrb	r3, [r7, #0]
 80074f6:	4619      	mov	r1, r3
 80074f8:	68b8      	ldr	r0, [r7, #8]
 80074fa:	f000 f91b 	bl	8007734 <FLASH_Program_Byte>
 80074fe:	e016      	b.n	800752e <HAL_FLASH_Program+0x76>
 8007500:	68fb      	ldr	r3, [r7, #12]
 8007502:	2b01      	cmp	r3, #1
 8007504:	d105      	bne.n	8007512 <HAL_FLASH_Program+0x5a>
 8007506:	883b      	ldrh	r3, [r7, #0]
 8007508:	4619      	mov	r1, r3
 800750a:	68b8      	ldr	r0, [r7, #8]
 800750c:	f000 f8ee 	bl	80076ec <FLASH_Program_HalfWord>
 8007510:	e00d      	b.n	800752e <HAL_FLASH_Program+0x76>
 8007512:	68fb      	ldr	r3, [r7, #12]
 8007514:	2b02      	cmp	r3, #2
 8007516:	d105      	bne.n	8007524 <HAL_FLASH_Program+0x6c>
 8007518:	683b      	ldr	r3, [r7, #0]
 800751a:	4619      	mov	r1, r3
 800751c:	68b8      	ldr	r0, [r7, #8]
 800751e:	f000 f8c3 	bl	80076a8 <FLASH_Program_Word>
 8007522:	e004      	b.n	800752e <HAL_FLASH_Program+0x76>
 8007524:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007528:	68b8      	ldr	r0, [r7, #8]
 800752a:	f000 f88b 	bl	8007644 <FLASH_Program_DoubleWord>
 800752e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8007532:	f000 f847 	bl	80075c4 <FLASH_WaitForLastOperation>
 8007536:	4603      	mov	r3, r0
 8007538:	75fb      	strb	r3, [r7, #23]
 800753a:	4b08      	ldr	r3, [pc, #32]	; (800755c <HAL_FLASH_Program+0xa4>)
 800753c:	691b      	ldr	r3, [r3, #16]
 800753e:	4a07      	ldr	r2, [pc, #28]	; (800755c <HAL_FLASH_Program+0xa4>)
 8007540:	f023 0301 	bic.w	r3, r3, #1
 8007544:	6113      	str	r3, [r2, #16]
 8007546:	4b04      	ldr	r3, [pc, #16]	; (8007558 <HAL_FLASH_Program+0xa0>)
 8007548:	2200      	movs	r2, #0
 800754a:	761a      	strb	r2, [r3, #24]
 800754c:	7dfb      	ldrb	r3, [r7, #23]
 800754e:	4618      	mov	r0, r3
 8007550:	3718      	adds	r7, #24
 8007552:	46bd      	mov	sp, r7
 8007554:	bd80      	pop	{r7, pc}
 8007556:	bf00      	nop
 8007558:	2000013c 	.word	0x2000013c
 800755c:	40023c00 	.word	0x40023c00

08007560 <HAL_FLASH_Unlock>:
 8007560:	b480      	push	{r7}
 8007562:	b083      	sub	sp, #12
 8007564:	af00      	add	r7, sp, #0
 8007566:	2300      	movs	r3, #0
 8007568:	71fb      	strb	r3, [r7, #7]
 800756a:	4b0b      	ldr	r3, [pc, #44]	; (8007598 <HAL_FLASH_Unlock+0x38>)
 800756c:	691b      	ldr	r3, [r3, #16]
 800756e:	2b00      	cmp	r3, #0
 8007570:	da0b      	bge.n	800758a <HAL_FLASH_Unlock+0x2a>
 8007572:	4b09      	ldr	r3, [pc, #36]	; (8007598 <HAL_FLASH_Unlock+0x38>)
 8007574:	4a09      	ldr	r2, [pc, #36]	; (800759c <HAL_FLASH_Unlock+0x3c>)
 8007576:	605a      	str	r2, [r3, #4]
 8007578:	4b07      	ldr	r3, [pc, #28]	; (8007598 <HAL_FLASH_Unlock+0x38>)
 800757a:	4a09      	ldr	r2, [pc, #36]	; (80075a0 <HAL_FLASH_Unlock+0x40>)
 800757c:	605a      	str	r2, [r3, #4]
 800757e:	4b06      	ldr	r3, [pc, #24]	; (8007598 <HAL_FLASH_Unlock+0x38>)
 8007580:	691b      	ldr	r3, [r3, #16]
 8007582:	2b00      	cmp	r3, #0
 8007584:	da01      	bge.n	800758a <HAL_FLASH_Unlock+0x2a>
 8007586:	2301      	movs	r3, #1
 8007588:	71fb      	strb	r3, [r7, #7]
 800758a:	79fb      	ldrb	r3, [r7, #7]
 800758c:	4618      	mov	r0, r3
 800758e:	370c      	adds	r7, #12
 8007590:	46bd      	mov	sp, r7
 8007592:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007596:	4770      	bx	lr
 8007598:	40023c00 	.word	0x40023c00
 800759c:	45670123 	.word	0x45670123
 80075a0:	cdef89ab 	.word	0xcdef89ab

080075a4 <HAL_FLASH_Lock>:
 80075a4:	b480      	push	{r7}
 80075a6:	af00      	add	r7, sp, #0
 80075a8:	4b05      	ldr	r3, [pc, #20]	; (80075c0 <HAL_FLASH_Lock+0x1c>)
 80075aa:	691b      	ldr	r3, [r3, #16]
 80075ac:	4a04      	ldr	r2, [pc, #16]	; (80075c0 <HAL_FLASH_Lock+0x1c>)
 80075ae:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80075b2:	6113      	str	r3, [r2, #16]
 80075b4:	2300      	movs	r3, #0
 80075b6:	4618      	mov	r0, r3
 80075b8:	46bd      	mov	sp, r7
 80075ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075be:	4770      	bx	lr
 80075c0:	40023c00 	.word	0x40023c00

080075c4 <FLASH_WaitForLastOperation>:
 80075c4:	b580      	push	{r7, lr}
 80075c6:	b084      	sub	sp, #16
 80075c8:	af00      	add	r7, sp, #0
 80075ca:	6078      	str	r0, [r7, #4]
 80075cc:	2300      	movs	r3, #0
 80075ce:	60fb      	str	r3, [r7, #12]
 80075d0:	4b1a      	ldr	r3, [pc, #104]	; (800763c <FLASH_WaitForLastOperation+0x78>)
 80075d2:	2200      	movs	r2, #0
 80075d4:	61da      	str	r2, [r3, #28]
 80075d6:	f7ff fe59 	bl	800728c <HAL_GetTick>
 80075da:	60f8      	str	r0, [r7, #12]
 80075dc:	e010      	b.n	8007600 <FLASH_WaitForLastOperation+0x3c>
 80075de:	687b      	ldr	r3, [r7, #4]
 80075e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80075e4:	d00c      	beq.n	8007600 <FLASH_WaitForLastOperation+0x3c>
 80075e6:	687b      	ldr	r3, [r7, #4]
 80075e8:	2b00      	cmp	r3, #0
 80075ea:	d007      	beq.n	80075fc <FLASH_WaitForLastOperation+0x38>
 80075ec:	f7ff fe4e 	bl	800728c <HAL_GetTick>
 80075f0:	4602      	mov	r2, r0
 80075f2:	68fb      	ldr	r3, [r7, #12]
 80075f4:	1ad3      	subs	r3, r2, r3
 80075f6:	687a      	ldr	r2, [r7, #4]
 80075f8:	429a      	cmp	r2, r3
 80075fa:	d201      	bcs.n	8007600 <FLASH_WaitForLastOperation+0x3c>
 80075fc:	2303      	movs	r3, #3
 80075fe:	e019      	b.n	8007634 <FLASH_WaitForLastOperation+0x70>
 8007600:	4b0f      	ldr	r3, [pc, #60]	; (8007640 <FLASH_WaitForLastOperation+0x7c>)
 8007602:	68db      	ldr	r3, [r3, #12]
 8007604:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007608:	2b00      	cmp	r3, #0
 800760a:	d1e8      	bne.n	80075de <FLASH_WaitForLastOperation+0x1a>
 800760c:	4b0c      	ldr	r3, [pc, #48]	; (8007640 <FLASH_WaitForLastOperation+0x7c>)
 800760e:	68db      	ldr	r3, [r3, #12]
 8007610:	f003 0301 	and.w	r3, r3, #1
 8007614:	2b00      	cmp	r3, #0
 8007616:	d002      	beq.n	800761e <FLASH_WaitForLastOperation+0x5a>
 8007618:	4b09      	ldr	r3, [pc, #36]	; (8007640 <FLASH_WaitForLastOperation+0x7c>)
 800761a:	2201      	movs	r2, #1
 800761c:	60da      	str	r2, [r3, #12]
 800761e:	4b08      	ldr	r3, [pc, #32]	; (8007640 <FLASH_WaitForLastOperation+0x7c>)
 8007620:	68db      	ldr	r3, [r3, #12]
 8007622:	f403 73f9 	and.w	r3, r3, #498	; 0x1f2
 8007626:	2b00      	cmp	r3, #0
 8007628:	d003      	beq.n	8007632 <FLASH_WaitForLastOperation+0x6e>
 800762a:	f000 f8a5 	bl	8007778 <FLASH_SetErrorCode>
 800762e:	2301      	movs	r3, #1
 8007630:	e000      	b.n	8007634 <FLASH_WaitForLastOperation+0x70>
 8007632:	2300      	movs	r3, #0
 8007634:	4618      	mov	r0, r3
 8007636:	3710      	adds	r7, #16
 8007638:	46bd      	mov	sp, r7
 800763a:	bd80      	pop	{r7, pc}
 800763c:	2000013c 	.word	0x2000013c
 8007640:	40023c00 	.word	0x40023c00

08007644 <FLASH_Program_DoubleWord>:
 8007644:	b480      	push	{r7}
 8007646:	b085      	sub	sp, #20
 8007648:	af00      	add	r7, sp, #0
 800764a:	60f8      	str	r0, [r7, #12]
 800764c:	e9c7 2300 	strd	r2, r3, [r7]
 8007650:	4b14      	ldr	r3, [pc, #80]	; (80076a4 <FLASH_Program_DoubleWord+0x60>)
 8007652:	691b      	ldr	r3, [r3, #16]
 8007654:	4a13      	ldr	r2, [pc, #76]	; (80076a4 <FLASH_Program_DoubleWord+0x60>)
 8007656:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800765a:	6113      	str	r3, [r2, #16]
 800765c:	4b11      	ldr	r3, [pc, #68]	; (80076a4 <FLASH_Program_DoubleWord+0x60>)
 800765e:	691b      	ldr	r3, [r3, #16]
 8007660:	4a10      	ldr	r2, [pc, #64]	; (80076a4 <FLASH_Program_DoubleWord+0x60>)
 8007662:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8007666:	6113      	str	r3, [r2, #16]
 8007668:	4b0e      	ldr	r3, [pc, #56]	; (80076a4 <FLASH_Program_DoubleWord+0x60>)
 800766a:	691b      	ldr	r3, [r3, #16]
 800766c:	4a0d      	ldr	r2, [pc, #52]	; (80076a4 <FLASH_Program_DoubleWord+0x60>)
 800766e:	f043 0301 	orr.w	r3, r3, #1
 8007672:	6113      	str	r3, [r2, #16]
 8007674:	68fb      	ldr	r3, [r7, #12]
 8007676:	683a      	ldr	r2, [r7, #0]
 8007678:	601a      	str	r2, [r3, #0]
 800767a:	f3bf 8f6f 	isb	sy
 800767e:	bf00      	nop
 8007680:	e9d7 0100 	ldrd	r0, r1, [r7]
 8007684:	f04f 0200 	mov.w	r2, #0
 8007688:	f04f 0300 	mov.w	r3, #0
 800768c:	000a      	movs	r2, r1
 800768e:	2300      	movs	r3, #0
 8007690:	68f9      	ldr	r1, [r7, #12]
 8007692:	3104      	adds	r1, #4
 8007694:	4613      	mov	r3, r2
 8007696:	600b      	str	r3, [r1, #0]
 8007698:	bf00      	nop
 800769a:	3714      	adds	r7, #20
 800769c:	46bd      	mov	sp, r7
 800769e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076a2:	4770      	bx	lr
 80076a4:	40023c00 	.word	0x40023c00

080076a8 <FLASH_Program_Word>:
 80076a8:	b480      	push	{r7}
 80076aa:	b083      	sub	sp, #12
 80076ac:	af00      	add	r7, sp, #0
 80076ae:	6078      	str	r0, [r7, #4]
 80076b0:	6039      	str	r1, [r7, #0]
 80076b2:	4b0d      	ldr	r3, [pc, #52]	; (80076e8 <FLASH_Program_Word+0x40>)
 80076b4:	691b      	ldr	r3, [r3, #16]
 80076b6:	4a0c      	ldr	r2, [pc, #48]	; (80076e8 <FLASH_Program_Word+0x40>)
 80076b8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80076bc:	6113      	str	r3, [r2, #16]
 80076be:	4b0a      	ldr	r3, [pc, #40]	; (80076e8 <FLASH_Program_Word+0x40>)
 80076c0:	691b      	ldr	r3, [r3, #16]
 80076c2:	4a09      	ldr	r2, [pc, #36]	; (80076e8 <FLASH_Program_Word+0x40>)
 80076c4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80076c8:	6113      	str	r3, [r2, #16]
 80076ca:	4b07      	ldr	r3, [pc, #28]	; (80076e8 <FLASH_Program_Word+0x40>)
 80076cc:	691b      	ldr	r3, [r3, #16]
 80076ce:	4a06      	ldr	r2, [pc, #24]	; (80076e8 <FLASH_Program_Word+0x40>)
 80076d0:	f043 0301 	orr.w	r3, r3, #1
 80076d4:	6113      	str	r3, [r2, #16]
 80076d6:	687b      	ldr	r3, [r7, #4]
 80076d8:	683a      	ldr	r2, [r7, #0]
 80076da:	601a      	str	r2, [r3, #0]
 80076dc:	bf00      	nop
 80076de:	370c      	adds	r7, #12
 80076e0:	46bd      	mov	sp, r7
 80076e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076e6:	4770      	bx	lr
 80076e8:	40023c00 	.word	0x40023c00

080076ec <FLASH_Program_HalfWord>:
 80076ec:	b480      	push	{r7}
 80076ee:	b083      	sub	sp, #12
 80076f0:	af00      	add	r7, sp, #0
 80076f2:	6078      	str	r0, [r7, #4]
 80076f4:	460b      	mov	r3, r1
 80076f6:	807b      	strh	r3, [r7, #2]
 80076f8:	4b0d      	ldr	r3, [pc, #52]	; (8007730 <FLASH_Program_HalfWord+0x44>)
 80076fa:	691b      	ldr	r3, [r3, #16]
 80076fc:	4a0c      	ldr	r2, [pc, #48]	; (8007730 <FLASH_Program_HalfWord+0x44>)
 80076fe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007702:	6113      	str	r3, [r2, #16]
 8007704:	4b0a      	ldr	r3, [pc, #40]	; (8007730 <FLASH_Program_HalfWord+0x44>)
 8007706:	691b      	ldr	r3, [r3, #16]
 8007708:	4a09      	ldr	r2, [pc, #36]	; (8007730 <FLASH_Program_HalfWord+0x44>)
 800770a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800770e:	6113      	str	r3, [r2, #16]
 8007710:	4b07      	ldr	r3, [pc, #28]	; (8007730 <FLASH_Program_HalfWord+0x44>)
 8007712:	691b      	ldr	r3, [r3, #16]
 8007714:	4a06      	ldr	r2, [pc, #24]	; (8007730 <FLASH_Program_HalfWord+0x44>)
 8007716:	f043 0301 	orr.w	r3, r3, #1
 800771a:	6113      	str	r3, [r2, #16]
 800771c:	687b      	ldr	r3, [r7, #4]
 800771e:	887a      	ldrh	r2, [r7, #2]
 8007720:	801a      	strh	r2, [r3, #0]
 8007722:	bf00      	nop
 8007724:	370c      	adds	r7, #12
 8007726:	46bd      	mov	sp, r7
 8007728:	f85d 7b04 	ldr.w	r7, [sp], #4
 800772c:	4770      	bx	lr
 800772e:	bf00      	nop
 8007730:	40023c00 	.word	0x40023c00

08007734 <FLASH_Program_Byte>:
 8007734:	b480      	push	{r7}
 8007736:	b083      	sub	sp, #12
 8007738:	af00      	add	r7, sp, #0
 800773a:	6078      	str	r0, [r7, #4]
 800773c:	460b      	mov	r3, r1
 800773e:	70fb      	strb	r3, [r7, #3]
 8007740:	4b0c      	ldr	r3, [pc, #48]	; (8007774 <FLASH_Program_Byte+0x40>)
 8007742:	691b      	ldr	r3, [r3, #16]
 8007744:	4a0b      	ldr	r2, [pc, #44]	; (8007774 <FLASH_Program_Byte+0x40>)
 8007746:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800774a:	6113      	str	r3, [r2, #16]
 800774c:	4b09      	ldr	r3, [pc, #36]	; (8007774 <FLASH_Program_Byte+0x40>)
 800774e:	4a09      	ldr	r2, [pc, #36]	; (8007774 <FLASH_Program_Byte+0x40>)
 8007750:	691b      	ldr	r3, [r3, #16]
 8007752:	6113      	str	r3, [r2, #16]
 8007754:	4b07      	ldr	r3, [pc, #28]	; (8007774 <FLASH_Program_Byte+0x40>)
 8007756:	691b      	ldr	r3, [r3, #16]
 8007758:	4a06      	ldr	r2, [pc, #24]	; (8007774 <FLASH_Program_Byte+0x40>)
 800775a:	f043 0301 	orr.w	r3, r3, #1
 800775e:	6113      	str	r3, [r2, #16]
 8007760:	687b      	ldr	r3, [r7, #4]
 8007762:	78fa      	ldrb	r2, [r7, #3]
 8007764:	701a      	strb	r2, [r3, #0]
 8007766:	bf00      	nop
 8007768:	370c      	adds	r7, #12
 800776a:	46bd      	mov	sp, r7
 800776c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007770:	4770      	bx	lr
 8007772:	bf00      	nop
 8007774:	40023c00 	.word	0x40023c00

08007778 <FLASH_SetErrorCode>:
 8007778:	b480      	push	{r7}
 800777a:	af00      	add	r7, sp, #0
 800777c:	4b2f      	ldr	r3, [pc, #188]	; (800783c <FLASH_SetErrorCode+0xc4>)
 800777e:	68db      	ldr	r3, [r3, #12]
 8007780:	f003 0310 	and.w	r3, r3, #16
 8007784:	2b00      	cmp	r3, #0
 8007786:	d008      	beq.n	800779a <FLASH_SetErrorCode+0x22>
 8007788:	4b2d      	ldr	r3, [pc, #180]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 800778a:	69db      	ldr	r3, [r3, #28]
 800778c:	f043 0310 	orr.w	r3, r3, #16
 8007790:	4a2b      	ldr	r2, [pc, #172]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 8007792:	61d3      	str	r3, [r2, #28]
 8007794:	4b29      	ldr	r3, [pc, #164]	; (800783c <FLASH_SetErrorCode+0xc4>)
 8007796:	2210      	movs	r2, #16
 8007798:	60da      	str	r2, [r3, #12]
 800779a:	4b28      	ldr	r3, [pc, #160]	; (800783c <FLASH_SetErrorCode+0xc4>)
 800779c:	68db      	ldr	r3, [r3, #12]
 800779e:	f003 0320 	and.w	r3, r3, #32
 80077a2:	2b00      	cmp	r3, #0
 80077a4:	d008      	beq.n	80077b8 <FLASH_SetErrorCode+0x40>
 80077a6:	4b26      	ldr	r3, [pc, #152]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 80077a8:	69db      	ldr	r3, [r3, #28]
 80077aa:	f043 0308 	orr.w	r3, r3, #8
 80077ae:	4a24      	ldr	r2, [pc, #144]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 80077b0:	61d3      	str	r3, [r2, #28]
 80077b2:	4b22      	ldr	r3, [pc, #136]	; (800783c <FLASH_SetErrorCode+0xc4>)
 80077b4:	2220      	movs	r2, #32
 80077b6:	60da      	str	r2, [r3, #12]
 80077b8:	4b20      	ldr	r3, [pc, #128]	; (800783c <FLASH_SetErrorCode+0xc4>)
 80077ba:	68db      	ldr	r3, [r3, #12]
 80077bc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80077c0:	2b00      	cmp	r3, #0
 80077c2:	d008      	beq.n	80077d6 <FLASH_SetErrorCode+0x5e>
 80077c4:	4b1e      	ldr	r3, [pc, #120]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 80077c6:	69db      	ldr	r3, [r3, #28]
 80077c8:	f043 0304 	orr.w	r3, r3, #4
 80077cc:	4a1c      	ldr	r2, [pc, #112]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 80077ce:	61d3      	str	r3, [r2, #28]
 80077d0:	4b1a      	ldr	r3, [pc, #104]	; (800783c <FLASH_SetErrorCode+0xc4>)
 80077d2:	2240      	movs	r2, #64	; 0x40
 80077d4:	60da      	str	r2, [r3, #12]
 80077d6:	4b19      	ldr	r3, [pc, #100]	; (800783c <FLASH_SetErrorCode+0xc4>)
 80077d8:	68db      	ldr	r3, [r3, #12]
 80077da:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80077de:	2b00      	cmp	r3, #0
 80077e0:	d008      	beq.n	80077f4 <FLASH_SetErrorCode+0x7c>
 80077e2:	4b17      	ldr	r3, [pc, #92]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 80077e4:	69db      	ldr	r3, [r3, #28]
 80077e6:	f043 0302 	orr.w	r3, r3, #2
 80077ea:	4a15      	ldr	r2, [pc, #84]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 80077ec:	61d3      	str	r3, [r2, #28]
 80077ee:	4b13      	ldr	r3, [pc, #76]	; (800783c <FLASH_SetErrorCode+0xc4>)
 80077f0:	2280      	movs	r2, #128	; 0x80
 80077f2:	60da      	str	r2, [r3, #12]
 80077f4:	4b11      	ldr	r3, [pc, #68]	; (800783c <FLASH_SetErrorCode+0xc4>)
 80077f6:	68db      	ldr	r3, [r3, #12]
 80077f8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80077fc:	2b00      	cmp	r3, #0
 80077fe:	d009      	beq.n	8007814 <FLASH_SetErrorCode+0x9c>
 8007800:	4b0f      	ldr	r3, [pc, #60]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 8007802:	69db      	ldr	r3, [r3, #28]
 8007804:	f043 0301 	orr.w	r3, r3, #1
 8007808:	4a0d      	ldr	r2, [pc, #52]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 800780a:	61d3      	str	r3, [r2, #28]
 800780c:	4b0b      	ldr	r3, [pc, #44]	; (800783c <FLASH_SetErrorCode+0xc4>)
 800780e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007812:	60da      	str	r2, [r3, #12]
 8007814:	4b09      	ldr	r3, [pc, #36]	; (800783c <FLASH_SetErrorCode+0xc4>)
 8007816:	68db      	ldr	r3, [r3, #12]
 8007818:	f003 0302 	and.w	r3, r3, #2
 800781c:	2b00      	cmp	r3, #0
 800781e:	d008      	beq.n	8007832 <FLASH_SetErrorCode+0xba>
 8007820:	4b07      	ldr	r3, [pc, #28]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 8007822:	69db      	ldr	r3, [r3, #28]
 8007824:	f043 0320 	orr.w	r3, r3, #32
 8007828:	4a05      	ldr	r2, [pc, #20]	; (8007840 <FLASH_SetErrorCode+0xc8>)
 800782a:	61d3      	str	r3, [r2, #28]
 800782c:	4b03      	ldr	r3, [pc, #12]	; (800783c <FLASH_SetErrorCode+0xc4>)
 800782e:	2202      	movs	r2, #2
 8007830:	60da      	str	r2, [r3, #12]
 8007832:	bf00      	nop
 8007834:	46bd      	mov	sp, r7
 8007836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800783a:	4770      	bx	lr
 800783c:	40023c00 	.word	0x40023c00
 8007840:	2000013c 	.word	0x2000013c

08007844 <HAL_FLASHEx_Erase>:
 8007844:	b580      	push	{r7, lr}
 8007846:	b084      	sub	sp, #16
 8007848:	af00      	add	r7, sp, #0
 800784a:	6078      	str	r0, [r7, #4]
 800784c:	6039      	str	r1, [r7, #0]
 800784e:	2301      	movs	r3, #1
 8007850:	73fb      	strb	r3, [r7, #15]
 8007852:	2300      	movs	r3, #0
 8007854:	60bb      	str	r3, [r7, #8]
 8007856:	4b31      	ldr	r3, [pc, #196]	; (800791c <HAL_FLASHEx_Erase+0xd8>)
 8007858:	7e1b      	ldrb	r3, [r3, #24]
 800785a:	2b01      	cmp	r3, #1
 800785c:	d101      	bne.n	8007862 <HAL_FLASHEx_Erase+0x1e>
 800785e:	2302      	movs	r3, #2
 8007860:	e058      	b.n	8007914 <HAL_FLASHEx_Erase+0xd0>
 8007862:	4b2e      	ldr	r3, [pc, #184]	; (800791c <HAL_FLASHEx_Erase+0xd8>)
 8007864:	2201      	movs	r2, #1
 8007866:	761a      	strb	r2, [r3, #24]
 8007868:	f24c 3050 	movw	r0, #50000	; 0xc350
 800786c:	f7ff feaa 	bl	80075c4 <FLASH_WaitForLastOperation>
 8007870:	4603      	mov	r3, r0
 8007872:	73fb      	strb	r3, [r7, #15]
 8007874:	7bfb      	ldrb	r3, [r7, #15]
 8007876:	2b00      	cmp	r3, #0
 8007878:	d148      	bne.n	800790c <HAL_FLASHEx_Erase+0xc8>
 800787a:	683b      	ldr	r3, [r7, #0]
 800787c:	f04f 32ff 	mov.w	r2, #4294967295
 8007880:	601a      	str	r2, [r3, #0]
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	681b      	ldr	r3, [r3, #0]
 8007886:	2b01      	cmp	r3, #1
 8007888:	d115      	bne.n	80078b6 <HAL_FLASHEx_Erase+0x72>
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	691b      	ldr	r3, [r3, #16]
 800788e:	b2da      	uxtb	r2, r3
 8007890:	687b      	ldr	r3, [r7, #4]
 8007892:	685b      	ldr	r3, [r3, #4]
 8007894:	4619      	mov	r1, r3
 8007896:	4610      	mov	r0, r2
 8007898:	f000 f844 	bl	8007924 <FLASH_MassErase>
 800789c:	f24c 3050 	movw	r0, #50000	; 0xc350
 80078a0:	f7ff fe90 	bl	80075c4 <FLASH_WaitForLastOperation>
 80078a4:	4603      	mov	r3, r0
 80078a6:	73fb      	strb	r3, [r7, #15]
 80078a8:	4b1d      	ldr	r3, [pc, #116]	; (8007920 <HAL_FLASHEx_Erase+0xdc>)
 80078aa:	691b      	ldr	r3, [r3, #16]
 80078ac:	4a1c      	ldr	r2, [pc, #112]	; (8007920 <HAL_FLASHEx_Erase+0xdc>)
 80078ae:	f023 0304 	bic.w	r3, r3, #4
 80078b2:	6113      	str	r3, [r2, #16]
 80078b4:	e028      	b.n	8007908 <HAL_FLASHEx_Erase+0xc4>
 80078b6:	687b      	ldr	r3, [r7, #4]
 80078b8:	689b      	ldr	r3, [r3, #8]
 80078ba:	60bb      	str	r3, [r7, #8]
 80078bc:	e01c      	b.n	80078f8 <HAL_FLASHEx_Erase+0xb4>
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	691b      	ldr	r3, [r3, #16]
 80078c2:	b2db      	uxtb	r3, r3
 80078c4:	4619      	mov	r1, r3
 80078c6:	68b8      	ldr	r0, [r7, #8]
 80078c8:	f000 f850 	bl	800796c <FLASH_Erase_Sector>
 80078cc:	f24c 3050 	movw	r0, #50000	; 0xc350
 80078d0:	f7ff fe78 	bl	80075c4 <FLASH_WaitForLastOperation>
 80078d4:	4603      	mov	r3, r0
 80078d6:	73fb      	strb	r3, [r7, #15]
 80078d8:	4b11      	ldr	r3, [pc, #68]	; (8007920 <HAL_FLASHEx_Erase+0xdc>)
 80078da:	691b      	ldr	r3, [r3, #16]
 80078dc:	4a10      	ldr	r2, [pc, #64]	; (8007920 <HAL_FLASHEx_Erase+0xdc>)
 80078de:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 80078e2:	6113      	str	r3, [r2, #16]
 80078e4:	7bfb      	ldrb	r3, [r7, #15]
 80078e6:	2b00      	cmp	r3, #0
 80078e8:	d003      	beq.n	80078f2 <HAL_FLASHEx_Erase+0xae>
 80078ea:	683b      	ldr	r3, [r7, #0]
 80078ec:	68ba      	ldr	r2, [r7, #8]
 80078ee:	601a      	str	r2, [r3, #0]
 80078f0:	e00a      	b.n	8007908 <HAL_FLASHEx_Erase+0xc4>
 80078f2:	68bb      	ldr	r3, [r7, #8]
 80078f4:	3301      	adds	r3, #1
 80078f6:	60bb      	str	r3, [r7, #8]
 80078f8:	687b      	ldr	r3, [r7, #4]
 80078fa:	68da      	ldr	r2, [r3, #12]
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	689b      	ldr	r3, [r3, #8]
 8007900:	4413      	add	r3, r2
 8007902:	68ba      	ldr	r2, [r7, #8]
 8007904:	429a      	cmp	r2, r3
 8007906:	d3da      	bcc.n	80078be <HAL_FLASHEx_Erase+0x7a>
 8007908:	f000 f878 	bl	80079fc <FLASH_FlushCaches>
 800790c:	4b03      	ldr	r3, [pc, #12]	; (800791c <HAL_FLASHEx_Erase+0xd8>)
 800790e:	2200      	movs	r2, #0
 8007910:	761a      	strb	r2, [r3, #24]
 8007912:	7bfb      	ldrb	r3, [r7, #15]
 8007914:	4618      	mov	r0, r3
 8007916:	3710      	adds	r7, #16
 8007918:	46bd      	mov	sp, r7
 800791a:	bd80      	pop	{r7, pc}
 800791c:	2000013c 	.word	0x2000013c
 8007920:	40023c00 	.word	0x40023c00

08007924 <FLASH_MassErase>:
 8007924:	b480      	push	{r7}
 8007926:	b083      	sub	sp, #12
 8007928:	af00      	add	r7, sp, #0
 800792a:	4603      	mov	r3, r0
 800792c:	6039      	str	r1, [r7, #0]
 800792e:	71fb      	strb	r3, [r7, #7]
 8007930:	4b0d      	ldr	r3, [pc, #52]	; (8007968 <FLASH_MassErase+0x44>)
 8007932:	691b      	ldr	r3, [r3, #16]
 8007934:	4a0c      	ldr	r2, [pc, #48]	; (8007968 <FLASH_MassErase+0x44>)
 8007936:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800793a:	6113      	str	r3, [r2, #16]
 800793c:	4b0a      	ldr	r3, [pc, #40]	; (8007968 <FLASH_MassErase+0x44>)
 800793e:	691b      	ldr	r3, [r3, #16]
 8007940:	4a09      	ldr	r2, [pc, #36]	; (8007968 <FLASH_MassErase+0x44>)
 8007942:	f043 0304 	orr.w	r3, r3, #4
 8007946:	6113      	str	r3, [r2, #16]
 8007948:	4b07      	ldr	r3, [pc, #28]	; (8007968 <FLASH_MassErase+0x44>)
 800794a:	691a      	ldr	r2, [r3, #16]
 800794c:	79fb      	ldrb	r3, [r7, #7]
 800794e:	021b      	lsls	r3, r3, #8
 8007950:	4313      	orrs	r3, r2
 8007952:	4a05      	ldr	r2, [pc, #20]	; (8007968 <FLASH_MassErase+0x44>)
 8007954:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007958:	6113      	str	r3, [r2, #16]
 800795a:	bf00      	nop
 800795c:	370c      	adds	r7, #12
 800795e:	46bd      	mov	sp, r7
 8007960:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007964:	4770      	bx	lr
 8007966:	bf00      	nop
 8007968:	40023c00 	.word	0x40023c00

0800796c <FLASH_Erase_Sector>:
 800796c:	b480      	push	{r7}
 800796e:	b085      	sub	sp, #20
 8007970:	af00      	add	r7, sp, #0
 8007972:	6078      	str	r0, [r7, #4]
 8007974:	460b      	mov	r3, r1
 8007976:	70fb      	strb	r3, [r7, #3]
 8007978:	2300      	movs	r3, #0
 800797a:	60fb      	str	r3, [r7, #12]
 800797c:	78fb      	ldrb	r3, [r7, #3]
 800797e:	2b00      	cmp	r3, #0
 8007980:	d102      	bne.n	8007988 <FLASH_Erase_Sector+0x1c>
 8007982:	2300      	movs	r3, #0
 8007984:	60fb      	str	r3, [r7, #12]
 8007986:	e010      	b.n	80079aa <FLASH_Erase_Sector+0x3e>
 8007988:	78fb      	ldrb	r3, [r7, #3]
 800798a:	2b01      	cmp	r3, #1
 800798c:	d103      	bne.n	8007996 <FLASH_Erase_Sector+0x2a>
 800798e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007992:	60fb      	str	r3, [r7, #12]
 8007994:	e009      	b.n	80079aa <FLASH_Erase_Sector+0x3e>
 8007996:	78fb      	ldrb	r3, [r7, #3]
 8007998:	2b02      	cmp	r3, #2
 800799a:	d103      	bne.n	80079a4 <FLASH_Erase_Sector+0x38>
 800799c:	f44f 7300 	mov.w	r3, #512	; 0x200
 80079a0:	60fb      	str	r3, [r7, #12]
 80079a2:	e002      	b.n	80079aa <FLASH_Erase_Sector+0x3e>
 80079a4:	f44f 7340 	mov.w	r3, #768	; 0x300
 80079a8:	60fb      	str	r3, [r7, #12]
 80079aa:	4b13      	ldr	r3, [pc, #76]	; (80079f8 <FLASH_Erase_Sector+0x8c>)
 80079ac:	691b      	ldr	r3, [r3, #16]
 80079ae:	4a12      	ldr	r2, [pc, #72]	; (80079f8 <FLASH_Erase_Sector+0x8c>)
 80079b0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80079b4:	6113      	str	r3, [r2, #16]
 80079b6:	4b10      	ldr	r3, [pc, #64]	; (80079f8 <FLASH_Erase_Sector+0x8c>)
 80079b8:	691a      	ldr	r2, [r3, #16]
 80079ba:	490f      	ldr	r1, [pc, #60]	; (80079f8 <FLASH_Erase_Sector+0x8c>)
 80079bc:	68fb      	ldr	r3, [r7, #12]
 80079be:	4313      	orrs	r3, r2
 80079c0:	610b      	str	r3, [r1, #16]
 80079c2:	4b0d      	ldr	r3, [pc, #52]	; (80079f8 <FLASH_Erase_Sector+0x8c>)
 80079c4:	691b      	ldr	r3, [r3, #16]
 80079c6:	4a0c      	ldr	r2, [pc, #48]	; (80079f8 <FLASH_Erase_Sector+0x8c>)
 80079c8:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80079cc:	6113      	str	r3, [r2, #16]
 80079ce:	4b0a      	ldr	r3, [pc, #40]	; (80079f8 <FLASH_Erase_Sector+0x8c>)
 80079d0:	691a      	ldr	r2, [r3, #16]
 80079d2:	687b      	ldr	r3, [r7, #4]
 80079d4:	00db      	lsls	r3, r3, #3
 80079d6:	4313      	orrs	r3, r2
 80079d8:	4a07      	ldr	r2, [pc, #28]	; (80079f8 <FLASH_Erase_Sector+0x8c>)
 80079da:	f043 0302 	orr.w	r3, r3, #2
 80079de:	6113      	str	r3, [r2, #16]
 80079e0:	4b05      	ldr	r3, [pc, #20]	; (80079f8 <FLASH_Erase_Sector+0x8c>)
 80079e2:	691b      	ldr	r3, [r3, #16]
 80079e4:	4a04      	ldr	r2, [pc, #16]	; (80079f8 <FLASH_Erase_Sector+0x8c>)
 80079e6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80079ea:	6113      	str	r3, [r2, #16]
 80079ec:	bf00      	nop
 80079ee:	3714      	adds	r7, #20
 80079f0:	46bd      	mov	sp, r7
 80079f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079f6:	4770      	bx	lr
 80079f8:	40023c00 	.word	0x40023c00

080079fc <FLASH_FlushCaches>:
 80079fc:	b480      	push	{r7}
 80079fe:	af00      	add	r7, sp, #0
 8007a00:	4b20      	ldr	r3, [pc, #128]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a02:	681b      	ldr	r3, [r3, #0]
 8007a04:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8007a08:	2b00      	cmp	r3, #0
 8007a0a:	d017      	beq.n	8007a3c <FLASH_FlushCaches+0x40>
 8007a0c:	4b1d      	ldr	r3, [pc, #116]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a0e:	681b      	ldr	r3, [r3, #0]
 8007a10:	4a1c      	ldr	r2, [pc, #112]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a12:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8007a16:	6013      	str	r3, [r2, #0]
 8007a18:	4b1a      	ldr	r3, [pc, #104]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a1a:	681b      	ldr	r3, [r3, #0]
 8007a1c:	4a19      	ldr	r2, [pc, #100]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a1e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8007a22:	6013      	str	r3, [r2, #0]
 8007a24:	4b17      	ldr	r3, [pc, #92]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a26:	681b      	ldr	r3, [r3, #0]
 8007a28:	4a16      	ldr	r2, [pc, #88]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a2a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007a2e:	6013      	str	r3, [r2, #0]
 8007a30:	4b14      	ldr	r3, [pc, #80]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a32:	681b      	ldr	r3, [r3, #0]
 8007a34:	4a13      	ldr	r2, [pc, #76]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a36:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007a3a:	6013      	str	r3, [r2, #0]
 8007a3c:	4b11      	ldr	r3, [pc, #68]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a3e:	681b      	ldr	r3, [r3, #0]
 8007a40:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007a44:	2b00      	cmp	r3, #0
 8007a46:	d017      	beq.n	8007a78 <FLASH_FlushCaches+0x7c>
 8007a48:	4b0e      	ldr	r3, [pc, #56]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a4a:	681b      	ldr	r3, [r3, #0]
 8007a4c:	4a0d      	ldr	r2, [pc, #52]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a4e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007a52:	6013      	str	r3, [r2, #0]
 8007a54:	4b0b      	ldr	r3, [pc, #44]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a56:	681b      	ldr	r3, [r3, #0]
 8007a58:	4a0a      	ldr	r2, [pc, #40]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a5a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8007a5e:	6013      	str	r3, [r2, #0]
 8007a60:	4b08      	ldr	r3, [pc, #32]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a62:	681b      	ldr	r3, [r3, #0]
 8007a64:	4a07      	ldr	r2, [pc, #28]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a66:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007a6a:	6013      	str	r3, [r2, #0]
 8007a6c:	4b05      	ldr	r3, [pc, #20]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a6e:	681b      	ldr	r3, [r3, #0]
 8007a70:	4a04      	ldr	r2, [pc, #16]	; (8007a84 <FLASH_FlushCaches+0x88>)
 8007a72:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8007a76:	6013      	str	r3, [r2, #0]
 8007a78:	bf00      	nop
 8007a7a:	46bd      	mov	sp, r7
 8007a7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a80:	4770      	bx	lr
 8007a82:	bf00      	nop
 8007a84:	40023c00 	.word	0x40023c00

08007a88 <HAL_GPIO_Init>:
 8007a88:	b480      	push	{r7}
 8007a8a:	b089      	sub	sp, #36	; 0x24
 8007a8c:	af00      	add	r7, sp, #0
 8007a8e:	6078      	str	r0, [r7, #4]
 8007a90:	6039      	str	r1, [r7, #0]
 8007a92:	2300      	movs	r3, #0
 8007a94:	617b      	str	r3, [r7, #20]
 8007a96:	2300      	movs	r3, #0
 8007a98:	613b      	str	r3, [r7, #16]
 8007a9a:	2300      	movs	r3, #0
 8007a9c:	61bb      	str	r3, [r7, #24]
 8007a9e:	2300      	movs	r3, #0
 8007aa0:	61fb      	str	r3, [r7, #28]
 8007aa2:	e159      	b.n	8007d58 <HAL_GPIO_Init+0x2d0>
 8007aa4:	2201      	movs	r2, #1
 8007aa6:	69fb      	ldr	r3, [r7, #28]
 8007aa8:	fa02 f303 	lsl.w	r3, r2, r3
 8007aac:	617b      	str	r3, [r7, #20]
 8007aae:	683b      	ldr	r3, [r7, #0]
 8007ab0:	681b      	ldr	r3, [r3, #0]
 8007ab2:	697a      	ldr	r2, [r7, #20]
 8007ab4:	4013      	ands	r3, r2
 8007ab6:	613b      	str	r3, [r7, #16]
 8007ab8:	693a      	ldr	r2, [r7, #16]
 8007aba:	697b      	ldr	r3, [r7, #20]
 8007abc:	429a      	cmp	r2, r3
 8007abe:	f040 8148 	bne.w	8007d52 <HAL_GPIO_Init+0x2ca>
 8007ac2:	683b      	ldr	r3, [r7, #0]
 8007ac4:	685b      	ldr	r3, [r3, #4]
 8007ac6:	f003 0303 	and.w	r3, r3, #3
 8007aca:	2b01      	cmp	r3, #1
 8007acc:	d005      	beq.n	8007ada <HAL_GPIO_Init+0x52>
 8007ace:	683b      	ldr	r3, [r7, #0]
 8007ad0:	685b      	ldr	r3, [r3, #4]
 8007ad2:	f003 0303 	and.w	r3, r3, #3
 8007ad6:	2b02      	cmp	r3, #2
 8007ad8:	d130      	bne.n	8007b3c <HAL_GPIO_Init+0xb4>
 8007ada:	687b      	ldr	r3, [r7, #4]
 8007adc:	689b      	ldr	r3, [r3, #8]
 8007ade:	61bb      	str	r3, [r7, #24]
 8007ae0:	69fb      	ldr	r3, [r7, #28]
 8007ae2:	005b      	lsls	r3, r3, #1
 8007ae4:	2203      	movs	r2, #3
 8007ae6:	fa02 f303 	lsl.w	r3, r2, r3
 8007aea:	43db      	mvns	r3, r3
 8007aec:	69ba      	ldr	r2, [r7, #24]
 8007aee:	4013      	ands	r3, r2
 8007af0:	61bb      	str	r3, [r7, #24]
 8007af2:	683b      	ldr	r3, [r7, #0]
 8007af4:	68da      	ldr	r2, [r3, #12]
 8007af6:	69fb      	ldr	r3, [r7, #28]
 8007af8:	005b      	lsls	r3, r3, #1
 8007afa:	fa02 f303 	lsl.w	r3, r2, r3
 8007afe:	69ba      	ldr	r2, [r7, #24]
 8007b00:	4313      	orrs	r3, r2
 8007b02:	61bb      	str	r3, [r7, #24]
 8007b04:	687b      	ldr	r3, [r7, #4]
 8007b06:	69ba      	ldr	r2, [r7, #24]
 8007b08:	609a      	str	r2, [r3, #8]
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	685b      	ldr	r3, [r3, #4]
 8007b0e:	61bb      	str	r3, [r7, #24]
 8007b10:	2201      	movs	r2, #1
 8007b12:	69fb      	ldr	r3, [r7, #28]
 8007b14:	fa02 f303 	lsl.w	r3, r2, r3
 8007b18:	43db      	mvns	r3, r3
 8007b1a:	69ba      	ldr	r2, [r7, #24]
 8007b1c:	4013      	ands	r3, r2
 8007b1e:	61bb      	str	r3, [r7, #24]
 8007b20:	683b      	ldr	r3, [r7, #0]
 8007b22:	685b      	ldr	r3, [r3, #4]
 8007b24:	091b      	lsrs	r3, r3, #4
 8007b26:	f003 0201 	and.w	r2, r3, #1
 8007b2a:	69fb      	ldr	r3, [r7, #28]
 8007b2c:	fa02 f303 	lsl.w	r3, r2, r3
 8007b30:	69ba      	ldr	r2, [r7, #24]
 8007b32:	4313      	orrs	r3, r2
 8007b34:	61bb      	str	r3, [r7, #24]
 8007b36:	687b      	ldr	r3, [r7, #4]
 8007b38:	69ba      	ldr	r2, [r7, #24]
 8007b3a:	605a      	str	r2, [r3, #4]
 8007b3c:	683b      	ldr	r3, [r7, #0]
 8007b3e:	685b      	ldr	r3, [r3, #4]
 8007b40:	f003 0303 	and.w	r3, r3, #3
 8007b44:	2b03      	cmp	r3, #3
 8007b46:	d017      	beq.n	8007b78 <HAL_GPIO_Init+0xf0>
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	68db      	ldr	r3, [r3, #12]
 8007b4c:	61bb      	str	r3, [r7, #24]
 8007b4e:	69fb      	ldr	r3, [r7, #28]
 8007b50:	005b      	lsls	r3, r3, #1
 8007b52:	2203      	movs	r2, #3
 8007b54:	fa02 f303 	lsl.w	r3, r2, r3
 8007b58:	43db      	mvns	r3, r3
 8007b5a:	69ba      	ldr	r2, [r7, #24]
 8007b5c:	4013      	ands	r3, r2
 8007b5e:	61bb      	str	r3, [r7, #24]
 8007b60:	683b      	ldr	r3, [r7, #0]
 8007b62:	689a      	ldr	r2, [r3, #8]
 8007b64:	69fb      	ldr	r3, [r7, #28]
 8007b66:	005b      	lsls	r3, r3, #1
 8007b68:	fa02 f303 	lsl.w	r3, r2, r3
 8007b6c:	69ba      	ldr	r2, [r7, #24]
 8007b6e:	4313      	orrs	r3, r2
 8007b70:	61bb      	str	r3, [r7, #24]
 8007b72:	687b      	ldr	r3, [r7, #4]
 8007b74:	69ba      	ldr	r2, [r7, #24]
 8007b76:	60da      	str	r2, [r3, #12]
 8007b78:	683b      	ldr	r3, [r7, #0]
 8007b7a:	685b      	ldr	r3, [r3, #4]
 8007b7c:	f003 0303 	and.w	r3, r3, #3
 8007b80:	2b02      	cmp	r3, #2
 8007b82:	d123      	bne.n	8007bcc <HAL_GPIO_Init+0x144>
 8007b84:	69fb      	ldr	r3, [r7, #28]
 8007b86:	08da      	lsrs	r2, r3, #3
 8007b88:	687b      	ldr	r3, [r7, #4]
 8007b8a:	3208      	adds	r2, #8
 8007b8c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8007b90:	61bb      	str	r3, [r7, #24]
 8007b92:	69fb      	ldr	r3, [r7, #28]
 8007b94:	f003 0307 	and.w	r3, r3, #7
 8007b98:	009b      	lsls	r3, r3, #2
 8007b9a:	220f      	movs	r2, #15
 8007b9c:	fa02 f303 	lsl.w	r3, r2, r3
 8007ba0:	43db      	mvns	r3, r3
 8007ba2:	69ba      	ldr	r2, [r7, #24]
 8007ba4:	4013      	ands	r3, r2
 8007ba6:	61bb      	str	r3, [r7, #24]
 8007ba8:	683b      	ldr	r3, [r7, #0]
 8007baa:	691a      	ldr	r2, [r3, #16]
 8007bac:	69fb      	ldr	r3, [r7, #28]
 8007bae:	f003 0307 	and.w	r3, r3, #7
 8007bb2:	009b      	lsls	r3, r3, #2
 8007bb4:	fa02 f303 	lsl.w	r3, r2, r3
 8007bb8:	69ba      	ldr	r2, [r7, #24]
 8007bba:	4313      	orrs	r3, r2
 8007bbc:	61bb      	str	r3, [r7, #24]
 8007bbe:	69fb      	ldr	r3, [r7, #28]
 8007bc0:	08da      	lsrs	r2, r3, #3
 8007bc2:	687b      	ldr	r3, [r7, #4]
 8007bc4:	3208      	adds	r2, #8
 8007bc6:	69b9      	ldr	r1, [r7, #24]
 8007bc8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007bcc:	687b      	ldr	r3, [r7, #4]
 8007bce:	681b      	ldr	r3, [r3, #0]
 8007bd0:	61bb      	str	r3, [r7, #24]
 8007bd2:	69fb      	ldr	r3, [r7, #28]
 8007bd4:	005b      	lsls	r3, r3, #1
 8007bd6:	2203      	movs	r2, #3
 8007bd8:	fa02 f303 	lsl.w	r3, r2, r3
 8007bdc:	43db      	mvns	r3, r3
 8007bde:	69ba      	ldr	r2, [r7, #24]
 8007be0:	4013      	ands	r3, r2
 8007be2:	61bb      	str	r3, [r7, #24]
 8007be4:	683b      	ldr	r3, [r7, #0]
 8007be6:	685b      	ldr	r3, [r3, #4]
 8007be8:	f003 0203 	and.w	r2, r3, #3
 8007bec:	69fb      	ldr	r3, [r7, #28]
 8007bee:	005b      	lsls	r3, r3, #1
 8007bf0:	fa02 f303 	lsl.w	r3, r2, r3
 8007bf4:	69ba      	ldr	r2, [r7, #24]
 8007bf6:	4313      	orrs	r3, r2
 8007bf8:	61bb      	str	r3, [r7, #24]
 8007bfa:	687b      	ldr	r3, [r7, #4]
 8007bfc:	69ba      	ldr	r2, [r7, #24]
 8007bfe:	601a      	str	r2, [r3, #0]
 8007c00:	683b      	ldr	r3, [r7, #0]
 8007c02:	685b      	ldr	r3, [r3, #4]
 8007c04:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007c08:	2b00      	cmp	r3, #0
 8007c0a:	f000 80a2 	beq.w	8007d52 <HAL_GPIO_Init+0x2ca>
 8007c0e:	2300      	movs	r3, #0
 8007c10:	60fb      	str	r3, [r7, #12]
 8007c12:	4b57      	ldr	r3, [pc, #348]	; (8007d70 <HAL_GPIO_Init+0x2e8>)
 8007c14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007c16:	4a56      	ldr	r2, [pc, #344]	; (8007d70 <HAL_GPIO_Init+0x2e8>)
 8007c18:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007c1c:	6453      	str	r3, [r2, #68]	; 0x44
 8007c1e:	4b54      	ldr	r3, [pc, #336]	; (8007d70 <HAL_GPIO_Init+0x2e8>)
 8007c20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007c22:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8007c26:	60fb      	str	r3, [r7, #12]
 8007c28:	68fb      	ldr	r3, [r7, #12]
 8007c2a:	4a52      	ldr	r2, [pc, #328]	; (8007d74 <HAL_GPIO_Init+0x2ec>)
 8007c2c:	69fb      	ldr	r3, [r7, #28]
 8007c2e:	089b      	lsrs	r3, r3, #2
 8007c30:	3302      	adds	r3, #2
 8007c32:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007c36:	61bb      	str	r3, [r7, #24]
 8007c38:	69fb      	ldr	r3, [r7, #28]
 8007c3a:	f003 0303 	and.w	r3, r3, #3
 8007c3e:	009b      	lsls	r3, r3, #2
 8007c40:	220f      	movs	r2, #15
 8007c42:	fa02 f303 	lsl.w	r3, r2, r3
 8007c46:	43db      	mvns	r3, r3
 8007c48:	69ba      	ldr	r2, [r7, #24]
 8007c4a:	4013      	ands	r3, r2
 8007c4c:	61bb      	str	r3, [r7, #24]
 8007c4e:	687b      	ldr	r3, [r7, #4]
 8007c50:	4a49      	ldr	r2, [pc, #292]	; (8007d78 <HAL_GPIO_Init+0x2f0>)
 8007c52:	4293      	cmp	r3, r2
 8007c54:	d019      	beq.n	8007c8a <HAL_GPIO_Init+0x202>
 8007c56:	687b      	ldr	r3, [r7, #4]
 8007c58:	4a48      	ldr	r2, [pc, #288]	; (8007d7c <HAL_GPIO_Init+0x2f4>)
 8007c5a:	4293      	cmp	r3, r2
 8007c5c:	d013      	beq.n	8007c86 <HAL_GPIO_Init+0x1fe>
 8007c5e:	687b      	ldr	r3, [r7, #4]
 8007c60:	4a47      	ldr	r2, [pc, #284]	; (8007d80 <HAL_GPIO_Init+0x2f8>)
 8007c62:	4293      	cmp	r3, r2
 8007c64:	d00d      	beq.n	8007c82 <HAL_GPIO_Init+0x1fa>
 8007c66:	687b      	ldr	r3, [r7, #4]
 8007c68:	4a46      	ldr	r2, [pc, #280]	; (8007d84 <HAL_GPIO_Init+0x2fc>)
 8007c6a:	4293      	cmp	r3, r2
 8007c6c:	d007      	beq.n	8007c7e <HAL_GPIO_Init+0x1f6>
 8007c6e:	687b      	ldr	r3, [r7, #4]
 8007c70:	4a45      	ldr	r2, [pc, #276]	; (8007d88 <HAL_GPIO_Init+0x300>)
 8007c72:	4293      	cmp	r3, r2
 8007c74:	d101      	bne.n	8007c7a <HAL_GPIO_Init+0x1f2>
 8007c76:	2304      	movs	r3, #4
 8007c78:	e008      	b.n	8007c8c <HAL_GPIO_Init+0x204>
 8007c7a:	2307      	movs	r3, #7
 8007c7c:	e006      	b.n	8007c8c <HAL_GPIO_Init+0x204>
 8007c7e:	2303      	movs	r3, #3
 8007c80:	e004      	b.n	8007c8c <HAL_GPIO_Init+0x204>
 8007c82:	2302      	movs	r3, #2
 8007c84:	e002      	b.n	8007c8c <HAL_GPIO_Init+0x204>
 8007c86:	2301      	movs	r3, #1
 8007c88:	e000      	b.n	8007c8c <HAL_GPIO_Init+0x204>
 8007c8a:	2300      	movs	r3, #0
 8007c8c:	69fa      	ldr	r2, [r7, #28]
 8007c8e:	f002 0203 	and.w	r2, r2, #3
 8007c92:	0092      	lsls	r2, r2, #2
 8007c94:	4093      	lsls	r3, r2
 8007c96:	69ba      	ldr	r2, [r7, #24]
 8007c98:	4313      	orrs	r3, r2
 8007c9a:	61bb      	str	r3, [r7, #24]
 8007c9c:	4935      	ldr	r1, [pc, #212]	; (8007d74 <HAL_GPIO_Init+0x2ec>)
 8007c9e:	69fb      	ldr	r3, [r7, #28]
 8007ca0:	089b      	lsrs	r3, r3, #2
 8007ca2:	3302      	adds	r3, #2
 8007ca4:	69ba      	ldr	r2, [r7, #24]
 8007ca6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8007caa:	4b38      	ldr	r3, [pc, #224]	; (8007d8c <HAL_GPIO_Init+0x304>)
 8007cac:	689b      	ldr	r3, [r3, #8]
 8007cae:	61bb      	str	r3, [r7, #24]
 8007cb0:	693b      	ldr	r3, [r7, #16]
 8007cb2:	43db      	mvns	r3, r3
 8007cb4:	69ba      	ldr	r2, [r7, #24]
 8007cb6:	4013      	ands	r3, r2
 8007cb8:	61bb      	str	r3, [r7, #24]
 8007cba:	683b      	ldr	r3, [r7, #0]
 8007cbc:	685b      	ldr	r3, [r3, #4]
 8007cbe:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8007cc2:	2b00      	cmp	r3, #0
 8007cc4:	d003      	beq.n	8007cce <HAL_GPIO_Init+0x246>
 8007cc6:	69ba      	ldr	r2, [r7, #24]
 8007cc8:	693b      	ldr	r3, [r7, #16]
 8007cca:	4313      	orrs	r3, r2
 8007ccc:	61bb      	str	r3, [r7, #24]
 8007cce:	4a2f      	ldr	r2, [pc, #188]	; (8007d8c <HAL_GPIO_Init+0x304>)
 8007cd0:	69bb      	ldr	r3, [r7, #24]
 8007cd2:	6093      	str	r3, [r2, #8]
 8007cd4:	4b2d      	ldr	r3, [pc, #180]	; (8007d8c <HAL_GPIO_Init+0x304>)
 8007cd6:	68db      	ldr	r3, [r3, #12]
 8007cd8:	61bb      	str	r3, [r7, #24]
 8007cda:	693b      	ldr	r3, [r7, #16]
 8007cdc:	43db      	mvns	r3, r3
 8007cde:	69ba      	ldr	r2, [r7, #24]
 8007ce0:	4013      	ands	r3, r2
 8007ce2:	61bb      	str	r3, [r7, #24]
 8007ce4:	683b      	ldr	r3, [r7, #0]
 8007ce6:	685b      	ldr	r3, [r3, #4]
 8007ce8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8007cec:	2b00      	cmp	r3, #0
 8007cee:	d003      	beq.n	8007cf8 <HAL_GPIO_Init+0x270>
 8007cf0:	69ba      	ldr	r2, [r7, #24]
 8007cf2:	693b      	ldr	r3, [r7, #16]
 8007cf4:	4313      	orrs	r3, r2
 8007cf6:	61bb      	str	r3, [r7, #24]
 8007cf8:	4a24      	ldr	r2, [pc, #144]	; (8007d8c <HAL_GPIO_Init+0x304>)
 8007cfa:	69bb      	ldr	r3, [r7, #24]
 8007cfc:	60d3      	str	r3, [r2, #12]
 8007cfe:	4b23      	ldr	r3, [pc, #140]	; (8007d8c <HAL_GPIO_Init+0x304>)
 8007d00:	685b      	ldr	r3, [r3, #4]
 8007d02:	61bb      	str	r3, [r7, #24]
 8007d04:	693b      	ldr	r3, [r7, #16]
 8007d06:	43db      	mvns	r3, r3
 8007d08:	69ba      	ldr	r2, [r7, #24]
 8007d0a:	4013      	ands	r3, r2
 8007d0c:	61bb      	str	r3, [r7, #24]
 8007d0e:	683b      	ldr	r3, [r7, #0]
 8007d10:	685b      	ldr	r3, [r3, #4]
 8007d12:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007d16:	2b00      	cmp	r3, #0
 8007d18:	d003      	beq.n	8007d22 <HAL_GPIO_Init+0x29a>
 8007d1a:	69ba      	ldr	r2, [r7, #24]
 8007d1c:	693b      	ldr	r3, [r7, #16]
 8007d1e:	4313      	orrs	r3, r2
 8007d20:	61bb      	str	r3, [r7, #24]
 8007d22:	4a1a      	ldr	r2, [pc, #104]	; (8007d8c <HAL_GPIO_Init+0x304>)
 8007d24:	69bb      	ldr	r3, [r7, #24]
 8007d26:	6053      	str	r3, [r2, #4]
 8007d28:	4b18      	ldr	r3, [pc, #96]	; (8007d8c <HAL_GPIO_Init+0x304>)
 8007d2a:	681b      	ldr	r3, [r3, #0]
 8007d2c:	61bb      	str	r3, [r7, #24]
 8007d2e:	693b      	ldr	r3, [r7, #16]
 8007d30:	43db      	mvns	r3, r3
 8007d32:	69ba      	ldr	r2, [r7, #24]
 8007d34:	4013      	ands	r3, r2
 8007d36:	61bb      	str	r3, [r7, #24]
 8007d38:	683b      	ldr	r3, [r7, #0]
 8007d3a:	685b      	ldr	r3, [r3, #4]
 8007d3c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007d40:	2b00      	cmp	r3, #0
 8007d42:	d003      	beq.n	8007d4c <HAL_GPIO_Init+0x2c4>
 8007d44:	69ba      	ldr	r2, [r7, #24]
 8007d46:	693b      	ldr	r3, [r7, #16]
 8007d48:	4313      	orrs	r3, r2
 8007d4a:	61bb      	str	r3, [r7, #24]
 8007d4c:	4a0f      	ldr	r2, [pc, #60]	; (8007d8c <HAL_GPIO_Init+0x304>)
 8007d4e:	69bb      	ldr	r3, [r7, #24]
 8007d50:	6013      	str	r3, [r2, #0]
 8007d52:	69fb      	ldr	r3, [r7, #28]
 8007d54:	3301      	adds	r3, #1
 8007d56:	61fb      	str	r3, [r7, #28]
 8007d58:	69fb      	ldr	r3, [r7, #28]
 8007d5a:	2b0f      	cmp	r3, #15
 8007d5c:	f67f aea2 	bls.w	8007aa4 <HAL_GPIO_Init+0x1c>
 8007d60:	bf00      	nop
 8007d62:	bf00      	nop
 8007d64:	3724      	adds	r7, #36	; 0x24
 8007d66:	46bd      	mov	sp, r7
 8007d68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d6c:	4770      	bx	lr
 8007d6e:	bf00      	nop
 8007d70:	40023800 	.word	0x40023800
 8007d74:	40013800 	.word	0x40013800
 8007d78:	40020000 	.word	0x40020000
 8007d7c:	40020400 	.word	0x40020400
 8007d80:	40020800 	.word	0x40020800
 8007d84:	40020c00 	.word	0x40020c00
 8007d88:	40021000 	.word	0x40021000
 8007d8c:	40013c00 	.word	0x40013c00

08007d90 <HAL_GPIO_WritePin>:
 8007d90:	b480      	push	{r7}
 8007d92:	b083      	sub	sp, #12
 8007d94:	af00      	add	r7, sp, #0
 8007d96:	6078      	str	r0, [r7, #4]
 8007d98:	460b      	mov	r3, r1
 8007d9a:	807b      	strh	r3, [r7, #2]
 8007d9c:	4613      	mov	r3, r2
 8007d9e:	707b      	strb	r3, [r7, #1]
 8007da0:	787b      	ldrb	r3, [r7, #1]
 8007da2:	2b00      	cmp	r3, #0
 8007da4:	d003      	beq.n	8007dae <HAL_GPIO_WritePin+0x1e>
 8007da6:	887a      	ldrh	r2, [r7, #2]
 8007da8:	687b      	ldr	r3, [r7, #4]
 8007daa:	619a      	str	r2, [r3, #24]
 8007dac:	e003      	b.n	8007db6 <HAL_GPIO_WritePin+0x26>
 8007dae:	887b      	ldrh	r3, [r7, #2]
 8007db0:	041a      	lsls	r2, r3, #16
 8007db2:	687b      	ldr	r3, [r7, #4]
 8007db4:	619a      	str	r2, [r3, #24]
 8007db6:	bf00      	nop
 8007db8:	370c      	adds	r7, #12
 8007dba:	46bd      	mov	sp, r7
 8007dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dc0:	4770      	bx	lr
	...

08007dc4 <HAL_RCC_OscConfig>:
 8007dc4:	b580      	push	{r7, lr}
 8007dc6:	b086      	sub	sp, #24
 8007dc8:	af00      	add	r7, sp, #0
 8007dca:	6078      	str	r0, [r7, #4]
 8007dcc:	687b      	ldr	r3, [r7, #4]
 8007dce:	2b00      	cmp	r3, #0
 8007dd0:	d101      	bne.n	8007dd6 <HAL_RCC_OscConfig+0x12>
 8007dd2:	2301      	movs	r3, #1
 8007dd4:	e267      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 8007dd6:	687b      	ldr	r3, [r7, #4]
 8007dd8:	681b      	ldr	r3, [r3, #0]
 8007dda:	f003 0301 	and.w	r3, r3, #1
 8007dde:	2b00      	cmp	r3, #0
 8007de0:	d075      	beq.n	8007ece <HAL_RCC_OscConfig+0x10a>
 8007de2:	4b88      	ldr	r3, [pc, #544]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007de4:	689b      	ldr	r3, [r3, #8]
 8007de6:	f003 030c 	and.w	r3, r3, #12
 8007dea:	2b04      	cmp	r3, #4
 8007dec:	d00c      	beq.n	8007e08 <HAL_RCC_OscConfig+0x44>
 8007dee:	4b85      	ldr	r3, [pc, #532]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007df0:	689b      	ldr	r3, [r3, #8]
 8007df2:	f003 030c 	and.w	r3, r3, #12
 8007df6:	2b08      	cmp	r3, #8
 8007df8:	d112      	bne.n	8007e20 <HAL_RCC_OscConfig+0x5c>
 8007dfa:	4b82      	ldr	r3, [pc, #520]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007dfc:	685b      	ldr	r3, [r3, #4]
 8007dfe:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007e02:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007e06:	d10b      	bne.n	8007e20 <HAL_RCC_OscConfig+0x5c>
 8007e08:	4b7e      	ldr	r3, [pc, #504]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e0a:	681b      	ldr	r3, [r3, #0]
 8007e0c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007e10:	2b00      	cmp	r3, #0
 8007e12:	d05b      	beq.n	8007ecc <HAL_RCC_OscConfig+0x108>
 8007e14:	687b      	ldr	r3, [r7, #4]
 8007e16:	685b      	ldr	r3, [r3, #4]
 8007e18:	2b00      	cmp	r3, #0
 8007e1a:	d157      	bne.n	8007ecc <HAL_RCC_OscConfig+0x108>
 8007e1c:	2301      	movs	r3, #1
 8007e1e:	e242      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 8007e20:	687b      	ldr	r3, [r7, #4]
 8007e22:	685b      	ldr	r3, [r3, #4]
 8007e24:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007e28:	d106      	bne.n	8007e38 <HAL_RCC_OscConfig+0x74>
 8007e2a:	4b76      	ldr	r3, [pc, #472]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e2c:	681b      	ldr	r3, [r3, #0]
 8007e2e:	4a75      	ldr	r2, [pc, #468]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e30:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007e34:	6013      	str	r3, [r2, #0]
 8007e36:	e01d      	b.n	8007e74 <HAL_RCC_OscConfig+0xb0>
 8007e38:	687b      	ldr	r3, [r7, #4]
 8007e3a:	685b      	ldr	r3, [r3, #4]
 8007e3c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8007e40:	d10c      	bne.n	8007e5c <HAL_RCC_OscConfig+0x98>
 8007e42:	4b70      	ldr	r3, [pc, #448]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e44:	681b      	ldr	r3, [r3, #0]
 8007e46:	4a6f      	ldr	r2, [pc, #444]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e48:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007e4c:	6013      	str	r3, [r2, #0]
 8007e4e:	4b6d      	ldr	r3, [pc, #436]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e50:	681b      	ldr	r3, [r3, #0]
 8007e52:	4a6c      	ldr	r2, [pc, #432]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e54:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007e58:	6013      	str	r3, [r2, #0]
 8007e5a:	e00b      	b.n	8007e74 <HAL_RCC_OscConfig+0xb0>
 8007e5c:	4b69      	ldr	r3, [pc, #420]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e5e:	681b      	ldr	r3, [r3, #0]
 8007e60:	4a68      	ldr	r2, [pc, #416]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e62:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007e66:	6013      	str	r3, [r2, #0]
 8007e68:	4b66      	ldr	r3, [pc, #408]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e6a:	681b      	ldr	r3, [r3, #0]
 8007e6c:	4a65      	ldr	r2, [pc, #404]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e6e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007e72:	6013      	str	r3, [r2, #0]
 8007e74:	687b      	ldr	r3, [r7, #4]
 8007e76:	685b      	ldr	r3, [r3, #4]
 8007e78:	2b00      	cmp	r3, #0
 8007e7a:	d013      	beq.n	8007ea4 <HAL_RCC_OscConfig+0xe0>
 8007e7c:	f7ff fa06 	bl	800728c <HAL_GetTick>
 8007e80:	6138      	str	r0, [r7, #16]
 8007e82:	e008      	b.n	8007e96 <HAL_RCC_OscConfig+0xd2>
 8007e84:	f7ff fa02 	bl	800728c <HAL_GetTick>
 8007e88:	4602      	mov	r2, r0
 8007e8a:	693b      	ldr	r3, [r7, #16]
 8007e8c:	1ad3      	subs	r3, r2, r3
 8007e8e:	2b64      	cmp	r3, #100	; 0x64
 8007e90:	d901      	bls.n	8007e96 <HAL_RCC_OscConfig+0xd2>
 8007e92:	2303      	movs	r3, #3
 8007e94:	e207      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 8007e96:	4b5b      	ldr	r3, [pc, #364]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007e98:	681b      	ldr	r3, [r3, #0]
 8007e9a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007e9e:	2b00      	cmp	r3, #0
 8007ea0:	d0f0      	beq.n	8007e84 <HAL_RCC_OscConfig+0xc0>
 8007ea2:	e014      	b.n	8007ece <HAL_RCC_OscConfig+0x10a>
 8007ea4:	f7ff f9f2 	bl	800728c <HAL_GetTick>
 8007ea8:	6138      	str	r0, [r7, #16]
 8007eaa:	e008      	b.n	8007ebe <HAL_RCC_OscConfig+0xfa>
 8007eac:	f7ff f9ee 	bl	800728c <HAL_GetTick>
 8007eb0:	4602      	mov	r2, r0
 8007eb2:	693b      	ldr	r3, [r7, #16]
 8007eb4:	1ad3      	subs	r3, r2, r3
 8007eb6:	2b64      	cmp	r3, #100	; 0x64
 8007eb8:	d901      	bls.n	8007ebe <HAL_RCC_OscConfig+0xfa>
 8007eba:	2303      	movs	r3, #3
 8007ebc:	e1f3      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 8007ebe:	4b51      	ldr	r3, [pc, #324]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007ec0:	681b      	ldr	r3, [r3, #0]
 8007ec2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007ec6:	2b00      	cmp	r3, #0
 8007ec8:	d1f0      	bne.n	8007eac <HAL_RCC_OscConfig+0xe8>
 8007eca:	e000      	b.n	8007ece <HAL_RCC_OscConfig+0x10a>
 8007ecc:	bf00      	nop
 8007ece:	687b      	ldr	r3, [r7, #4]
 8007ed0:	681b      	ldr	r3, [r3, #0]
 8007ed2:	f003 0302 	and.w	r3, r3, #2
 8007ed6:	2b00      	cmp	r3, #0
 8007ed8:	d063      	beq.n	8007fa2 <HAL_RCC_OscConfig+0x1de>
 8007eda:	4b4a      	ldr	r3, [pc, #296]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007edc:	689b      	ldr	r3, [r3, #8]
 8007ede:	f003 030c 	and.w	r3, r3, #12
 8007ee2:	2b00      	cmp	r3, #0
 8007ee4:	d00b      	beq.n	8007efe <HAL_RCC_OscConfig+0x13a>
 8007ee6:	4b47      	ldr	r3, [pc, #284]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007ee8:	689b      	ldr	r3, [r3, #8]
 8007eea:	f003 030c 	and.w	r3, r3, #12
 8007eee:	2b08      	cmp	r3, #8
 8007ef0:	d11c      	bne.n	8007f2c <HAL_RCC_OscConfig+0x168>
 8007ef2:	4b44      	ldr	r3, [pc, #272]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007ef4:	685b      	ldr	r3, [r3, #4]
 8007ef6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007efa:	2b00      	cmp	r3, #0
 8007efc:	d116      	bne.n	8007f2c <HAL_RCC_OscConfig+0x168>
 8007efe:	4b41      	ldr	r3, [pc, #260]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007f00:	681b      	ldr	r3, [r3, #0]
 8007f02:	f003 0302 	and.w	r3, r3, #2
 8007f06:	2b00      	cmp	r3, #0
 8007f08:	d005      	beq.n	8007f16 <HAL_RCC_OscConfig+0x152>
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	68db      	ldr	r3, [r3, #12]
 8007f0e:	2b01      	cmp	r3, #1
 8007f10:	d001      	beq.n	8007f16 <HAL_RCC_OscConfig+0x152>
 8007f12:	2301      	movs	r3, #1
 8007f14:	e1c7      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 8007f16:	4b3b      	ldr	r3, [pc, #236]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007f18:	681b      	ldr	r3, [r3, #0]
 8007f1a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8007f1e:	687b      	ldr	r3, [r7, #4]
 8007f20:	691b      	ldr	r3, [r3, #16]
 8007f22:	00db      	lsls	r3, r3, #3
 8007f24:	4937      	ldr	r1, [pc, #220]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007f26:	4313      	orrs	r3, r2
 8007f28:	600b      	str	r3, [r1, #0]
 8007f2a:	e03a      	b.n	8007fa2 <HAL_RCC_OscConfig+0x1de>
 8007f2c:	687b      	ldr	r3, [r7, #4]
 8007f2e:	68db      	ldr	r3, [r3, #12]
 8007f30:	2b00      	cmp	r3, #0
 8007f32:	d020      	beq.n	8007f76 <HAL_RCC_OscConfig+0x1b2>
 8007f34:	4b34      	ldr	r3, [pc, #208]	; (8008008 <HAL_RCC_OscConfig+0x244>)
 8007f36:	2201      	movs	r2, #1
 8007f38:	601a      	str	r2, [r3, #0]
 8007f3a:	f7ff f9a7 	bl	800728c <HAL_GetTick>
 8007f3e:	6138      	str	r0, [r7, #16]
 8007f40:	e008      	b.n	8007f54 <HAL_RCC_OscConfig+0x190>
 8007f42:	f7ff f9a3 	bl	800728c <HAL_GetTick>
 8007f46:	4602      	mov	r2, r0
 8007f48:	693b      	ldr	r3, [r7, #16]
 8007f4a:	1ad3      	subs	r3, r2, r3
 8007f4c:	2b02      	cmp	r3, #2
 8007f4e:	d901      	bls.n	8007f54 <HAL_RCC_OscConfig+0x190>
 8007f50:	2303      	movs	r3, #3
 8007f52:	e1a8      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 8007f54:	4b2b      	ldr	r3, [pc, #172]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007f56:	681b      	ldr	r3, [r3, #0]
 8007f58:	f003 0302 	and.w	r3, r3, #2
 8007f5c:	2b00      	cmp	r3, #0
 8007f5e:	d0f0      	beq.n	8007f42 <HAL_RCC_OscConfig+0x17e>
 8007f60:	4b28      	ldr	r3, [pc, #160]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007f62:	681b      	ldr	r3, [r3, #0]
 8007f64:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	691b      	ldr	r3, [r3, #16]
 8007f6c:	00db      	lsls	r3, r3, #3
 8007f6e:	4925      	ldr	r1, [pc, #148]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007f70:	4313      	orrs	r3, r2
 8007f72:	600b      	str	r3, [r1, #0]
 8007f74:	e015      	b.n	8007fa2 <HAL_RCC_OscConfig+0x1de>
 8007f76:	4b24      	ldr	r3, [pc, #144]	; (8008008 <HAL_RCC_OscConfig+0x244>)
 8007f78:	2200      	movs	r2, #0
 8007f7a:	601a      	str	r2, [r3, #0]
 8007f7c:	f7ff f986 	bl	800728c <HAL_GetTick>
 8007f80:	6138      	str	r0, [r7, #16]
 8007f82:	e008      	b.n	8007f96 <HAL_RCC_OscConfig+0x1d2>
 8007f84:	f7ff f982 	bl	800728c <HAL_GetTick>
 8007f88:	4602      	mov	r2, r0
 8007f8a:	693b      	ldr	r3, [r7, #16]
 8007f8c:	1ad3      	subs	r3, r2, r3
 8007f8e:	2b02      	cmp	r3, #2
 8007f90:	d901      	bls.n	8007f96 <HAL_RCC_OscConfig+0x1d2>
 8007f92:	2303      	movs	r3, #3
 8007f94:	e187      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 8007f96:	4b1b      	ldr	r3, [pc, #108]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007f98:	681b      	ldr	r3, [r3, #0]
 8007f9a:	f003 0302 	and.w	r3, r3, #2
 8007f9e:	2b00      	cmp	r3, #0
 8007fa0:	d1f0      	bne.n	8007f84 <HAL_RCC_OscConfig+0x1c0>
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	681b      	ldr	r3, [r3, #0]
 8007fa6:	f003 0308 	and.w	r3, r3, #8
 8007faa:	2b00      	cmp	r3, #0
 8007fac:	d036      	beq.n	800801c <HAL_RCC_OscConfig+0x258>
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	695b      	ldr	r3, [r3, #20]
 8007fb2:	2b00      	cmp	r3, #0
 8007fb4:	d016      	beq.n	8007fe4 <HAL_RCC_OscConfig+0x220>
 8007fb6:	4b15      	ldr	r3, [pc, #84]	; (800800c <HAL_RCC_OscConfig+0x248>)
 8007fb8:	2201      	movs	r2, #1
 8007fba:	601a      	str	r2, [r3, #0]
 8007fbc:	f7ff f966 	bl	800728c <HAL_GetTick>
 8007fc0:	6138      	str	r0, [r7, #16]
 8007fc2:	e008      	b.n	8007fd6 <HAL_RCC_OscConfig+0x212>
 8007fc4:	f7ff f962 	bl	800728c <HAL_GetTick>
 8007fc8:	4602      	mov	r2, r0
 8007fca:	693b      	ldr	r3, [r7, #16]
 8007fcc:	1ad3      	subs	r3, r2, r3
 8007fce:	2b02      	cmp	r3, #2
 8007fd0:	d901      	bls.n	8007fd6 <HAL_RCC_OscConfig+0x212>
 8007fd2:	2303      	movs	r3, #3
 8007fd4:	e167      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 8007fd6:	4b0b      	ldr	r3, [pc, #44]	; (8008004 <HAL_RCC_OscConfig+0x240>)
 8007fd8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007fda:	f003 0302 	and.w	r3, r3, #2
 8007fde:	2b00      	cmp	r3, #0
 8007fe0:	d0f0      	beq.n	8007fc4 <HAL_RCC_OscConfig+0x200>
 8007fe2:	e01b      	b.n	800801c <HAL_RCC_OscConfig+0x258>
 8007fe4:	4b09      	ldr	r3, [pc, #36]	; (800800c <HAL_RCC_OscConfig+0x248>)
 8007fe6:	2200      	movs	r2, #0
 8007fe8:	601a      	str	r2, [r3, #0]
 8007fea:	f7ff f94f 	bl	800728c <HAL_GetTick>
 8007fee:	6138      	str	r0, [r7, #16]
 8007ff0:	e00e      	b.n	8008010 <HAL_RCC_OscConfig+0x24c>
 8007ff2:	f7ff f94b 	bl	800728c <HAL_GetTick>
 8007ff6:	4602      	mov	r2, r0
 8007ff8:	693b      	ldr	r3, [r7, #16]
 8007ffa:	1ad3      	subs	r3, r2, r3
 8007ffc:	2b02      	cmp	r3, #2
 8007ffe:	d907      	bls.n	8008010 <HAL_RCC_OscConfig+0x24c>
 8008000:	2303      	movs	r3, #3
 8008002:	e150      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 8008004:	40023800 	.word	0x40023800
 8008008:	42470000 	.word	0x42470000
 800800c:	42470e80 	.word	0x42470e80
 8008010:	4b88      	ldr	r3, [pc, #544]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 8008012:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008014:	f003 0302 	and.w	r3, r3, #2
 8008018:	2b00      	cmp	r3, #0
 800801a:	d1ea      	bne.n	8007ff2 <HAL_RCC_OscConfig+0x22e>
 800801c:	687b      	ldr	r3, [r7, #4]
 800801e:	681b      	ldr	r3, [r3, #0]
 8008020:	f003 0304 	and.w	r3, r3, #4
 8008024:	2b00      	cmp	r3, #0
 8008026:	f000 8097 	beq.w	8008158 <HAL_RCC_OscConfig+0x394>
 800802a:	2300      	movs	r3, #0
 800802c:	75fb      	strb	r3, [r7, #23]
 800802e:	4b81      	ldr	r3, [pc, #516]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 8008030:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008032:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008036:	2b00      	cmp	r3, #0
 8008038:	d10f      	bne.n	800805a <HAL_RCC_OscConfig+0x296>
 800803a:	2300      	movs	r3, #0
 800803c:	60bb      	str	r3, [r7, #8]
 800803e:	4b7d      	ldr	r3, [pc, #500]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 8008040:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008042:	4a7c      	ldr	r2, [pc, #496]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 8008044:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008048:	6413      	str	r3, [r2, #64]	; 0x40
 800804a:	4b7a      	ldr	r3, [pc, #488]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 800804c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800804e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008052:	60bb      	str	r3, [r7, #8]
 8008054:	68bb      	ldr	r3, [r7, #8]
 8008056:	2301      	movs	r3, #1
 8008058:	75fb      	strb	r3, [r7, #23]
 800805a:	4b77      	ldr	r3, [pc, #476]	; (8008238 <HAL_RCC_OscConfig+0x474>)
 800805c:	681b      	ldr	r3, [r3, #0]
 800805e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008062:	2b00      	cmp	r3, #0
 8008064:	d118      	bne.n	8008098 <HAL_RCC_OscConfig+0x2d4>
 8008066:	4b74      	ldr	r3, [pc, #464]	; (8008238 <HAL_RCC_OscConfig+0x474>)
 8008068:	681b      	ldr	r3, [r3, #0]
 800806a:	4a73      	ldr	r2, [pc, #460]	; (8008238 <HAL_RCC_OscConfig+0x474>)
 800806c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008070:	6013      	str	r3, [r2, #0]
 8008072:	f7ff f90b 	bl	800728c <HAL_GetTick>
 8008076:	6138      	str	r0, [r7, #16]
 8008078:	e008      	b.n	800808c <HAL_RCC_OscConfig+0x2c8>
 800807a:	f7ff f907 	bl	800728c <HAL_GetTick>
 800807e:	4602      	mov	r2, r0
 8008080:	693b      	ldr	r3, [r7, #16]
 8008082:	1ad3      	subs	r3, r2, r3
 8008084:	2b02      	cmp	r3, #2
 8008086:	d901      	bls.n	800808c <HAL_RCC_OscConfig+0x2c8>
 8008088:	2303      	movs	r3, #3
 800808a:	e10c      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 800808c:	4b6a      	ldr	r3, [pc, #424]	; (8008238 <HAL_RCC_OscConfig+0x474>)
 800808e:	681b      	ldr	r3, [r3, #0]
 8008090:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008094:	2b00      	cmp	r3, #0
 8008096:	d0f0      	beq.n	800807a <HAL_RCC_OscConfig+0x2b6>
 8008098:	687b      	ldr	r3, [r7, #4]
 800809a:	689b      	ldr	r3, [r3, #8]
 800809c:	2b01      	cmp	r3, #1
 800809e:	d106      	bne.n	80080ae <HAL_RCC_OscConfig+0x2ea>
 80080a0:	4b64      	ldr	r3, [pc, #400]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80080a2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80080a4:	4a63      	ldr	r2, [pc, #396]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80080a6:	f043 0301 	orr.w	r3, r3, #1
 80080aa:	6713      	str	r3, [r2, #112]	; 0x70
 80080ac:	e01c      	b.n	80080e8 <HAL_RCC_OscConfig+0x324>
 80080ae:	687b      	ldr	r3, [r7, #4]
 80080b0:	689b      	ldr	r3, [r3, #8]
 80080b2:	2b05      	cmp	r3, #5
 80080b4:	d10c      	bne.n	80080d0 <HAL_RCC_OscConfig+0x30c>
 80080b6:	4b5f      	ldr	r3, [pc, #380]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80080b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80080ba:	4a5e      	ldr	r2, [pc, #376]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80080bc:	f043 0304 	orr.w	r3, r3, #4
 80080c0:	6713      	str	r3, [r2, #112]	; 0x70
 80080c2:	4b5c      	ldr	r3, [pc, #368]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80080c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80080c6:	4a5b      	ldr	r2, [pc, #364]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80080c8:	f043 0301 	orr.w	r3, r3, #1
 80080cc:	6713      	str	r3, [r2, #112]	; 0x70
 80080ce:	e00b      	b.n	80080e8 <HAL_RCC_OscConfig+0x324>
 80080d0:	4b58      	ldr	r3, [pc, #352]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80080d2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80080d4:	4a57      	ldr	r2, [pc, #348]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80080d6:	f023 0301 	bic.w	r3, r3, #1
 80080da:	6713      	str	r3, [r2, #112]	; 0x70
 80080dc:	4b55      	ldr	r3, [pc, #340]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80080de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80080e0:	4a54      	ldr	r2, [pc, #336]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80080e2:	f023 0304 	bic.w	r3, r3, #4
 80080e6:	6713      	str	r3, [r2, #112]	; 0x70
 80080e8:	687b      	ldr	r3, [r7, #4]
 80080ea:	689b      	ldr	r3, [r3, #8]
 80080ec:	2b00      	cmp	r3, #0
 80080ee:	d015      	beq.n	800811c <HAL_RCC_OscConfig+0x358>
 80080f0:	f7ff f8cc 	bl	800728c <HAL_GetTick>
 80080f4:	6138      	str	r0, [r7, #16]
 80080f6:	e00a      	b.n	800810e <HAL_RCC_OscConfig+0x34a>
 80080f8:	f7ff f8c8 	bl	800728c <HAL_GetTick>
 80080fc:	4602      	mov	r2, r0
 80080fe:	693b      	ldr	r3, [r7, #16]
 8008100:	1ad3      	subs	r3, r2, r3
 8008102:	f241 3288 	movw	r2, #5000	; 0x1388
 8008106:	4293      	cmp	r3, r2
 8008108:	d901      	bls.n	800810e <HAL_RCC_OscConfig+0x34a>
 800810a:	2303      	movs	r3, #3
 800810c:	e0cb      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 800810e:	4b49      	ldr	r3, [pc, #292]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 8008110:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008112:	f003 0302 	and.w	r3, r3, #2
 8008116:	2b00      	cmp	r3, #0
 8008118:	d0ee      	beq.n	80080f8 <HAL_RCC_OscConfig+0x334>
 800811a:	e014      	b.n	8008146 <HAL_RCC_OscConfig+0x382>
 800811c:	f7ff f8b6 	bl	800728c <HAL_GetTick>
 8008120:	6138      	str	r0, [r7, #16]
 8008122:	e00a      	b.n	800813a <HAL_RCC_OscConfig+0x376>
 8008124:	f7ff f8b2 	bl	800728c <HAL_GetTick>
 8008128:	4602      	mov	r2, r0
 800812a:	693b      	ldr	r3, [r7, #16]
 800812c:	1ad3      	subs	r3, r2, r3
 800812e:	f241 3288 	movw	r2, #5000	; 0x1388
 8008132:	4293      	cmp	r3, r2
 8008134:	d901      	bls.n	800813a <HAL_RCC_OscConfig+0x376>
 8008136:	2303      	movs	r3, #3
 8008138:	e0b5      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 800813a:	4b3e      	ldr	r3, [pc, #248]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 800813c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800813e:	f003 0302 	and.w	r3, r3, #2
 8008142:	2b00      	cmp	r3, #0
 8008144:	d1ee      	bne.n	8008124 <HAL_RCC_OscConfig+0x360>
 8008146:	7dfb      	ldrb	r3, [r7, #23]
 8008148:	2b01      	cmp	r3, #1
 800814a:	d105      	bne.n	8008158 <HAL_RCC_OscConfig+0x394>
 800814c:	4b39      	ldr	r3, [pc, #228]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 800814e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008150:	4a38      	ldr	r2, [pc, #224]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 8008152:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008156:	6413      	str	r3, [r2, #64]	; 0x40
 8008158:	687b      	ldr	r3, [r7, #4]
 800815a:	699b      	ldr	r3, [r3, #24]
 800815c:	2b00      	cmp	r3, #0
 800815e:	f000 80a1 	beq.w	80082a4 <HAL_RCC_OscConfig+0x4e0>
 8008162:	4b34      	ldr	r3, [pc, #208]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 8008164:	689b      	ldr	r3, [r3, #8]
 8008166:	f003 030c 	and.w	r3, r3, #12
 800816a:	2b08      	cmp	r3, #8
 800816c:	d05c      	beq.n	8008228 <HAL_RCC_OscConfig+0x464>
 800816e:	687b      	ldr	r3, [r7, #4]
 8008170:	699b      	ldr	r3, [r3, #24]
 8008172:	2b02      	cmp	r3, #2
 8008174:	d141      	bne.n	80081fa <HAL_RCC_OscConfig+0x436>
 8008176:	4b31      	ldr	r3, [pc, #196]	; (800823c <HAL_RCC_OscConfig+0x478>)
 8008178:	2200      	movs	r2, #0
 800817a:	601a      	str	r2, [r3, #0]
 800817c:	f7ff f886 	bl	800728c <HAL_GetTick>
 8008180:	6138      	str	r0, [r7, #16]
 8008182:	e008      	b.n	8008196 <HAL_RCC_OscConfig+0x3d2>
 8008184:	f7ff f882 	bl	800728c <HAL_GetTick>
 8008188:	4602      	mov	r2, r0
 800818a:	693b      	ldr	r3, [r7, #16]
 800818c:	1ad3      	subs	r3, r2, r3
 800818e:	2b02      	cmp	r3, #2
 8008190:	d901      	bls.n	8008196 <HAL_RCC_OscConfig+0x3d2>
 8008192:	2303      	movs	r3, #3
 8008194:	e087      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 8008196:	4b27      	ldr	r3, [pc, #156]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 8008198:	681b      	ldr	r3, [r3, #0]
 800819a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800819e:	2b00      	cmp	r3, #0
 80081a0:	d1f0      	bne.n	8008184 <HAL_RCC_OscConfig+0x3c0>
 80081a2:	687b      	ldr	r3, [r7, #4]
 80081a4:	69da      	ldr	r2, [r3, #28]
 80081a6:	687b      	ldr	r3, [r7, #4]
 80081a8:	6a1b      	ldr	r3, [r3, #32]
 80081aa:	431a      	orrs	r2, r3
 80081ac:	687b      	ldr	r3, [r7, #4]
 80081ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80081b0:	019b      	lsls	r3, r3, #6
 80081b2:	431a      	orrs	r2, r3
 80081b4:	687b      	ldr	r3, [r7, #4]
 80081b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80081b8:	085b      	lsrs	r3, r3, #1
 80081ba:	3b01      	subs	r3, #1
 80081bc:	041b      	lsls	r3, r3, #16
 80081be:	431a      	orrs	r2, r3
 80081c0:	687b      	ldr	r3, [r7, #4]
 80081c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80081c4:	061b      	lsls	r3, r3, #24
 80081c6:	491b      	ldr	r1, [pc, #108]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80081c8:	4313      	orrs	r3, r2
 80081ca:	604b      	str	r3, [r1, #4]
 80081cc:	4b1b      	ldr	r3, [pc, #108]	; (800823c <HAL_RCC_OscConfig+0x478>)
 80081ce:	2201      	movs	r2, #1
 80081d0:	601a      	str	r2, [r3, #0]
 80081d2:	f7ff f85b 	bl	800728c <HAL_GetTick>
 80081d6:	6138      	str	r0, [r7, #16]
 80081d8:	e008      	b.n	80081ec <HAL_RCC_OscConfig+0x428>
 80081da:	f7ff f857 	bl	800728c <HAL_GetTick>
 80081de:	4602      	mov	r2, r0
 80081e0:	693b      	ldr	r3, [r7, #16]
 80081e2:	1ad3      	subs	r3, r2, r3
 80081e4:	2b02      	cmp	r3, #2
 80081e6:	d901      	bls.n	80081ec <HAL_RCC_OscConfig+0x428>
 80081e8:	2303      	movs	r3, #3
 80081ea:	e05c      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 80081ec:	4b11      	ldr	r3, [pc, #68]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 80081ee:	681b      	ldr	r3, [r3, #0]
 80081f0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80081f4:	2b00      	cmp	r3, #0
 80081f6:	d0f0      	beq.n	80081da <HAL_RCC_OscConfig+0x416>
 80081f8:	e054      	b.n	80082a4 <HAL_RCC_OscConfig+0x4e0>
 80081fa:	4b10      	ldr	r3, [pc, #64]	; (800823c <HAL_RCC_OscConfig+0x478>)
 80081fc:	2200      	movs	r2, #0
 80081fe:	601a      	str	r2, [r3, #0]
 8008200:	f7ff f844 	bl	800728c <HAL_GetTick>
 8008204:	6138      	str	r0, [r7, #16]
 8008206:	e008      	b.n	800821a <HAL_RCC_OscConfig+0x456>
 8008208:	f7ff f840 	bl	800728c <HAL_GetTick>
 800820c:	4602      	mov	r2, r0
 800820e:	693b      	ldr	r3, [r7, #16]
 8008210:	1ad3      	subs	r3, r2, r3
 8008212:	2b02      	cmp	r3, #2
 8008214:	d901      	bls.n	800821a <HAL_RCC_OscConfig+0x456>
 8008216:	2303      	movs	r3, #3
 8008218:	e045      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 800821a:	4b06      	ldr	r3, [pc, #24]	; (8008234 <HAL_RCC_OscConfig+0x470>)
 800821c:	681b      	ldr	r3, [r3, #0]
 800821e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008222:	2b00      	cmp	r3, #0
 8008224:	d1f0      	bne.n	8008208 <HAL_RCC_OscConfig+0x444>
 8008226:	e03d      	b.n	80082a4 <HAL_RCC_OscConfig+0x4e0>
 8008228:	687b      	ldr	r3, [r7, #4]
 800822a:	699b      	ldr	r3, [r3, #24]
 800822c:	2b01      	cmp	r3, #1
 800822e:	d107      	bne.n	8008240 <HAL_RCC_OscConfig+0x47c>
 8008230:	2301      	movs	r3, #1
 8008232:	e038      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 8008234:	40023800 	.word	0x40023800
 8008238:	40007000 	.word	0x40007000
 800823c:	42470060 	.word	0x42470060
 8008240:	4b1b      	ldr	r3, [pc, #108]	; (80082b0 <HAL_RCC_OscConfig+0x4ec>)
 8008242:	685b      	ldr	r3, [r3, #4]
 8008244:	60fb      	str	r3, [r7, #12]
 8008246:	687b      	ldr	r3, [r7, #4]
 8008248:	699b      	ldr	r3, [r3, #24]
 800824a:	2b01      	cmp	r3, #1
 800824c:	d028      	beq.n	80082a0 <HAL_RCC_OscConfig+0x4dc>
 800824e:	68fb      	ldr	r3, [r7, #12]
 8008250:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8008254:	687b      	ldr	r3, [r7, #4]
 8008256:	69db      	ldr	r3, [r3, #28]
 8008258:	429a      	cmp	r2, r3
 800825a:	d121      	bne.n	80082a0 <HAL_RCC_OscConfig+0x4dc>
 800825c:	68fb      	ldr	r3, [r7, #12]
 800825e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	6a1b      	ldr	r3, [r3, #32]
 8008266:	429a      	cmp	r2, r3
 8008268:	d11a      	bne.n	80082a0 <HAL_RCC_OscConfig+0x4dc>
 800826a:	68fa      	ldr	r2, [r7, #12]
 800826c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8008270:	4013      	ands	r3, r2
 8008272:	687a      	ldr	r2, [r7, #4]
 8008274:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8008276:	0192      	lsls	r2, r2, #6
 8008278:	4293      	cmp	r3, r2
 800827a:	d111      	bne.n	80082a0 <HAL_RCC_OscConfig+0x4dc>
 800827c:	68fb      	ldr	r3, [r7, #12]
 800827e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8008282:	687b      	ldr	r3, [r7, #4]
 8008284:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008286:	085b      	lsrs	r3, r3, #1
 8008288:	3b01      	subs	r3, #1
 800828a:	041b      	lsls	r3, r3, #16
 800828c:	429a      	cmp	r2, r3
 800828e:	d107      	bne.n	80082a0 <HAL_RCC_OscConfig+0x4dc>
 8008290:	68fb      	ldr	r3, [r7, #12]
 8008292:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8008296:	687b      	ldr	r3, [r7, #4]
 8008298:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800829a:	061b      	lsls	r3, r3, #24
 800829c:	429a      	cmp	r2, r3
 800829e:	d001      	beq.n	80082a4 <HAL_RCC_OscConfig+0x4e0>
 80082a0:	2301      	movs	r3, #1
 80082a2:	e000      	b.n	80082a6 <HAL_RCC_OscConfig+0x4e2>
 80082a4:	2300      	movs	r3, #0
 80082a6:	4618      	mov	r0, r3
 80082a8:	3718      	adds	r7, #24
 80082aa:	46bd      	mov	sp, r7
 80082ac:	bd80      	pop	{r7, pc}
 80082ae:	bf00      	nop
 80082b0:	40023800 	.word	0x40023800

080082b4 <HAL_RCC_ClockConfig>:
 80082b4:	b580      	push	{r7, lr}
 80082b6:	b084      	sub	sp, #16
 80082b8:	af00      	add	r7, sp, #0
 80082ba:	6078      	str	r0, [r7, #4]
 80082bc:	6039      	str	r1, [r7, #0]
 80082be:	687b      	ldr	r3, [r7, #4]
 80082c0:	2b00      	cmp	r3, #0
 80082c2:	d101      	bne.n	80082c8 <HAL_RCC_ClockConfig+0x14>
 80082c4:	2301      	movs	r3, #1
 80082c6:	e0cc      	b.n	8008462 <HAL_RCC_ClockConfig+0x1ae>
 80082c8:	4b68      	ldr	r3, [pc, #416]	; (800846c <HAL_RCC_ClockConfig+0x1b8>)
 80082ca:	681b      	ldr	r3, [r3, #0]
 80082cc:	f003 0307 	and.w	r3, r3, #7
 80082d0:	683a      	ldr	r2, [r7, #0]
 80082d2:	429a      	cmp	r2, r3
 80082d4:	d90c      	bls.n	80082f0 <HAL_RCC_ClockConfig+0x3c>
 80082d6:	4b65      	ldr	r3, [pc, #404]	; (800846c <HAL_RCC_ClockConfig+0x1b8>)
 80082d8:	683a      	ldr	r2, [r7, #0]
 80082da:	b2d2      	uxtb	r2, r2
 80082dc:	701a      	strb	r2, [r3, #0]
 80082de:	4b63      	ldr	r3, [pc, #396]	; (800846c <HAL_RCC_ClockConfig+0x1b8>)
 80082e0:	681b      	ldr	r3, [r3, #0]
 80082e2:	f003 0307 	and.w	r3, r3, #7
 80082e6:	683a      	ldr	r2, [r7, #0]
 80082e8:	429a      	cmp	r2, r3
 80082ea:	d001      	beq.n	80082f0 <HAL_RCC_ClockConfig+0x3c>
 80082ec:	2301      	movs	r3, #1
 80082ee:	e0b8      	b.n	8008462 <HAL_RCC_ClockConfig+0x1ae>
 80082f0:	687b      	ldr	r3, [r7, #4]
 80082f2:	681b      	ldr	r3, [r3, #0]
 80082f4:	f003 0302 	and.w	r3, r3, #2
 80082f8:	2b00      	cmp	r3, #0
 80082fa:	d020      	beq.n	800833e <HAL_RCC_ClockConfig+0x8a>
 80082fc:	687b      	ldr	r3, [r7, #4]
 80082fe:	681b      	ldr	r3, [r3, #0]
 8008300:	f003 0304 	and.w	r3, r3, #4
 8008304:	2b00      	cmp	r3, #0
 8008306:	d005      	beq.n	8008314 <HAL_RCC_ClockConfig+0x60>
 8008308:	4b59      	ldr	r3, [pc, #356]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 800830a:	689b      	ldr	r3, [r3, #8]
 800830c:	4a58      	ldr	r2, [pc, #352]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 800830e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8008312:	6093      	str	r3, [r2, #8]
 8008314:	687b      	ldr	r3, [r7, #4]
 8008316:	681b      	ldr	r3, [r3, #0]
 8008318:	f003 0308 	and.w	r3, r3, #8
 800831c:	2b00      	cmp	r3, #0
 800831e:	d005      	beq.n	800832c <HAL_RCC_ClockConfig+0x78>
 8008320:	4b53      	ldr	r3, [pc, #332]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 8008322:	689b      	ldr	r3, [r3, #8]
 8008324:	4a52      	ldr	r2, [pc, #328]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 8008326:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800832a:	6093      	str	r3, [r2, #8]
 800832c:	4b50      	ldr	r3, [pc, #320]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 800832e:	689b      	ldr	r3, [r3, #8]
 8008330:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8008334:	687b      	ldr	r3, [r7, #4]
 8008336:	689b      	ldr	r3, [r3, #8]
 8008338:	494d      	ldr	r1, [pc, #308]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 800833a:	4313      	orrs	r3, r2
 800833c:	608b      	str	r3, [r1, #8]
 800833e:	687b      	ldr	r3, [r7, #4]
 8008340:	681b      	ldr	r3, [r3, #0]
 8008342:	f003 0301 	and.w	r3, r3, #1
 8008346:	2b00      	cmp	r3, #0
 8008348:	d044      	beq.n	80083d4 <HAL_RCC_ClockConfig+0x120>
 800834a:	687b      	ldr	r3, [r7, #4]
 800834c:	685b      	ldr	r3, [r3, #4]
 800834e:	2b01      	cmp	r3, #1
 8008350:	d107      	bne.n	8008362 <HAL_RCC_ClockConfig+0xae>
 8008352:	4b47      	ldr	r3, [pc, #284]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 8008354:	681b      	ldr	r3, [r3, #0]
 8008356:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800835a:	2b00      	cmp	r3, #0
 800835c:	d119      	bne.n	8008392 <HAL_RCC_ClockConfig+0xde>
 800835e:	2301      	movs	r3, #1
 8008360:	e07f      	b.n	8008462 <HAL_RCC_ClockConfig+0x1ae>
 8008362:	687b      	ldr	r3, [r7, #4]
 8008364:	685b      	ldr	r3, [r3, #4]
 8008366:	2b02      	cmp	r3, #2
 8008368:	d003      	beq.n	8008372 <HAL_RCC_ClockConfig+0xbe>
 800836a:	687b      	ldr	r3, [r7, #4]
 800836c:	685b      	ldr	r3, [r3, #4]
 800836e:	2b03      	cmp	r3, #3
 8008370:	d107      	bne.n	8008382 <HAL_RCC_ClockConfig+0xce>
 8008372:	4b3f      	ldr	r3, [pc, #252]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 8008374:	681b      	ldr	r3, [r3, #0]
 8008376:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800837a:	2b00      	cmp	r3, #0
 800837c:	d109      	bne.n	8008392 <HAL_RCC_ClockConfig+0xde>
 800837e:	2301      	movs	r3, #1
 8008380:	e06f      	b.n	8008462 <HAL_RCC_ClockConfig+0x1ae>
 8008382:	4b3b      	ldr	r3, [pc, #236]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 8008384:	681b      	ldr	r3, [r3, #0]
 8008386:	f003 0302 	and.w	r3, r3, #2
 800838a:	2b00      	cmp	r3, #0
 800838c:	d101      	bne.n	8008392 <HAL_RCC_ClockConfig+0xde>
 800838e:	2301      	movs	r3, #1
 8008390:	e067      	b.n	8008462 <HAL_RCC_ClockConfig+0x1ae>
 8008392:	4b37      	ldr	r3, [pc, #220]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 8008394:	689b      	ldr	r3, [r3, #8]
 8008396:	f023 0203 	bic.w	r2, r3, #3
 800839a:	687b      	ldr	r3, [r7, #4]
 800839c:	685b      	ldr	r3, [r3, #4]
 800839e:	4934      	ldr	r1, [pc, #208]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 80083a0:	4313      	orrs	r3, r2
 80083a2:	608b      	str	r3, [r1, #8]
 80083a4:	f7fe ff72 	bl	800728c <HAL_GetTick>
 80083a8:	60f8      	str	r0, [r7, #12]
 80083aa:	e00a      	b.n	80083c2 <HAL_RCC_ClockConfig+0x10e>
 80083ac:	f7fe ff6e 	bl	800728c <HAL_GetTick>
 80083b0:	4602      	mov	r2, r0
 80083b2:	68fb      	ldr	r3, [r7, #12]
 80083b4:	1ad3      	subs	r3, r2, r3
 80083b6:	f241 3288 	movw	r2, #5000	; 0x1388
 80083ba:	4293      	cmp	r3, r2
 80083bc:	d901      	bls.n	80083c2 <HAL_RCC_ClockConfig+0x10e>
 80083be:	2303      	movs	r3, #3
 80083c0:	e04f      	b.n	8008462 <HAL_RCC_ClockConfig+0x1ae>
 80083c2:	4b2b      	ldr	r3, [pc, #172]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 80083c4:	689b      	ldr	r3, [r3, #8]
 80083c6:	f003 020c 	and.w	r2, r3, #12
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	685b      	ldr	r3, [r3, #4]
 80083ce:	009b      	lsls	r3, r3, #2
 80083d0:	429a      	cmp	r2, r3
 80083d2:	d1eb      	bne.n	80083ac <HAL_RCC_ClockConfig+0xf8>
 80083d4:	4b25      	ldr	r3, [pc, #148]	; (800846c <HAL_RCC_ClockConfig+0x1b8>)
 80083d6:	681b      	ldr	r3, [r3, #0]
 80083d8:	f003 0307 	and.w	r3, r3, #7
 80083dc:	683a      	ldr	r2, [r7, #0]
 80083de:	429a      	cmp	r2, r3
 80083e0:	d20c      	bcs.n	80083fc <HAL_RCC_ClockConfig+0x148>
 80083e2:	4b22      	ldr	r3, [pc, #136]	; (800846c <HAL_RCC_ClockConfig+0x1b8>)
 80083e4:	683a      	ldr	r2, [r7, #0]
 80083e6:	b2d2      	uxtb	r2, r2
 80083e8:	701a      	strb	r2, [r3, #0]
 80083ea:	4b20      	ldr	r3, [pc, #128]	; (800846c <HAL_RCC_ClockConfig+0x1b8>)
 80083ec:	681b      	ldr	r3, [r3, #0]
 80083ee:	f003 0307 	and.w	r3, r3, #7
 80083f2:	683a      	ldr	r2, [r7, #0]
 80083f4:	429a      	cmp	r2, r3
 80083f6:	d001      	beq.n	80083fc <HAL_RCC_ClockConfig+0x148>
 80083f8:	2301      	movs	r3, #1
 80083fa:	e032      	b.n	8008462 <HAL_RCC_ClockConfig+0x1ae>
 80083fc:	687b      	ldr	r3, [r7, #4]
 80083fe:	681b      	ldr	r3, [r3, #0]
 8008400:	f003 0304 	and.w	r3, r3, #4
 8008404:	2b00      	cmp	r3, #0
 8008406:	d008      	beq.n	800841a <HAL_RCC_ClockConfig+0x166>
 8008408:	4b19      	ldr	r3, [pc, #100]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 800840a:	689b      	ldr	r3, [r3, #8]
 800840c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8008410:	687b      	ldr	r3, [r7, #4]
 8008412:	68db      	ldr	r3, [r3, #12]
 8008414:	4916      	ldr	r1, [pc, #88]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 8008416:	4313      	orrs	r3, r2
 8008418:	608b      	str	r3, [r1, #8]
 800841a:	687b      	ldr	r3, [r7, #4]
 800841c:	681b      	ldr	r3, [r3, #0]
 800841e:	f003 0308 	and.w	r3, r3, #8
 8008422:	2b00      	cmp	r3, #0
 8008424:	d009      	beq.n	800843a <HAL_RCC_ClockConfig+0x186>
 8008426:	4b12      	ldr	r3, [pc, #72]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 8008428:	689b      	ldr	r3, [r3, #8]
 800842a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800842e:	687b      	ldr	r3, [r7, #4]
 8008430:	691b      	ldr	r3, [r3, #16]
 8008432:	00db      	lsls	r3, r3, #3
 8008434:	490e      	ldr	r1, [pc, #56]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 8008436:	4313      	orrs	r3, r2
 8008438:	608b      	str	r3, [r1, #8]
 800843a:	f000 f821 	bl	8008480 <HAL_RCC_GetSysClockFreq>
 800843e:	4602      	mov	r2, r0
 8008440:	4b0b      	ldr	r3, [pc, #44]	; (8008470 <HAL_RCC_ClockConfig+0x1bc>)
 8008442:	689b      	ldr	r3, [r3, #8]
 8008444:	091b      	lsrs	r3, r3, #4
 8008446:	f003 030f 	and.w	r3, r3, #15
 800844a:	490a      	ldr	r1, [pc, #40]	; (8008474 <HAL_RCC_ClockConfig+0x1c0>)
 800844c:	5ccb      	ldrb	r3, [r1, r3]
 800844e:	fa22 f303 	lsr.w	r3, r2, r3
 8008452:	4a09      	ldr	r2, [pc, #36]	; (8008478 <HAL_RCC_ClockConfig+0x1c4>)
 8008454:	6013      	str	r3, [r2, #0]
 8008456:	4b09      	ldr	r3, [pc, #36]	; (800847c <HAL_RCC_ClockConfig+0x1c8>)
 8008458:	681b      	ldr	r3, [r3, #0]
 800845a:	4618      	mov	r0, r3
 800845c:	f7fe fed2 	bl	8007204 <HAL_InitTick>
 8008460:	2300      	movs	r3, #0
 8008462:	4618      	mov	r0, r3
 8008464:	3710      	adds	r7, #16
 8008466:	46bd      	mov	sp, r7
 8008468:	bd80      	pop	{r7, pc}
 800846a:	bf00      	nop
 800846c:	40023c00 	.word	0x40023c00
 8008470:	40023800 	.word	0x40023800
 8008474:	08008fbc 	.word	0x08008fbc
 8008478:	20000000 	.word	0x20000000
 800847c:	20000004 	.word	0x20000004

08008480 <HAL_RCC_GetSysClockFreq>:
 8008480:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008484:	b090      	sub	sp, #64	; 0x40
 8008486:	af00      	add	r7, sp, #0
 8008488:	2300      	movs	r3, #0
 800848a:	637b      	str	r3, [r7, #52]	; 0x34
 800848c:	2300      	movs	r3, #0
 800848e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008490:	2300      	movs	r3, #0
 8008492:	633b      	str	r3, [r7, #48]	; 0x30
 8008494:	2300      	movs	r3, #0
 8008496:	63bb      	str	r3, [r7, #56]	; 0x38
 8008498:	4b59      	ldr	r3, [pc, #356]	; (8008600 <HAL_RCC_GetSysClockFreq+0x180>)
 800849a:	689b      	ldr	r3, [r3, #8]
 800849c:	f003 030c 	and.w	r3, r3, #12
 80084a0:	2b08      	cmp	r3, #8
 80084a2:	d00d      	beq.n	80084c0 <HAL_RCC_GetSysClockFreq+0x40>
 80084a4:	2b08      	cmp	r3, #8
 80084a6:	f200 80a1 	bhi.w	80085ec <HAL_RCC_GetSysClockFreq+0x16c>
 80084aa:	2b00      	cmp	r3, #0
 80084ac:	d002      	beq.n	80084b4 <HAL_RCC_GetSysClockFreq+0x34>
 80084ae:	2b04      	cmp	r3, #4
 80084b0:	d003      	beq.n	80084ba <HAL_RCC_GetSysClockFreq+0x3a>
 80084b2:	e09b      	b.n	80085ec <HAL_RCC_GetSysClockFreq+0x16c>
 80084b4:	4b53      	ldr	r3, [pc, #332]	; (8008604 <HAL_RCC_GetSysClockFreq+0x184>)
 80084b6:	63bb      	str	r3, [r7, #56]	; 0x38
 80084b8:	e09b      	b.n	80085f2 <HAL_RCC_GetSysClockFreq+0x172>
 80084ba:	4b53      	ldr	r3, [pc, #332]	; (8008608 <HAL_RCC_GetSysClockFreq+0x188>)
 80084bc:	63bb      	str	r3, [r7, #56]	; 0x38
 80084be:	e098      	b.n	80085f2 <HAL_RCC_GetSysClockFreq+0x172>
 80084c0:	4b4f      	ldr	r3, [pc, #316]	; (8008600 <HAL_RCC_GetSysClockFreq+0x180>)
 80084c2:	685b      	ldr	r3, [r3, #4]
 80084c4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80084c8:	637b      	str	r3, [r7, #52]	; 0x34
 80084ca:	4b4d      	ldr	r3, [pc, #308]	; (8008600 <HAL_RCC_GetSysClockFreq+0x180>)
 80084cc:	685b      	ldr	r3, [r3, #4]
 80084ce:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d028      	beq.n	8008528 <HAL_RCC_GetSysClockFreq+0xa8>
 80084d6:	4b4a      	ldr	r3, [pc, #296]	; (8008600 <HAL_RCC_GetSysClockFreq+0x180>)
 80084d8:	685b      	ldr	r3, [r3, #4]
 80084da:	099b      	lsrs	r3, r3, #6
 80084dc:	2200      	movs	r2, #0
 80084de:	623b      	str	r3, [r7, #32]
 80084e0:	627a      	str	r2, [r7, #36]	; 0x24
 80084e2:	6a3b      	ldr	r3, [r7, #32]
 80084e4:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80084e8:	2100      	movs	r1, #0
 80084ea:	4b47      	ldr	r3, [pc, #284]	; (8008608 <HAL_RCC_GetSysClockFreq+0x188>)
 80084ec:	fb03 f201 	mul.w	r2, r3, r1
 80084f0:	2300      	movs	r3, #0
 80084f2:	fb00 f303 	mul.w	r3, r0, r3
 80084f6:	4413      	add	r3, r2
 80084f8:	4a43      	ldr	r2, [pc, #268]	; (8008608 <HAL_RCC_GetSysClockFreq+0x188>)
 80084fa:	fba0 1202 	umull	r1, r2, r0, r2
 80084fe:	62fa      	str	r2, [r7, #44]	; 0x2c
 8008500:	460a      	mov	r2, r1
 8008502:	62ba      	str	r2, [r7, #40]	; 0x28
 8008504:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8008506:	4413      	add	r3, r2
 8008508:	62fb      	str	r3, [r7, #44]	; 0x2c
 800850a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800850c:	2200      	movs	r2, #0
 800850e:	61bb      	str	r3, [r7, #24]
 8008510:	61fa      	str	r2, [r7, #28]
 8008512:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8008516:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800851a:	f7fe f85b 	bl	80065d4 <__aeabi_uldivmod>
 800851e:	4602      	mov	r2, r0
 8008520:	460b      	mov	r3, r1
 8008522:	4613      	mov	r3, r2
 8008524:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008526:	e053      	b.n	80085d0 <HAL_RCC_GetSysClockFreq+0x150>
 8008528:	4b35      	ldr	r3, [pc, #212]	; (8008600 <HAL_RCC_GetSysClockFreq+0x180>)
 800852a:	685b      	ldr	r3, [r3, #4]
 800852c:	099b      	lsrs	r3, r3, #6
 800852e:	2200      	movs	r2, #0
 8008530:	613b      	str	r3, [r7, #16]
 8008532:	617a      	str	r2, [r7, #20]
 8008534:	693b      	ldr	r3, [r7, #16]
 8008536:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 800853a:	f04f 0b00 	mov.w	fp, #0
 800853e:	4652      	mov	r2, sl
 8008540:	465b      	mov	r3, fp
 8008542:	f04f 0000 	mov.w	r0, #0
 8008546:	f04f 0100 	mov.w	r1, #0
 800854a:	0159      	lsls	r1, r3, #5
 800854c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008550:	0150      	lsls	r0, r2, #5
 8008552:	4602      	mov	r2, r0
 8008554:	460b      	mov	r3, r1
 8008556:	ebb2 080a 	subs.w	r8, r2, sl
 800855a:	eb63 090b 	sbc.w	r9, r3, fp
 800855e:	f04f 0200 	mov.w	r2, #0
 8008562:	f04f 0300 	mov.w	r3, #0
 8008566:	ea4f 1389 	mov.w	r3, r9, lsl #6
 800856a:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 800856e:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8008572:	ebb2 0408 	subs.w	r4, r2, r8
 8008576:	eb63 0509 	sbc.w	r5, r3, r9
 800857a:	f04f 0200 	mov.w	r2, #0
 800857e:	f04f 0300 	mov.w	r3, #0
 8008582:	00eb      	lsls	r3, r5, #3
 8008584:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8008588:	00e2      	lsls	r2, r4, #3
 800858a:	4614      	mov	r4, r2
 800858c:	461d      	mov	r5, r3
 800858e:	eb14 030a 	adds.w	r3, r4, sl
 8008592:	603b      	str	r3, [r7, #0]
 8008594:	eb45 030b 	adc.w	r3, r5, fp
 8008598:	607b      	str	r3, [r7, #4]
 800859a:	f04f 0200 	mov.w	r2, #0
 800859e:	f04f 0300 	mov.w	r3, #0
 80085a2:	e9d7 4500 	ldrd	r4, r5, [r7]
 80085a6:	4629      	mov	r1, r5
 80085a8:	028b      	lsls	r3, r1, #10
 80085aa:	4621      	mov	r1, r4
 80085ac:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80085b0:	4621      	mov	r1, r4
 80085b2:	028a      	lsls	r2, r1, #10
 80085b4:	4610      	mov	r0, r2
 80085b6:	4619      	mov	r1, r3
 80085b8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80085ba:	2200      	movs	r2, #0
 80085bc:	60bb      	str	r3, [r7, #8]
 80085be:	60fa      	str	r2, [r7, #12]
 80085c0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80085c4:	f7fe f806 	bl	80065d4 <__aeabi_uldivmod>
 80085c8:	4602      	mov	r2, r0
 80085ca:	460b      	mov	r3, r1
 80085cc:	4613      	mov	r3, r2
 80085ce:	63fb      	str	r3, [r7, #60]	; 0x3c
 80085d0:	4b0b      	ldr	r3, [pc, #44]	; (8008600 <HAL_RCC_GetSysClockFreq+0x180>)
 80085d2:	685b      	ldr	r3, [r3, #4]
 80085d4:	0c1b      	lsrs	r3, r3, #16
 80085d6:	f003 0303 	and.w	r3, r3, #3
 80085da:	3301      	adds	r3, #1
 80085dc:	005b      	lsls	r3, r3, #1
 80085de:	633b      	str	r3, [r7, #48]	; 0x30
 80085e0:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80085e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80085e4:	fbb2 f3f3 	udiv	r3, r2, r3
 80085e8:	63bb      	str	r3, [r7, #56]	; 0x38
 80085ea:	e002      	b.n	80085f2 <HAL_RCC_GetSysClockFreq+0x172>
 80085ec:	4b05      	ldr	r3, [pc, #20]	; (8008604 <HAL_RCC_GetSysClockFreq+0x184>)
 80085ee:	63bb      	str	r3, [r7, #56]	; 0x38
 80085f0:	bf00      	nop
 80085f2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80085f4:	4618      	mov	r0, r3
 80085f6:	3740      	adds	r7, #64	; 0x40
 80085f8:	46bd      	mov	sp, r7
 80085fa:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80085fe:	bf00      	nop
 8008600:	40023800 	.word	0x40023800
 8008604:	00f42400 	.word	0x00f42400
 8008608:	017d7840 	.word	0x017d7840

0800860c <HAL_RCC_GetHCLKFreq>:
 800860c:	b480      	push	{r7}
 800860e:	af00      	add	r7, sp, #0
 8008610:	4b03      	ldr	r3, [pc, #12]	; (8008620 <HAL_RCC_GetHCLKFreq+0x14>)
 8008612:	681b      	ldr	r3, [r3, #0]
 8008614:	4618      	mov	r0, r3
 8008616:	46bd      	mov	sp, r7
 8008618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800861c:	4770      	bx	lr
 800861e:	bf00      	nop
 8008620:	20000000 	.word	0x20000000

08008624 <HAL_RCC_GetPCLK1Freq>:
 8008624:	b580      	push	{r7, lr}
 8008626:	af00      	add	r7, sp, #0
 8008628:	f7ff fff0 	bl	800860c <HAL_RCC_GetHCLKFreq>
 800862c:	4602      	mov	r2, r0
 800862e:	4b05      	ldr	r3, [pc, #20]	; (8008644 <HAL_RCC_GetPCLK1Freq+0x20>)
 8008630:	689b      	ldr	r3, [r3, #8]
 8008632:	0a9b      	lsrs	r3, r3, #10
 8008634:	f003 0307 	and.w	r3, r3, #7
 8008638:	4903      	ldr	r1, [pc, #12]	; (8008648 <HAL_RCC_GetPCLK1Freq+0x24>)
 800863a:	5ccb      	ldrb	r3, [r1, r3]
 800863c:	fa22 f303 	lsr.w	r3, r2, r3
 8008640:	4618      	mov	r0, r3
 8008642:	bd80      	pop	{r7, pc}
 8008644:	40023800 	.word	0x40023800
 8008648:	08008fcc 	.word	0x08008fcc

0800864c <HAL_RCC_GetPCLK2Freq>:
 800864c:	b580      	push	{r7, lr}
 800864e:	af00      	add	r7, sp, #0
 8008650:	f7ff ffdc 	bl	800860c <HAL_RCC_GetHCLKFreq>
 8008654:	4602      	mov	r2, r0
 8008656:	4b05      	ldr	r3, [pc, #20]	; (800866c <HAL_RCC_GetPCLK2Freq+0x20>)
 8008658:	689b      	ldr	r3, [r3, #8]
 800865a:	0b5b      	lsrs	r3, r3, #13
 800865c:	f003 0307 	and.w	r3, r3, #7
 8008660:	4903      	ldr	r1, [pc, #12]	; (8008670 <HAL_RCC_GetPCLK2Freq+0x24>)
 8008662:	5ccb      	ldrb	r3, [r1, r3]
 8008664:	fa22 f303 	lsr.w	r3, r2, r3
 8008668:	4618      	mov	r0, r3
 800866a:	bd80      	pop	{r7, pc}
 800866c:	40023800 	.word	0x40023800
 8008670:	08008fcc 	.word	0x08008fcc

08008674 <HAL_UART_Init>:
 8008674:	b580      	push	{r7, lr}
 8008676:	b082      	sub	sp, #8
 8008678:	af00      	add	r7, sp, #0
 800867a:	6078      	str	r0, [r7, #4]
 800867c:	687b      	ldr	r3, [r7, #4]
 800867e:	2b00      	cmp	r3, #0
 8008680:	d101      	bne.n	8008686 <HAL_UART_Init+0x12>
 8008682:	2301      	movs	r3, #1
 8008684:	e03f      	b.n	8008706 <HAL_UART_Init+0x92>
 8008686:	687b      	ldr	r3, [r7, #4]
 8008688:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800868c:	b2db      	uxtb	r3, r3
 800868e:	2b00      	cmp	r3, #0
 8008690:	d106      	bne.n	80086a0 <HAL_UART_Init+0x2c>
 8008692:	687b      	ldr	r3, [r7, #4]
 8008694:	2200      	movs	r2, #0
 8008696:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800869a:	6878      	ldr	r0, [r7, #4]
 800869c:	f7fe fd1e 	bl	80070dc <HAL_UART_MspInit>
 80086a0:	687b      	ldr	r3, [r7, #4]
 80086a2:	2224      	movs	r2, #36	; 0x24
 80086a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80086a8:	687b      	ldr	r3, [r7, #4]
 80086aa:	681b      	ldr	r3, [r3, #0]
 80086ac:	68da      	ldr	r2, [r3, #12]
 80086ae:	687b      	ldr	r3, [r7, #4]
 80086b0:	681b      	ldr	r3, [r3, #0]
 80086b2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80086b6:	60da      	str	r2, [r3, #12]
 80086b8:	6878      	ldr	r0, [r7, #4]
 80086ba:	f000 f9cb 	bl	8008a54 <UART_SetConfig>
 80086be:	687b      	ldr	r3, [r7, #4]
 80086c0:	681b      	ldr	r3, [r3, #0]
 80086c2:	691a      	ldr	r2, [r3, #16]
 80086c4:	687b      	ldr	r3, [r7, #4]
 80086c6:	681b      	ldr	r3, [r3, #0]
 80086c8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80086cc:	611a      	str	r2, [r3, #16]
 80086ce:	687b      	ldr	r3, [r7, #4]
 80086d0:	681b      	ldr	r3, [r3, #0]
 80086d2:	695a      	ldr	r2, [r3, #20]
 80086d4:	687b      	ldr	r3, [r7, #4]
 80086d6:	681b      	ldr	r3, [r3, #0]
 80086d8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80086dc:	615a      	str	r2, [r3, #20]
 80086de:	687b      	ldr	r3, [r7, #4]
 80086e0:	681b      	ldr	r3, [r3, #0]
 80086e2:	68da      	ldr	r2, [r3, #12]
 80086e4:	687b      	ldr	r3, [r7, #4]
 80086e6:	681b      	ldr	r3, [r3, #0]
 80086e8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80086ec:	60da      	str	r2, [r3, #12]
 80086ee:	687b      	ldr	r3, [r7, #4]
 80086f0:	2200      	movs	r2, #0
 80086f2:	641a      	str	r2, [r3, #64]	; 0x40
 80086f4:	687b      	ldr	r3, [r7, #4]
 80086f6:	2220      	movs	r2, #32
 80086f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80086fc:	687b      	ldr	r3, [r7, #4]
 80086fe:	2220      	movs	r2, #32
 8008700:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008704:	2300      	movs	r3, #0
 8008706:	4618      	mov	r0, r3
 8008708:	3708      	adds	r7, #8
 800870a:	46bd      	mov	sp, r7
 800870c:	bd80      	pop	{r7, pc}

0800870e <HAL_UART_Transmit>:
 800870e:	b580      	push	{r7, lr}
 8008710:	b08a      	sub	sp, #40	; 0x28
 8008712:	af02      	add	r7, sp, #8
 8008714:	60f8      	str	r0, [r7, #12]
 8008716:	60b9      	str	r1, [r7, #8]
 8008718:	603b      	str	r3, [r7, #0]
 800871a:	4613      	mov	r3, r2
 800871c:	80fb      	strh	r3, [r7, #6]
 800871e:	2300      	movs	r3, #0
 8008720:	617b      	str	r3, [r7, #20]
 8008722:	68fb      	ldr	r3, [r7, #12]
 8008724:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008728:	b2db      	uxtb	r3, r3
 800872a:	2b20      	cmp	r3, #32
 800872c:	d17c      	bne.n	8008828 <HAL_UART_Transmit+0x11a>
 800872e:	68bb      	ldr	r3, [r7, #8]
 8008730:	2b00      	cmp	r3, #0
 8008732:	d002      	beq.n	800873a <HAL_UART_Transmit+0x2c>
 8008734:	88fb      	ldrh	r3, [r7, #6]
 8008736:	2b00      	cmp	r3, #0
 8008738:	d101      	bne.n	800873e <HAL_UART_Transmit+0x30>
 800873a:	2301      	movs	r3, #1
 800873c:	e075      	b.n	800882a <HAL_UART_Transmit+0x11c>
 800873e:	68fb      	ldr	r3, [r7, #12]
 8008740:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008744:	2b01      	cmp	r3, #1
 8008746:	d101      	bne.n	800874c <HAL_UART_Transmit+0x3e>
 8008748:	2302      	movs	r3, #2
 800874a:	e06e      	b.n	800882a <HAL_UART_Transmit+0x11c>
 800874c:	68fb      	ldr	r3, [r7, #12]
 800874e:	2201      	movs	r2, #1
 8008750:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008754:	68fb      	ldr	r3, [r7, #12]
 8008756:	2200      	movs	r2, #0
 8008758:	641a      	str	r2, [r3, #64]	; 0x40
 800875a:	68fb      	ldr	r3, [r7, #12]
 800875c:	2221      	movs	r2, #33	; 0x21
 800875e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008762:	f7fe fd93 	bl	800728c <HAL_GetTick>
 8008766:	6178      	str	r0, [r7, #20]
 8008768:	68fb      	ldr	r3, [r7, #12]
 800876a:	88fa      	ldrh	r2, [r7, #6]
 800876c:	849a      	strh	r2, [r3, #36]	; 0x24
 800876e:	68fb      	ldr	r3, [r7, #12]
 8008770:	88fa      	ldrh	r2, [r7, #6]
 8008772:	84da      	strh	r2, [r3, #38]	; 0x26
 8008774:	68fb      	ldr	r3, [r7, #12]
 8008776:	689b      	ldr	r3, [r3, #8]
 8008778:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800877c:	d108      	bne.n	8008790 <HAL_UART_Transmit+0x82>
 800877e:	68fb      	ldr	r3, [r7, #12]
 8008780:	691b      	ldr	r3, [r3, #16]
 8008782:	2b00      	cmp	r3, #0
 8008784:	d104      	bne.n	8008790 <HAL_UART_Transmit+0x82>
 8008786:	2300      	movs	r3, #0
 8008788:	61fb      	str	r3, [r7, #28]
 800878a:	68bb      	ldr	r3, [r7, #8]
 800878c:	61bb      	str	r3, [r7, #24]
 800878e:	e003      	b.n	8008798 <HAL_UART_Transmit+0x8a>
 8008790:	68bb      	ldr	r3, [r7, #8]
 8008792:	61fb      	str	r3, [r7, #28]
 8008794:	2300      	movs	r3, #0
 8008796:	61bb      	str	r3, [r7, #24]
 8008798:	68fb      	ldr	r3, [r7, #12]
 800879a:	2200      	movs	r2, #0
 800879c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80087a0:	e02a      	b.n	80087f8 <HAL_UART_Transmit+0xea>
 80087a2:	683b      	ldr	r3, [r7, #0]
 80087a4:	9300      	str	r3, [sp, #0]
 80087a6:	697b      	ldr	r3, [r7, #20]
 80087a8:	2200      	movs	r2, #0
 80087aa:	2180      	movs	r1, #128	; 0x80
 80087ac:	68f8      	ldr	r0, [r7, #12]
 80087ae:	f000 f8e2 	bl	8008976 <UART_WaitOnFlagUntilTimeout>
 80087b2:	4603      	mov	r3, r0
 80087b4:	2b00      	cmp	r3, #0
 80087b6:	d001      	beq.n	80087bc <HAL_UART_Transmit+0xae>
 80087b8:	2303      	movs	r3, #3
 80087ba:	e036      	b.n	800882a <HAL_UART_Transmit+0x11c>
 80087bc:	69fb      	ldr	r3, [r7, #28]
 80087be:	2b00      	cmp	r3, #0
 80087c0:	d10b      	bne.n	80087da <HAL_UART_Transmit+0xcc>
 80087c2:	69bb      	ldr	r3, [r7, #24]
 80087c4:	881b      	ldrh	r3, [r3, #0]
 80087c6:	461a      	mov	r2, r3
 80087c8:	68fb      	ldr	r3, [r7, #12]
 80087ca:	681b      	ldr	r3, [r3, #0]
 80087cc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80087d0:	605a      	str	r2, [r3, #4]
 80087d2:	69bb      	ldr	r3, [r7, #24]
 80087d4:	3302      	adds	r3, #2
 80087d6:	61bb      	str	r3, [r7, #24]
 80087d8:	e007      	b.n	80087ea <HAL_UART_Transmit+0xdc>
 80087da:	69fb      	ldr	r3, [r7, #28]
 80087dc:	781a      	ldrb	r2, [r3, #0]
 80087de:	68fb      	ldr	r3, [r7, #12]
 80087e0:	681b      	ldr	r3, [r3, #0]
 80087e2:	605a      	str	r2, [r3, #4]
 80087e4:	69fb      	ldr	r3, [r7, #28]
 80087e6:	3301      	adds	r3, #1
 80087e8:	61fb      	str	r3, [r7, #28]
 80087ea:	68fb      	ldr	r3, [r7, #12]
 80087ec:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80087ee:	b29b      	uxth	r3, r3
 80087f0:	3b01      	subs	r3, #1
 80087f2:	b29a      	uxth	r2, r3
 80087f4:	68fb      	ldr	r3, [r7, #12]
 80087f6:	84da      	strh	r2, [r3, #38]	; 0x26
 80087f8:	68fb      	ldr	r3, [r7, #12]
 80087fa:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80087fc:	b29b      	uxth	r3, r3
 80087fe:	2b00      	cmp	r3, #0
 8008800:	d1cf      	bne.n	80087a2 <HAL_UART_Transmit+0x94>
 8008802:	683b      	ldr	r3, [r7, #0]
 8008804:	9300      	str	r3, [sp, #0]
 8008806:	697b      	ldr	r3, [r7, #20]
 8008808:	2200      	movs	r2, #0
 800880a:	2140      	movs	r1, #64	; 0x40
 800880c:	68f8      	ldr	r0, [r7, #12]
 800880e:	f000 f8b2 	bl	8008976 <UART_WaitOnFlagUntilTimeout>
 8008812:	4603      	mov	r3, r0
 8008814:	2b00      	cmp	r3, #0
 8008816:	d001      	beq.n	800881c <HAL_UART_Transmit+0x10e>
 8008818:	2303      	movs	r3, #3
 800881a:	e006      	b.n	800882a <HAL_UART_Transmit+0x11c>
 800881c:	68fb      	ldr	r3, [r7, #12]
 800881e:	2220      	movs	r2, #32
 8008820:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008824:	2300      	movs	r3, #0
 8008826:	e000      	b.n	800882a <HAL_UART_Transmit+0x11c>
 8008828:	2302      	movs	r3, #2
 800882a:	4618      	mov	r0, r3
 800882c:	3720      	adds	r7, #32
 800882e:	46bd      	mov	sp, r7
 8008830:	bd80      	pop	{r7, pc}

08008832 <HAL_UART_Receive>:
 8008832:	b580      	push	{r7, lr}
 8008834:	b08a      	sub	sp, #40	; 0x28
 8008836:	af02      	add	r7, sp, #8
 8008838:	60f8      	str	r0, [r7, #12]
 800883a:	60b9      	str	r1, [r7, #8]
 800883c:	603b      	str	r3, [r7, #0]
 800883e:	4613      	mov	r3, r2
 8008840:	80fb      	strh	r3, [r7, #6]
 8008842:	2300      	movs	r3, #0
 8008844:	617b      	str	r3, [r7, #20]
 8008846:	68fb      	ldr	r3, [r7, #12]
 8008848:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800884c:	b2db      	uxtb	r3, r3
 800884e:	2b20      	cmp	r3, #32
 8008850:	f040 808c 	bne.w	800896c <HAL_UART_Receive+0x13a>
 8008854:	68bb      	ldr	r3, [r7, #8]
 8008856:	2b00      	cmp	r3, #0
 8008858:	d002      	beq.n	8008860 <HAL_UART_Receive+0x2e>
 800885a:	88fb      	ldrh	r3, [r7, #6]
 800885c:	2b00      	cmp	r3, #0
 800885e:	d101      	bne.n	8008864 <HAL_UART_Receive+0x32>
 8008860:	2301      	movs	r3, #1
 8008862:	e084      	b.n	800896e <HAL_UART_Receive+0x13c>
 8008864:	68fb      	ldr	r3, [r7, #12]
 8008866:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800886a:	2b01      	cmp	r3, #1
 800886c:	d101      	bne.n	8008872 <HAL_UART_Receive+0x40>
 800886e:	2302      	movs	r3, #2
 8008870:	e07d      	b.n	800896e <HAL_UART_Receive+0x13c>
 8008872:	68fb      	ldr	r3, [r7, #12]
 8008874:	2201      	movs	r2, #1
 8008876:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800887a:	68fb      	ldr	r3, [r7, #12]
 800887c:	2200      	movs	r2, #0
 800887e:	641a      	str	r2, [r3, #64]	; 0x40
 8008880:	68fb      	ldr	r3, [r7, #12]
 8008882:	2222      	movs	r2, #34	; 0x22
 8008884:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008888:	68fb      	ldr	r3, [r7, #12]
 800888a:	2200      	movs	r2, #0
 800888c:	631a      	str	r2, [r3, #48]	; 0x30
 800888e:	f7fe fcfd 	bl	800728c <HAL_GetTick>
 8008892:	6178      	str	r0, [r7, #20]
 8008894:	68fb      	ldr	r3, [r7, #12]
 8008896:	88fa      	ldrh	r2, [r7, #6]
 8008898:	859a      	strh	r2, [r3, #44]	; 0x2c
 800889a:	68fb      	ldr	r3, [r7, #12]
 800889c:	88fa      	ldrh	r2, [r7, #6]
 800889e:	85da      	strh	r2, [r3, #46]	; 0x2e
 80088a0:	68fb      	ldr	r3, [r7, #12]
 80088a2:	689b      	ldr	r3, [r3, #8]
 80088a4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80088a8:	d108      	bne.n	80088bc <HAL_UART_Receive+0x8a>
 80088aa:	68fb      	ldr	r3, [r7, #12]
 80088ac:	691b      	ldr	r3, [r3, #16]
 80088ae:	2b00      	cmp	r3, #0
 80088b0:	d104      	bne.n	80088bc <HAL_UART_Receive+0x8a>
 80088b2:	2300      	movs	r3, #0
 80088b4:	61fb      	str	r3, [r7, #28]
 80088b6:	68bb      	ldr	r3, [r7, #8]
 80088b8:	61bb      	str	r3, [r7, #24]
 80088ba:	e003      	b.n	80088c4 <HAL_UART_Receive+0x92>
 80088bc:	68bb      	ldr	r3, [r7, #8]
 80088be:	61fb      	str	r3, [r7, #28]
 80088c0:	2300      	movs	r3, #0
 80088c2:	61bb      	str	r3, [r7, #24]
 80088c4:	68fb      	ldr	r3, [r7, #12]
 80088c6:	2200      	movs	r2, #0
 80088c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80088cc:	e043      	b.n	8008956 <HAL_UART_Receive+0x124>
 80088ce:	683b      	ldr	r3, [r7, #0]
 80088d0:	9300      	str	r3, [sp, #0]
 80088d2:	697b      	ldr	r3, [r7, #20]
 80088d4:	2200      	movs	r2, #0
 80088d6:	2120      	movs	r1, #32
 80088d8:	68f8      	ldr	r0, [r7, #12]
 80088da:	f000 f84c 	bl	8008976 <UART_WaitOnFlagUntilTimeout>
 80088de:	4603      	mov	r3, r0
 80088e0:	2b00      	cmp	r3, #0
 80088e2:	d001      	beq.n	80088e8 <HAL_UART_Receive+0xb6>
 80088e4:	2303      	movs	r3, #3
 80088e6:	e042      	b.n	800896e <HAL_UART_Receive+0x13c>
 80088e8:	69fb      	ldr	r3, [r7, #28]
 80088ea:	2b00      	cmp	r3, #0
 80088ec:	d10c      	bne.n	8008908 <HAL_UART_Receive+0xd6>
 80088ee:	68fb      	ldr	r3, [r7, #12]
 80088f0:	681b      	ldr	r3, [r3, #0]
 80088f2:	685b      	ldr	r3, [r3, #4]
 80088f4:	b29b      	uxth	r3, r3
 80088f6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80088fa:	b29a      	uxth	r2, r3
 80088fc:	69bb      	ldr	r3, [r7, #24]
 80088fe:	801a      	strh	r2, [r3, #0]
 8008900:	69bb      	ldr	r3, [r7, #24]
 8008902:	3302      	adds	r3, #2
 8008904:	61bb      	str	r3, [r7, #24]
 8008906:	e01f      	b.n	8008948 <HAL_UART_Receive+0x116>
 8008908:	68fb      	ldr	r3, [r7, #12]
 800890a:	689b      	ldr	r3, [r3, #8]
 800890c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008910:	d007      	beq.n	8008922 <HAL_UART_Receive+0xf0>
 8008912:	68fb      	ldr	r3, [r7, #12]
 8008914:	689b      	ldr	r3, [r3, #8]
 8008916:	2b00      	cmp	r3, #0
 8008918:	d10a      	bne.n	8008930 <HAL_UART_Receive+0xfe>
 800891a:	68fb      	ldr	r3, [r7, #12]
 800891c:	691b      	ldr	r3, [r3, #16]
 800891e:	2b00      	cmp	r3, #0
 8008920:	d106      	bne.n	8008930 <HAL_UART_Receive+0xfe>
 8008922:	68fb      	ldr	r3, [r7, #12]
 8008924:	681b      	ldr	r3, [r3, #0]
 8008926:	685b      	ldr	r3, [r3, #4]
 8008928:	b2da      	uxtb	r2, r3
 800892a:	69fb      	ldr	r3, [r7, #28]
 800892c:	701a      	strb	r2, [r3, #0]
 800892e:	e008      	b.n	8008942 <HAL_UART_Receive+0x110>
 8008930:	68fb      	ldr	r3, [r7, #12]
 8008932:	681b      	ldr	r3, [r3, #0]
 8008934:	685b      	ldr	r3, [r3, #4]
 8008936:	b2db      	uxtb	r3, r3
 8008938:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800893c:	b2da      	uxtb	r2, r3
 800893e:	69fb      	ldr	r3, [r7, #28]
 8008940:	701a      	strb	r2, [r3, #0]
 8008942:	69fb      	ldr	r3, [r7, #28]
 8008944:	3301      	adds	r3, #1
 8008946:	61fb      	str	r3, [r7, #28]
 8008948:	68fb      	ldr	r3, [r7, #12]
 800894a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800894c:	b29b      	uxth	r3, r3
 800894e:	3b01      	subs	r3, #1
 8008950:	b29a      	uxth	r2, r3
 8008952:	68fb      	ldr	r3, [r7, #12]
 8008954:	85da      	strh	r2, [r3, #46]	; 0x2e
 8008956:	68fb      	ldr	r3, [r7, #12]
 8008958:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800895a:	b29b      	uxth	r3, r3
 800895c:	2b00      	cmp	r3, #0
 800895e:	d1b6      	bne.n	80088ce <HAL_UART_Receive+0x9c>
 8008960:	68fb      	ldr	r3, [r7, #12]
 8008962:	2220      	movs	r2, #32
 8008964:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008968:	2300      	movs	r3, #0
 800896a:	e000      	b.n	800896e <HAL_UART_Receive+0x13c>
 800896c:	2302      	movs	r3, #2
 800896e:	4618      	mov	r0, r3
 8008970:	3720      	adds	r7, #32
 8008972:	46bd      	mov	sp, r7
 8008974:	bd80      	pop	{r7, pc}

08008976 <UART_WaitOnFlagUntilTimeout>:
 8008976:	b580      	push	{r7, lr}
 8008978:	b090      	sub	sp, #64	; 0x40
 800897a:	af00      	add	r7, sp, #0
 800897c:	60f8      	str	r0, [r7, #12]
 800897e:	60b9      	str	r1, [r7, #8]
 8008980:	603b      	str	r3, [r7, #0]
 8008982:	4613      	mov	r3, r2
 8008984:	71fb      	strb	r3, [r7, #7]
 8008986:	e050      	b.n	8008a2a <UART_WaitOnFlagUntilTimeout+0xb4>
 8008988:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800898a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800898e:	d04c      	beq.n	8008a2a <UART_WaitOnFlagUntilTimeout+0xb4>
 8008990:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8008992:	2b00      	cmp	r3, #0
 8008994:	d007      	beq.n	80089a6 <UART_WaitOnFlagUntilTimeout+0x30>
 8008996:	f7fe fc79 	bl	800728c <HAL_GetTick>
 800899a:	4602      	mov	r2, r0
 800899c:	683b      	ldr	r3, [r7, #0]
 800899e:	1ad3      	subs	r3, r2, r3
 80089a0:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80089a2:	429a      	cmp	r2, r3
 80089a4:	d241      	bcs.n	8008a2a <UART_WaitOnFlagUntilTimeout+0xb4>
 80089a6:	68fb      	ldr	r3, [r7, #12]
 80089a8:	681b      	ldr	r3, [r3, #0]
 80089aa:	330c      	adds	r3, #12
 80089ac:	62bb      	str	r3, [r7, #40]	; 0x28
 80089ae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80089b0:	e853 3f00 	ldrex	r3, [r3]
 80089b4:	627b      	str	r3, [r7, #36]	; 0x24
 80089b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80089b8:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80089bc:	63fb      	str	r3, [r7, #60]	; 0x3c
 80089be:	68fb      	ldr	r3, [r7, #12]
 80089c0:	681b      	ldr	r3, [r3, #0]
 80089c2:	330c      	adds	r3, #12
 80089c4:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80089c6:	637a      	str	r2, [r7, #52]	; 0x34
 80089c8:	633b      	str	r3, [r7, #48]	; 0x30
 80089ca:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80089cc:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80089ce:	e841 2300 	strex	r3, r2, [r1]
 80089d2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80089d4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80089d6:	2b00      	cmp	r3, #0
 80089d8:	d1e5      	bne.n	80089a6 <UART_WaitOnFlagUntilTimeout+0x30>
 80089da:	68fb      	ldr	r3, [r7, #12]
 80089dc:	681b      	ldr	r3, [r3, #0]
 80089de:	3314      	adds	r3, #20
 80089e0:	617b      	str	r3, [r7, #20]
 80089e2:	697b      	ldr	r3, [r7, #20]
 80089e4:	e853 3f00 	ldrex	r3, [r3]
 80089e8:	613b      	str	r3, [r7, #16]
 80089ea:	693b      	ldr	r3, [r7, #16]
 80089ec:	f023 0301 	bic.w	r3, r3, #1
 80089f0:	63bb      	str	r3, [r7, #56]	; 0x38
 80089f2:	68fb      	ldr	r3, [r7, #12]
 80089f4:	681b      	ldr	r3, [r3, #0]
 80089f6:	3314      	adds	r3, #20
 80089f8:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80089fa:	623a      	str	r2, [r7, #32]
 80089fc:	61fb      	str	r3, [r7, #28]
 80089fe:	69f9      	ldr	r1, [r7, #28]
 8008a00:	6a3a      	ldr	r2, [r7, #32]
 8008a02:	e841 2300 	strex	r3, r2, [r1]
 8008a06:	61bb      	str	r3, [r7, #24]
 8008a08:	69bb      	ldr	r3, [r7, #24]
 8008a0a:	2b00      	cmp	r3, #0
 8008a0c:	d1e5      	bne.n	80089da <UART_WaitOnFlagUntilTimeout+0x64>
 8008a0e:	68fb      	ldr	r3, [r7, #12]
 8008a10:	2220      	movs	r2, #32
 8008a12:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008a16:	68fb      	ldr	r3, [r7, #12]
 8008a18:	2220      	movs	r2, #32
 8008a1a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008a1e:	68fb      	ldr	r3, [r7, #12]
 8008a20:	2200      	movs	r2, #0
 8008a22:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008a26:	2303      	movs	r3, #3
 8008a28:	e00f      	b.n	8008a4a <UART_WaitOnFlagUntilTimeout+0xd4>
 8008a2a:	68fb      	ldr	r3, [r7, #12]
 8008a2c:	681b      	ldr	r3, [r3, #0]
 8008a2e:	681a      	ldr	r2, [r3, #0]
 8008a30:	68bb      	ldr	r3, [r7, #8]
 8008a32:	4013      	ands	r3, r2
 8008a34:	68ba      	ldr	r2, [r7, #8]
 8008a36:	429a      	cmp	r2, r3
 8008a38:	bf0c      	ite	eq
 8008a3a:	2301      	moveq	r3, #1
 8008a3c:	2300      	movne	r3, #0
 8008a3e:	b2db      	uxtb	r3, r3
 8008a40:	461a      	mov	r2, r3
 8008a42:	79fb      	ldrb	r3, [r7, #7]
 8008a44:	429a      	cmp	r2, r3
 8008a46:	d09f      	beq.n	8008988 <UART_WaitOnFlagUntilTimeout+0x12>
 8008a48:	2300      	movs	r3, #0
 8008a4a:	4618      	mov	r0, r3
 8008a4c:	3740      	adds	r7, #64	; 0x40
 8008a4e:	46bd      	mov	sp, r7
 8008a50:	bd80      	pop	{r7, pc}
	...

08008a54 <UART_SetConfig>:
 8008a54:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008a58:	b0c0      	sub	sp, #256	; 0x100
 8008a5a:	af00      	add	r7, sp, #0
 8008a5c:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8008a60:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008a64:	681b      	ldr	r3, [r3, #0]
 8008a66:	691b      	ldr	r3, [r3, #16]
 8008a68:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8008a6c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008a70:	68d9      	ldr	r1, [r3, #12]
 8008a72:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008a76:	681a      	ldr	r2, [r3, #0]
 8008a78:	ea40 0301 	orr.w	r3, r0, r1
 8008a7c:	6113      	str	r3, [r2, #16]
 8008a7e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008a82:	689a      	ldr	r2, [r3, #8]
 8008a84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008a88:	691b      	ldr	r3, [r3, #16]
 8008a8a:	431a      	orrs	r2, r3
 8008a8c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008a90:	695b      	ldr	r3, [r3, #20]
 8008a92:	431a      	orrs	r2, r3
 8008a94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008a98:	69db      	ldr	r3, [r3, #28]
 8008a9a:	4313      	orrs	r3, r2
 8008a9c:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8008aa0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008aa4:	681b      	ldr	r3, [r3, #0]
 8008aa6:	68db      	ldr	r3, [r3, #12]
 8008aa8:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8008aac:	f021 010c 	bic.w	r1, r1, #12
 8008ab0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008ab4:	681a      	ldr	r2, [r3, #0]
 8008ab6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8008aba:	430b      	orrs	r3, r1
 8008abc:	60d3      	str	r3, [r2, #12]
 8008abe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008ac2:	681b      	ldr	r3, [r3, #0]
 8008ac4:	695b      	ldr	r3, [r3, #20]
 8008ac6:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8008aca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008ace:	6999      	ldr	r1, [r3, #24]
 8008ad0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008ad4:	681a      	ldr	r2, [r3, #0]
 8008ad6:	ea40 0301 	orr.w	r3, r0, r1
 8008ada:	6153      	str	r3, [r2, #20]
 8008adc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008ae0:	681a      	ldr	r2, [r3, #0]
 8008ae2:	4b8f      	ldr	r3, [pc, #572]	; (8008d20 <UART_SetConfig+0x2cc>)
 8008ae4:	429a      	cmp	r2, r3
 8008ae6:	d005      	beq.n	8008af4 <UART_SetConfig+0xa0>
 8008ae8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008aec:	681a      	ldr	r2, [r3, #0]
 8008aee:	4b8d      	ldr	r3, [pc, #564]	; (8008d24 <UART_SetConfig+0x2d0>)
 8008af0:	429a      	cmp	r2, r3
 8008af2:	d104      	bne.n	8008afe <UART_SetConfig+0xaa>
 8008af4:	f7ff fdaa 	bl	800864c <HAL_RCC_GetPCLK2Freq>
 8008af8:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8008afc:	e003      	b.n	8008b06 <UART_SetConfig+0xb2>
 8008afe:	f7ff fd91 	bl	8008624 <HAL_RCC_GetPCLK1Freq>
 8008b02:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8008b06:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008b0a:	69db      	ldr	r3, [r3, #28]
 8008b0c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008b10:	f040 810c 	bne.w	8008d2c <UART_SetConfig+0x2d8>
 8008b14:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8008b18:	2200      	movs	r2, #0
 8008b1a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8008b1e:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8008b22:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8008b26:	4622      	mov	r2, r4
 8008b28:	462b      	mov	r3, r5
 8008b2a:	1891      	adds	r1, r2, r2
 8008b2c:	65b9      	str	r1, [r7, #88]	; 0x58
 8008b2e:	415b      	adcs	r3, r3
 8008b30:	65fb      	str	r3, [r7, #92]	; 0x5c
 8008b32:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8008b36:	4621      	mov	r1, r4
 8008b38:	eb12 0801 	adds.w	r8, r2, r1
 8008b3c:	4629      	mov	r1, r5
 8008b3e:	eb43 0901 	adc.w	r9, r3, r1
 8008b42:	f04f 0200 	mov.w	r2, #0
 8008b46:	f04f 0300 	mov.w	r3, #0
 8008b4a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8008b4e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8008b52:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8008b56:	4690      	mov	r8, r2
 8008b58:	4699      	mov	r9, r3
 8008b5a:	4623      	mov	r3, r4
 8008b5c:	eb18 0303 	adds.w	r3, r8, r3
 8008b60:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8008b64:	462b      	mov	r3, r5
 8008b66:	eb49 0303 	adc.w	r3, r9, r3
 8008b6a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8008b6e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008b72:	685b      	ldr	r3, [r3, #4]
 8008b74:	2200      	movs	r2, #0
 8008b76:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8008b7a:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8008b7e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8008b82:	460b      	mov	r3, r1
 8008b84:	18db      	adds	r3, r3, r3
 8008b86:	653b      	str	r3, [r7, #80]	; 0x50
 8008b88:	4613      	mov	r3, r2
 8008b8a:	eb42 0303 	adc.w	r3, r2, r3
 8008b8e:	657b      	str	r3, [r7, #84]	; 0x54
 8008b90:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8008b94:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8008b98:	f7fd fd1c 	bl	80065d4 <__aeabi_uldivmod>
 8008b9c:	4602      	mov	r2, r0
 8008b9e:	460b      	mov	r3, r1
 8008ba0:	4b61      	ldr	r3, [pc, #388]	; (8008d28 <UART_SetConfig+0x2d4>)
 8008ba2:	fba3 2302 	umull	r2, r3, r3, r2
 8008ba6:	095b      	lsrs	r3, r3, #5
 8008ba8:	011c      	lsls	r4, r3, #4
 8008baa:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8008bae:	2200      	movs	r2, #0
 8008bb0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8008bb4:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8008bb8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8008bbc:	4642      	mov	r2, r8
 8008bbe:	464b      	mov	r3, r9
 8008bc0:	1891      	adds	r1, r2, r2
 8008bc2:	64b9      	str	r1, [r7, #72]	; 0x48
 8008bc4:	415b      	adcs	r3, r3
 8008bc6:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008bc8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8008bcc:	4641      	mov	r1, r8
 8008bce:	eb12 0a01 	adds.w	sl, r2, r1
 8008bd2:	4649      	mov	r1, r9
 8008bd4:	eb43 0b01 	adc.w	fp, r3, r1
 8008bd8:	f04f 0200 	mov.w	r2, #0
 8008bdc:	f04f 0300 	mov.w	r3, #0
 8008be0:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8008be4:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8008be8:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8008bec:	4692      	mov	sl, r2
 8008bee:	469b      	mov	fp, r3
 8008bf0:	4643      	mov	r3, r8
 8008bf2:	eb1a 0303 	adds.w	r3, sl, r3
 8008bf6:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8008bfa:	464b      	mov	r3, r9
 8008bfc:	eb4b 0303 	adc.w	r3, fp, r3
 8008c00:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8008c04:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008c08:	685b      	ldr	r3, [r3, #4]
 8008c0a:	2200      	movs	r2, #0
 8008c0c:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8008c10:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8008c14:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8008c18:	460b      	mov	r3, r1
 8008c1a:	18db      	adds	r3, r3, r3
 8008c1c:	643b      	str	r3, [r7, #64]	; 0x40
 8008c1e:	4613      	mov	r3, r2
 8008c20:	eb42 0303 	adc.w	r3, r2, r3
 8008c24:	647b      	str	r3, [r7, #68]	; 0x44
 8008c26:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8008c2a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8008c2e:	f7fd fcd1 	bl	80065d4 <__aeabi_uldivmod>
 8008c32:	4602      	mov	r2, r0
 8008c34:	460b      	mov	r3, r1
 8008c36:	4611      	mov	r1, r2
 8008c38:	4b3b      	ldr	r3, [pc, #236]	; (8008d28 <UART_SetConfig+0x2d4>)
 8008c3a:	fba3 2301 	umull	r2, r3, r3, r1
 8008c3e:	095b      	lsrs	r3, r3, #5
 8008c40:	2264      	movs	r2, #100	; 0x64
 8008c42:	fb02 f303 	mul.w	r3, r2, r3
 8008c46:	1acb      	subs	r3, r1, r3
 8008c48:	00db      	lsls	r3, r3, #3
 8008c4a:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8008c4e:	4b36      	ldr	r3, [pc, #216]	; (8008d28 <UART_SetConfig+0x2d4>)
 8008c50:	fba3 2302 	umull	r2, r3, r3, r2
 8008c54:	095b      	lsrs	r3, r3, #5
 8008c56:	005b      	lsls	r3, r3, #1
 8008c58:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8008c5c:	441c      	add	r4, r3
 8008c5e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8008c62:	2200      	movs	r2, #0
 8008c64:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8008c68:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8008c6c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8008c70:	4642      	mov	r2, r8
 8008c72:	464b      	mov	r3, r9
 8008c74:	1891      	adds	r1, r2, r2
 8008c76:	63b9      	str	r1, [r7, #56]	; 0x38
 8008c78:	415b      	adcs	r3, r3
 8008c7a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008c7c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8008c80:	4641      	mov	r1, r8
 8008c82:	1851      	adds	r1, r2, r1
 8008c84:	6339      	str	r1, [r7, #48]	; 0x30
 8008c86:	4649      	mov	r1, r9
 8008c88:	414b      	adcs	r3, r1
 8008c8a:	637b      	str	r3, [r7, #52]	; 0x34
 8008c8c:	f04f 0200 	mov.w	r2, #0
 8008c90:	f04f 0300 	mov.w	r3, #0
 8008c94:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8008c98:	4659      	mov	r1, fp
 8008c9a:	00cb      	lsls	r3, r1, #3
 8008c9c:	4651      	mov	r1, sl
 8008c9e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008ca2:	4651      	mov	r1, sl
 8008ca4:	00ca      	lsls	r2, r1, #3
 8008ca6:	4610      	mov	r0, r2
 8008ca8:	4619      	mov	r1, r3
 8008caa:	4603      	mov	r3, r0
 8008cac:	4642      	mov	r2, r8
 8008cae:	189b      	adds	r3, r3, r2
 8008cb0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008cb4:	464b      	mov	r3, r9
 8008cb6:	460a      	mov	r2, r1
 8008cb8:	eb42 0303 	adc.w	r3, r2, r3
 8008cbc:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008cc0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008cc4:	685b      	ldr	r3, [r3, #4]
 8008cc6:	2200      	movs	r2, #0
 8008cc8:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8008ccc:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8008cd0:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8008cd4:	460b      	mov	r3, r1
 8008cd6:	18db      	adds	r3, r3, r3
 8008cd8:	62bb      	str	r3, [r7, #40]	; 0x28
 8008cda:	4613      	mov	r3, r2
 8008cdc:	eb42 0303 	adc.w	r3, r2, r3
 8008ce0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008ce2:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8008ce6:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8008cea:	f7fd fc73 	bl	80065d4 <__aeabi_uldivmod>
 8008cee:	4602      	mov	r2, r0
 8008cf0:	460b      	mov	r3, r1
 8008cf2:	4b0d      	ldr	r3, [pc, #52]	; (8008d28 <UART_SetConfig+0x2d4>)
 8008cf4:	fba3 1302 	umull	r1, r3, r3, r2
 8008cf8:	095b      	lsrs	r3, r3, #5
 8008cfa:	2164      	movs	r1, #100	; 0x64
 8008cfc:	fb01 f303 	mul.w	r3, r1, r3
 8008d00:	1ad3      	subs	r3, r2, r3
 8008d02:	00db      	lsls	r3, r3, #3
 8008d04:	3332      	adds	r3, #50	; 0x32
 8008d06:	4a08      	ldr	r2, [pc, #32]	; (8008d28 <UART_SetConfig+0x2d4>)
 8008d08:	fba2 2303 	umull	r2, r3, r2, r3
 8008d0c:	095b      	lsrs	r3, r3, #5
 8008d0e:	f003 0207 	and.w	r2, r3, #7
 8008d12:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008d16:	681b      	ldr	r3, [r3, #0]
 8008d18:	4422      	add	r2, r4
 8008d1a:	609a      	str	r2, [r3, #8]
 8008d1c:	e106      	b.n	8008f2c <UART_SetConfig+0x4d8>
 8008d1e:	bf00      	nop
 8008d20:	40011000 	.word	0x40011000
 8008d24:	40011400 	.word	0x40011400
 8008d28:	51eb851f 	.word	0x51eb851f
 8008d2c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8008d30:	2200      	movs	r2, #0
 8008d32:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8008d36:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8008d3a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8008d3e:	4642      	mov	r2, r8
 8008d40:	464b      	mov	r3, r9
 8008d42:	1891      	adds	r1, r2, r2
 8008d44:	6239      	str	r1, [r7, #32]
 8008d46:	415b      	adcs	r3, r3
 8008d48:	627b      	str	r3, [r7, #36]	; 0x24
 8008d4a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8008d4e:	4641      	mov	r1, r8
 8008d50:	1854      	adds	r4, r2, r1
 8008d52:	4649      	mov	r1, r9
 8008d54:	eb43 0501 	adc.w	r5, r3, r1
 8008d58:	f04f 0200 	mov.w	r2, #0
 8008d5c:	f04f 0300 	mov.w	r3, #0
 8008d60:	00eb      	lsls	r3, r5, #3
 8008d62:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8008d66:	00e2      	lsls	r2, r4, #3
 8008d68:	4614      	mov	r4, r2
 8008d6a:	461d      	mov	r5, r3
 8008d6c:	4643      	mov	r3, r8
 8008d6e:	18e3      	adds	r3, r4, r3
 8008d70:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8008d74:	464b      	mov	r3, r9
 8008d76:	eb45 0303 	adc.w	r3, r5, r3
 8008d7a:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8008d7e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008d82:	685b      	ldr	r3, [r3, #4]
 8008d84:	2200      	movs	r2, #0
 8008d86:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8008d8a:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8008d8e:	f04f 0200 	mov.w	r2, #0
 8008d92:	f04f 0300 	mov.w	r3, #0
 8008d96:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8008d9a:	4629      	mov	r1, r5
 8008d9c:	008b      	lsls	r3, r1, #2
 8008d9e:	4621      	mov	r1, r4
 8008da0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8008da4:	4621      	mov	r1, r4
 8008da6:	008a      	lsls	r2, r1, #2
 8008da8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8008dac:	f7fd fc12 	bl	80065d4 <__aeabi_uldivmod>
 8008db0:	4602      	mov	r2, r0
 8008db2:	460b      	mov	r3, r1
 8008db4:	4b60      	ldr	r3, [pc, #384]	; (8008f38 <UART_SetConfig+0x4e4>)
 8008db6:	fba3 2302 	umull	r2, r3, r3, r2
 8008dba:	095b      	lsrs	r3, r3, #5
 8008dbc:	011c      	lsls	r4, r3, #4
 8008dbe:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8008dc2:	2200      	movs	r2, #0
 8008dc4:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8008dc8:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8008dcc:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8008dd0:	4642      	mov	r2, r8
 8008dd2:	464b      	mov	r3, r9
 8008dd4:	1891      	adds	r1, r2, r2
 8008dd6:	61b9      	str	r1, [r7, #24]
 8008dd8:	415b      	adcs	r3, r3
 8008dda:	61fb      	str	r3, [r7, #28]
 8008ddc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8008de0:	4641      	mov	r1, r8
 8008de2:	1851      	adds	r1, r2, r1
 8008de4:	6139      	str	r1, [r7, #16]
 8008de6:	4649      	mov	r1, r9
 8008de8:	414b      	adcs	r3, r1
 8008dea:	617b      	str	r3, [r7, #20]
 8008dec:	f04f 0200 	mov.w	r2, #0
 8008df0:	f04f 0300 	mov.w	r3, #0
 8008df4:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8008df8:	4659      	mov	r1, fp
 8008dfa:	00cb      	lsls	r3, r1, #3
 8008dfc:	4651      	mov	r1, sl
 8008dfe:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008e02:	4651      	mov	r1, sl
 8008e04:	00ca      	lsls	r2, r1, #3
 8008e06:	4610      	mov	r0, r2
 8008e08:	4619      	mov	r1, r3
 8008e0a:	4603      	mov	r3, r0
 8008e0c:	4642      	mov	r2, r8
 8008e0e:	189b      	adds	r3, r3, r2
 8008e10:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8008e14:	464b      	mov	r3, r9
 8008e16:	460a      	mov	r2, r1
 8008e18:	eb42 0303 	adc.w	r3, r2, r3
 8008e1c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8008e20:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008e24:	685b      	ldr	r3, [r3, #4]
 8008e26:	2200      	movs	r2, #0
 8008e28:	67bb      	str	r3, [r7, #120]	; 0x78
 8008e2a:	67fa      	str	r2, [r7, #124]	; 0x7c
 8008e2c:	f04f 0200 	mov.w	r2, #0
 8008e30:	f04f 0300 	mov.w	r3, #0
 8008e34:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8008e38:	4649      	mov	r1, r9
 8008e3a:	008b      	lsls	r3, r1, #2
 8008e3c:	4641      	mov	r1, r8
 8008e3e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8008e42:	4641      	mov	r1, r8
 8008e44:	008a      	lsls	r2, r1, #2
 8008e46:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8008e4a:	f7fd fbc3 	bl	80065d4 <__aeabi_uldivmod>
 8008e4e:	4602      	mov	r2, r0
 8008e50:	460b      	mov	r3, r1
 8008e52:	4611      	mov	r1, r2
 8008e54:	4b38      	ldr	r3, [pc, #224]	; (8008f38 <UART_SetConfig+0x4e4>)
 8008e56:	fba3 2301 	umull	r2, r3, r3, r1
 8008e5a:	095b      	lsrs	r3, r3, #5
 8008e5c:	2264      	movs	r2, #100	; 0x64
 8008e5e:	fb02 f303 	mul.w	r3, r2, r3
 8008e62:	1acb      	subs	r3, r1, r3
 8008e64:	011b      	lsls	r3, r3, #4
 8008e66:	3332      	adds	r3, #50	; 0x32
 8008e68:	4a33      	ldr	r2, [pc, #204]	; (8008f38 <UART_SetConfig+0x4e4>)
 8008e6a:	fba2 2303 	umull	r2, r3, r2, r3
 8008e6e:	095b      	lsrs	r3, r3, #5
 8008e70:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8008e74:	441c      	add	r4, r3
 8008e76:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8008e7a:	2200      	movs	r2, #0
 8008e7c:	673b      	str	r3, [r7, #112]	; 0x70
 8008e7e:	677a      	str	r2, [r7, #116]	; 0x74
 8008e80:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8008e84:	4642      	mov	r2, r8
 8008e86:	464b      	mov	r3, r9
 8008e88:	1891      	adds	r1, r2, r2
 8008e8a:	60b9      	str	r1, [r7, #8]
 8008e8c:	415b      	adcs	r3, r3
 8008e8e:	60fb      	str	r3, [r7, #12]
 8008e90:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8008e94:	4641      	mov	r1, r8
 8008e96:	1851      	adds	r1, r2, r1
 8008e98:	6039      	str	r1, [r7, #0]
 8008e9a:	4649      	mov	r1, r9
 8008e9c:	414b      	adcs	r3, r1
 8008e9e:	607b      	str	r3, [r7, #4]
 8008ea0:	f04f 0200 	mov.w	r2, #0
 8008ea4:	f04f 0300 	mov.w	r3, #0
 8008ea8:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8008eac:	4659      	mov	r1, fp
 8008eae:	00cb      	lsls	r3, r1, #3
 8008eb0:	4651      	mov	r1, sl
 8008eb2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008eb6:	4651      	mov	r1, sl
 8008eb8:	00ca      	lsls	r2, r1, #3
 8008eba:	4610      	mov	r0, r2
 8008ebc:	4619      	mov	r1, r3
 8008ebe:	4603      	mov	r3, r0
 8008ec0:	4642      	mov	r2, r8
 8008ec2:	189b      	adds	r3, r3, r2
 8008ec4:	66bb      	str	r3, [r7, #104]	; 0x68
 8008ec6:	464b      	mov	r3, r9
 8008ec8:	460a      	mov	r2, r1
 8008eca:	eb42 0303 	adc.w	r3, r2, r3
 8008ece:	66fb      	str	r3, [r7, #108]	; 0x6c
 8008ed0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008ed4:	685b      	ldr	r3, [r3, #4]
 8008ed6:	2200      	movs	r2, #0
 8008ed8:	663b      	str	r3, [r7, #96]	; 0x60
 8008eda:	667a      	str	r2, [r7, #100]	; 0x64
 8008edc:	f04f 0200 	mov.w	r2, #0
 8008ee0:	f04f 0300 	mov.w	r3, #0
 8008ee4:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8008ee8:	4649      	mov	r1, r9
 8008eea:	008b      	lsls	r3, r1, #2
 8008eec:	4641      	mov	r1, r8
 8008eee:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8008ef2:	4641      	mov	r1, r8
 8008ef4:	008a      	lsls	r2, r1, #2
 8008ef6:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8008efa:	f7fd fb6b 	bl	80065d4 <__aeabi_uldivmod>
 8008efe:	4602      	mov	r2, r0
 8008f00:	460b      	mov	r3, r1
 8008f02:	4b0d      	ldr	r3, [pc, #52]	; (8008f38 <UART_SetConfig+0x4e4>)
 8008f04:	fba3 1302 	umull	r1, r3, r3, r2
 8008f08:	095b      	lsrs	r3, r3, #5
 8008f0a:	2164      	movs	r1, #100	; 0x64
 8008f0c:	fb01 f303 	mul.w	r3, r1, r3
 8008f10:	1ad3      	subs	r3, r2, r3
 8008f12:	011b      	lsls	r3, r3, #4
 8008f14:	3332      	adds	r3, #50	; 0x32
 8008f16:	4a08      	ldr	r2, [pc, #32]	; (8008f38 <UART_SetConfig+0x4e4>)
 8008f18:	fba2 2303 	umull	r2, r3, r2, r3
 8008f1c:	095b      	lsrs	r3, r3, #5
 8008f1e:	f003 020f 	and.w	r2, r3, #15
 8008f22:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008f26:	681b      	ldr	r3, [r3, #0]
 8008f28:	4422      	add	r2, r4
 8008f2a:	609a      	str	r2, [r3, #8]
 8008f2c:	bf00      	nop
 8008f2e:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8008f32:	46bd      	mov	sp, r7
 8008f34:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008f38:	51eb851f 	.word	0x51eb851f

08008f3c <memset>:
 8008f3c:	4402      	add	r2, r0
 8008f3e:	4603      	mov	r3, r0
 8008f40:	4293      	cmp	r3, r2
 8008f42:	d100      	bne.n	8008f46 <memset+0xa>
 8008f44:	4770      	bx	lr
 8008f46:	f803 1b01 	strb.w	r1, [r3], #1
 8008f4a:	e7f9      	b.n	8008f40 <memset+0x4>

08008f4c <__libc_init_array>:
 8008f4c:	b570      	push	{r4, r5, r6, lr}
 8008f4e:	4d0d      	ldr	r5, [pc, #52]	; (8008f84 <__libc_init_array+0x38>)
 8008f50:	4c0d      	ldr	r4, [pc, #52]	; (8008f88 <__libc_init_array+0x3c>)
 8008f52:	1b64      	subs	r4, r4, r5
 8008f54:	10a4      	asrs	r4, r4, #2
 8008f56:	2600      	movs	r6, #0
 8008f58:	42a6      	cmp	r6, r4
 8008f5a:	d109      	bne.n	8008f70 <__libc_init_array+0x24>
 8008f5c:	4d0b      	ldr	r5, [pc, #44]	; (8008f8c <__libc_init_array+0x40>)
 8008f5e:	4c0c      	ldr	r4, [pc, #48]	; (8008f90 <__libc_init_array+0x44>)
 8008f60:	f000 f818 	bl	8008f94 <_init>
 8008f64:	1b64      	subs	r4, r4, r5
 8008f66:	10a4      	asrs	r4, r4, #2
 8008f68:	2600      	movs	r6, #0
 8008f6a:	42a6      	cmp	r6, r4
 8008f6c:	d105      	bne.n	8008f7a <__libc_init_array+0x2e>
 8008f6e:	bd70      	pop	{r4, r5, r6, pc}
 8008f70:	f855 3b04 	ldr.w	r3, [r5], #4
 8008f74:	4798      	blx	r3
 8008f76:	3601      	adds	r6, #1
 8008f78:	e7ee      	b.n	8008f58 <__libc_init_array+0xc>
 8008f7a:	f855 3b04 	ldr.w	r3, [r5], #4
 8008f7e:	4798      	blx	r3
 8008f80:	3601      	adds	r6, #1
 8008f82:	e7f2      	b.n	8008f6a <__libc_init_array+0x1e>
 8008f84:	08008fdc 	.word	0x08008fdc
 8008f88:	08008fdc 	.word	0x08008fdc
 8008f8c:	08008fdc 	.word	0x08008fdc
 8008f90:	08008fe0 	.word	0x08008fe0

08008f94 <_init>:
 8008f94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f96:	bf00      	nop
 8008f98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008f9a:	bc08      	pop	{r3}
 8008f9c:	469e      	mov	lr, r3
 8008f9e:	4770      	bx	lr

08008fa0 <_fini>:
 8008fa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008fa2:	bf00      	nop
 8008fa4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008fa6:	bc08      	pop	{r3}
 8008fa8:	469e      	mov	lr, r3
 8008faa:	4770      	bx	lr
